CCS PCH C Compiler, Version 4.104, 5967               20-oct.-17 14:24

               Filename: H:\JP\JP\Laboratorio\Cabina de Flujo Laminar Horizontal\2017\CFLH180 Cabina Flores La Serena #004587669\Firmware\Programa Funcional\Programa PIC Maestro\Maestro_v2.lst

               ROM used: 30520 bytes (93%)
                         Largest free fragment is 2244
               RAM used: 1588 (78%) at main() level
                         1644 (80%) worst case
               Stack:    5 worst case (4 in main + 1 for interrupts)

*
0000:  GOTO   31EE
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  00,0E
003C:  MOVFF  01,0F
0040:  MOVFF  02,10
0044:  MOVFF  03,11
0048:  BTFSS  F9D.0
004A:  GOTO   0054
004E:  BTFSC  F9E.0
0050:  GOTO   10EE
0054:  MOVFF  0E,00
0058:  MOVFF  0F,01
005C:  MOVFF  10,02
0060:  MOVFF  11,03
0064:  MOVFF  0C,FE9
0068:  MOVFF  07,FEA
006C:  BSF    07.7
006E:  MOVFF  08,FE1
0072:  MOVFF  09,FE2
0076:  MOVFF  0A,FD9
007A:  MOVFF  0B,FDA
007E:  MOVFF  12,FF3
0082:  MOVFF  13,FF4
0086:  MOVFF  14,FFA
008A:  MOVF   04,W
008C:  MOVFF  06,FE0
0090:  MOVFF  05,FD8
0094:  RETFIE 0
.................... // Comunicación USB para control de fermentador. 
.................... // Reloj con XT de 4 MHz. 
.................... // Programación para Fermentador de 7 Litros 
.................... // Tiene Control: pH,Oxigeno Disuelto, CO2, Temperatura, Agitación y Foam. 
.................... // Tiene Control de cuatro bombas peristalticas: Acido, Base, Foam y Medio. 
.................... // Interfaz de control realizada en PC touch todo en uno Lenovo. 
.................... // Desarrollo de la interfaz en Java NetBeans. 
.................... // Ing. Juan David Piñeros Espinosa. 
.................... // Ing. Faiver Humberto Trujillo. 
.................... // JP Inglobal. 2015 
....................  
.................... #include <18F4550.h> 
.................... //////// Standard Header file for the PIC18F4550 device //////////////// 
.................... #device PIC18F4550 
.................... #list 
....................  
.................... #device adc=10 
.................... #fuses HSPLL,NOWDT,NOPROTECT,NOLVP,NODEBUG,USBDIV,PLL1,CPUDIV1,VREGEN,NOMCLR 
.................... #use delay(clock=48000000) 
*
126A:  MOVLW  06
126C:  MOVWF  FEA
126E:  MOVLW  31
1270:  MOVWF  FE9
1272:  MOVF   FEF,W
1274:  BZ    1292
1276:  MOVLW  0F
1278:  MOVWF  01
127A:  CLRF   00
127C:  DECFSZ 00,F
127E:  BRA    127C
1280:  DECFSZ 01,F
1282:  BRA    127A
1284:  MOVLW  8F
1286:  MOVWF  00
1288:  DECFSZ 00,F
128A:  BRA    1288
128C:  NOP   
128E:  DECFSZ FEF,F
1290:  BRA    1276
1292:  RETLW  00
.................... #use i2c(Master,fast,sda=PIN_B0,scl=PIN_B1) 
*
188A:  MOVLW  08
188C:  MOVWF  01
188E:  MOVLW  02
1890:  MOVWF  00
1892:  DECFSZ 00,F
1894:  BRA    1892
1896:  BCF    F8A.1
1898:  BCF    F93.1
189A:  MOVLW  02
189C:  MOVWF  00
189E:  DECFSZ 00,F
18A0:  BRA    189E
18A2:  MOVLB  6
18A4:  RLCF   x34,F
18A6:  BCF    F8A.0
18A8:  BTFSC  FD8.0
18AA:  BSF    F93.0
18AC:  BTFSS  FD8.0
18AE:  BCF    F93.0
18B0:  BSF    F93.1
18B2:  BTFSS  F81.1
18B4:  BRA    18B2
18B6:  DECFSZ 01,F
18B8:  BRA    18BC
18BA:  BRA    18C0
18BC:  MOVLB  0
18BE:  BRA    188E
18C0:  MOVLW  02
18C2:  MOVWF  00
18C4:  DECFSZ 00,F
18C6:  BRA    18C4
18C8:  BCF    F8A.1
18CA:  BCF    F93.1
18CC:  NOP   
18CE:  BSF    F93.0
18D0:  MOVLW  02
18D2:  MOVWF  00
18D4:  DECFSZ 00,F
18D6:  BRA    18D4
18D8:  MOVLW  02
18DA:  MOVWF  00
18DC:  DECFSZ 00,F
18DE:  BRA    18DC
18E0:  BSF    F93.1
18E2:  BTFSS  F81.1
18E4:  BRA    18E2
18E6:  CLRF   01
18E8:  MOVLW  02
18EA:  MOVWF  00
18EC:  DECFSZ 00,F
18EE:  BRA    18EC
18F0:  BTFSC  F81.0
18F2:  BSF    01.0
18F4:  BCF    F8A.1
18F6:  BCF    F93.1
18F8:  BCF    F8A.0
18FA:  BCF    F93.0
18FC:  MOVLB  0
18FE:  RETLW  00
*
22D6:  MOVLW  08
22D8:  MOVLB  6
22DA:  MOVWF  x34
22DC:  MOVFF  00,635
22E0:  BSF    F93.0
22E2:  MOVLW  02
22E4:  MOVWF  00
22E6:  DECFSZ 00,F
22E8:  BRA    22E6
22EA:  BSF    F93.1
22EC:  BTFSS  F81.1
22EE:  BRA    22EC
22F0:  BTFSC  F81.0
22F2:  BSF    FD8.0
22F4:  BTFSS  F81.0
22F6:  BCF    FD8.0
22F8:  RLCF   01,F
22FA:  MOVLW  02
22FC:  MOVWF  00
22FE:  DECFSZ 00,F
2300:  BRA    22FE
2302:  BCF    F93.1
2304:  BCF    F8A.1
2306:  DECFSZ x34,F
2308:  BRA    22E0
230A:  BSF    F93.0
230C:  MOVLW  02
230E:  MOVWF  00
2310:  DECFSZ 00,F
2312:  BRA    2310
2314:  BCF    F8A.0
2316:  MOVF   x35,W
2318:  BTFSS  FD8.2
231A:  BCF    F93.0
231C:  NOP   
231E:  BSF    F93.1
2320:  BTFSS  F81.1
2322:  BRA    2320
2324:  MOVLW  02
2326:  MOVWF  00
2328:  DECFSZ 00,F
232A:  BRA    2328
232C:  BCF    F8A.1
232E:  BCF    F93.1
2330:  MOVLW  02
2332:  MOVWF  00
2334:  DECFSZ 00,F
2336:  BRA    2334
2338:  BCF    F8A.0
233A:  BCF    F93.0
233C:  MOVLB  0
233E:  GOTO   2A4A (RETURN)
.................... #include "HDM64GS12.c" 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                           HDM64GS12.c                           //// 
.................... ////                                                                 //// 
.................... //// This file contains drivers for using a Hantronix HDM64GS12 with //// 
.................... //// a KS0108 display controller. The HDM64GS12 is 128 by 64 pixels. //// 
.................... //// The driver treats the upper left pixel as (0,0).                //// 
.................... ////                                                                 //// 
.................... //// Use #define FAST_GLCD if the target chip has at least 1k of RAM //// 
.................... //// to decrease the time it takes to update the display.            //// 
.................... //// glcd_update() must then be called to update the display after   //// 
.................... //// changing the pixel information.                                 //// 
.................... //// See ex_glcd.c for suggested usage.                              //// 
.................... //// See KS0108.c for controlling a single 64 by 64 display          //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... //// LCD Pin connections:                                            //// 
.................... //// (These can be changed as needed in the following defines).      //// 
.................... ////  * 1: VSS is connected to GND                                   //// 
.................... ////  * 2: VDD is connected to +5V                                   //// 
.................... ////  * 3: V0  - LCD operating voltage (Constrast adjustment)        //// 
.................... ////  * 4: D/I - Data or Instruction is connected to B2              //// 
.................... ////  * 5: R/W - Read or Write is connected to B4                    //// 
.................... ////  * 6: Enable is connected to B5                                 //// 
.................... ////  *7-14: Data Bus 0 to 7 is connected to port d                  //// 
.................... ////  *15: Chip Select 1 is connected to B0                          //// 
.................... ////  *16: Chip Select 2 is connected to B1                          //// 
.................... ////  *17: Reset is connected to C0                                  //// 
.................... ////  *18: Negative voltage is also connected to the 20k Ohm POT     //// 
.................... ////  *19: Positive voltage for LED backlight is connected to +5V    //// 
.................... ////  *20: Negavtive voltage for LED backlight is connected to GND   //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... ////  glcd_init(mode)                                                //// 
.................... ////     * Must be called before any other function.                 //// 
.................... ////       - mode can be ON or OFF to turn the LCD on or off         //// 
.................... ////                                                                 //// 
.................... ////  glcd_pixel(x,y,color)                                          //// 
.................... ////     * Sets the pixel to the given color.                        //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_fillScreen(color)                                         //// 
.................... ////     * Fills the entire LCD with the given color.                //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_update()                                                  //// 
.................... ////     * Write the display data stored in RAM to the LCD           //// 
.................... ////     * Only available if FAST_GLCD is defined                    //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2004 Custom Computer Services        //// 
.................... //// This source code may only be used by licensed users of the CCS  //// 
.................... //// C compiler.  This source code may only be distributed to other  //// 
.................... //// licensed users of the CCS C compiler.  No other use,            //// 
.................... //// reproduction or distribution is permitted without written       //// 
.................... //// permission.  Derivative programs created using this software    //// 
.................... //// in object code form are not restricted in any way.              //// 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
....................  
.................... #ifndef HDM64GS12 
.................... #define HDM64GS12 
....................  
.................... #ifndef FAST_GLCD 
.................... #define FAST_GLCD 
....................  
.................... #ifndef GLCD_WIDTH 
.................... #define GLCD_WIDTH   128 
.................... #endif 
....................  
.................... #ifndef GLCD_CS1 
.................... #define GLCD_CS1     PIN_B3   // Chip Selection 1 
.................... #endif 
....................  
.................... #ifndef GLCD_CS2 
.................... #define GLCD_CS2     PIN_B4   // Chip Selection 2 
.................... #endif 
....................  
.................... #ifndef GLCD_DI 
.................... #define GLCD_DI      PIN_B5   // Data or Instruction input 
.................... #endif 
....................  
.................... #ifndef GLCD_RW 
.................... #define GLCD_RW      PIN_B6   // Read/Write 
.................... #endif 
....................  
.................... #ifndef GLCD_E 
.................... #define GLCD_E       PIN_B7   // Enable 
.................... #endif 
....................  
.................... #ifndef GLCD_RST 
.................... #define GLCD_RST     PIN_B2   // Reset 
.................... #endif 
....................  
.................... #define GLCD_LEFT    0 
.................... #define GLCD_RIGHT   1 
....................  
.................... #ifndef ON 
.................... #define ON           1 
.................... #endif 
....................  
.................... #ifndef OFF 
.................... #define OFF          0 
.................... #endif 
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Function Prototypes 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... void glcd_init(int1 mode); 
.................... void glcd_pixel(int8 x, int8 y, int1 color); 
.................... void glcd_fillScreen(int1 color); 
.................... void glcd_writeByte(int1 side, BYTE data); 
.................... BYTE glcd_readByte(int1 side); 
.................... void glcd_update(); 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
.................... #ifdef FAST_GLCD 
.................... struct 
.................... { 
....................    int8 left[512]; 
....................    int8 right[512]; 
.................... } displayData; 
.................... #endif 
....................  
....................  
.................... // Purpose:       Initialize the LCD. 
.................... //                Call before using any other LCD function. 
.................... // Inputs:        OFF - Turns the LCD off 
.................... //                ON  - Turns the LCD on 
.................... void glcd_init(int1 mode) 
.................... { 
....................    // Initialze some pins 
....................    output_high(GLCD_RST); 
*
312E:  BCF    F93.2
3130:  BSF    F8A.2
....................    output_low(GLCD_E); 
3132:  BCF    F93.7
3134:  BCF    F8A.7
....................    output_low(GLCD_CS1); 
3136:  BCF    F93.3
3138:  BCF    F8A.3
....................    output_low(GLCD_CS2); 
313A:  BCF    F93.4
313C:  BCF    F8A.4
....................  
....................    output_low(GLCD_DI);                 // Set for instruction 
313E:  BCF    F93.5
3140:  BCF    F8A.5
....................    glcd_writeByte(GLCD_LEFT,  0xC0);    // Specify first RAM line at the top 
3142:  MOVLB  6
3144:  CLRF   x38
3146:  MOVLW  C0
3148:  MOVWF  x39
314A:  MOVLB  0
314C:  CALL   1996
....................    glcd_writeByte(GLCD_RIGHT, 0xC0);    //   of the screen 
3150:  MOVLW  01
3152:  MOVLB  6
3154:  MOVWF  x38
3156:  MOVLW  C0
3158:  MOVWF  x39
315A:  MOVLB  0
315C:  CALL   1996
....................    glcd_writeByte(GLCD_LEFT,  0x40);    // Set the column address to 0 
3160:  MOVLB  6
3162:  CLRF   x38
3164:  MOVLW  40
3166:  MOVWF  x39
3168:  MOVLB  0
316A:  CALL   1996
....................    glcd_writeByte(GLCD_RIGHT, 0x40); 
316E:  MOVLW  01
3170:  MOVLB  6
3172:  MOVWF  x38
3174:  MOVLW  40
3176:  MOVWF  x39
3178:  MOVLB  0
317A:  CALL   1996
....................    glcd_writeByte(GLCD_LEFT,  0xB8);    // Set the page address to 0 
317E:  MOVLB  6
3180:  CLRF   x38
3182:  MOVLW  B8
3184:  MOVWF  x39
3186:  MOVLB  0
3188:  CALL   1996
....................    glcd_writeByte(GLCD_RIGHT, 0xB8); 
318C:  MOVLW  01
318E:  MOVLB  6
3190:  MOVWF  x38
3192:  MOVLW  B8
3194:  MOVWF  x39
3196:  MOVLB  0
3198:  CALL   1996
....................  
....................    if(mode == ON) 
319C:  MOVLB  6
319E:  DECFSZ x30,W
31A0:  BRA    31C2
....................    { 
....................       glcd_writeByte(GLCD_LEFT,  0x3F); // Turn the display on 
31A2:  CLRF   x38
31A4:  MOVLW  3F
31A6:  MOVWF  x39
31A8:  MOVLB  0
31AA:  CALL   1996
....................       glcd_writeByte(GLCD_RIGHT, 0x3F); 
31AE:  MOVLW  01
31B0:  MOVLB  6
31B2:  MOVWF  x38
31B4:  MOVLW  3F
31B6:  MOVWF  x39
31B8:  MOVLB  0
31BA:  CALL   1996
....................    } 
....................    else 
31BE:  BRA    31DE
31C0:  MOVLB  6
....................    { 
....................       glcd_writeByte(GLCD_LEFT,  0x3E); // Turn the display off 
31C2:  CLRF   x38
31C4:  MOVLW  3E
31C6:  MOVWF  x39
31C8:  MOVLB  0
31CA:  CALL   1996
....................       glcd_writeByte(GLCD_RIGHT, 0x3E); 
31CE:  MOVLW  01
31D0:  MOVLB  6
31D2:  MOVWF  x38
31D4:  MOVLW  3E
31D6:  MOVWF  x39
31D8:  MOVLB  0
31DA:  CALL   1996
....................    } 
....................  
....................    glcd_fillScreen(OFF);                // Clear the display 
31DE:  MOVLB  6
31E0:  CLRF   x31
31E2:  MOVLB  0
31E4:  CALL   20E2
....................  
....................    #ifdef FAST_GLCD 
....................    glcd_update(); 
31E8:  CALL   19D6
....................    #endif 
.................... } 
31EC:  RETLW  00
....................  
....................  
.................... // Purpose:    Update the LCD with data from the display arrays 
.................... #ifdef FAST_GLCD 
.................... void glcd_update() 
.................... { 
....................    int8 i, j; 
....................    int8 *p1, *p2; 
....................  
....................    p1 = displayData.left; 
*
19D6:  MOVLB  6
19D8:  CLRF   x34
19DA:  MOVLW  16
19DC:  MOVWF  x33
....................    p2 = displayData.right; 
19DE:  MOVLW  02
19E0:  MOVWF  x36
19E2:  MOVLW  16
19E4:  MOVWF  x35
....................  
....................    // Loop through the vertical pages 
....................    for(i = 0; i < 8; ++i) 
19E6:  CLRF   x31
19E8:  MOVF   x31,W
19EA:  SUBLW  07
19EC:  BNC   1A8A
....................    { 
....................       output_low(GLCD_DI);                      // Set for instruction 
19EE:  BCF    F93.5
19F0:  BCF    F8A.5
....................       glcd_writeByte(GLCD_LEFT, 0x40);          // Set horizontal address to 0 
19F2:  CLRF   x38
19F4:  MOVLW  40
19F6:  MOVWF  x39
19F8:  MOVLB  0
19FA:  RCALL  1996
....................       glcd_writeByte(GLCD_RIGHT, 0x40); 
19FC:  MOVLW  01
19FE:  MOVLB  6
1A00:  MOVWF  x38
1A02:  MOVLW  40
1A04:  MOVWF  x39
1A06:  MOVLB  0
1A08:  RCALL  1996
....................       glcd_writeByte(GLCD_LEFT, i | 0xB8);      // Set page address 
1A0A:  MOVLB  6
1A0C:  MOVF   x31,W
1A0E:  IORLW  B8
1A10:  MOVWF  x37
1A12:  CLRF   x38
1A14:  MOVWF  x39
1A16:  MOVLB  0
1A18:  RCALL  1996
....................       glcd_writeByte(GLCD_RIGHT, i | 0xB8); 
1A1A:  MOVLB  6
1A1C:  MOVF   x31,W
1A1E:  IORLW  B8
1A20:  MOVWF  x37
1A22:  MOVLW  01
1A24:  MOVWF  x38
1A26:  MOVFF  637,639
1A2A:  MOVLB  0
1A2C:  RCALL  1996
....................       output_high(GLCD_DI);                     // Set for data 
1A2E:  BCF    F93.5
1A30:  BSF    F8A.5
....................  
....................       // Loop through the horizontal sections 
....................       for(j = 0; j < 64; ++j) 
1A32:  MOVLB  6
1A34:  CLRF   x32
1A36:  MOVF   x32,W
1A38:  SUBLW  3F
1A3A:  BNC   1A86
....................       { 
....................          glcd_writeByte(GLCD_LEFT, *p1++);      // Turn pixels on or off 
1A3C:  MOVFF  634,03
1A40:  MOVF   x33,W
1A42:  INCF   x33,F
1A44:  BTFSC  FD8.2
1A46:  INCF   x34,F
1A48:  MOVWF  FE9
1A4A:  MOVFF  03,FEA
1A4E:  MOVFF  FEF,637
1A52:  CLRF   x38
1A54:  MOVFF  637,639
1A58:  MOVLB  0
1A5A:  RCALL  1996
....................          glcd_writeByte(GLCD_RIGHT, *p2++);     // Turn pixels on or off 
1A5C:  MOVLB  6
1A5E:  MOVFF  636,03
1A62:  MOVF   x35,W
1A64:  INCF   x35,F
1A66:  BTFSC  FD8.2
1A68:  INCF   x36,F
1A6A:  MOVWF  FE9
1A6C:  MOVFF  03,FEA
1A70:  MOVFF  FEF,637
1A74:  MOVLW  01
1A76:  MOVWF  x38
1A78:  MOVFF  637,639
1A7C:  MOVLB  0
1A7E:  RCALL  1996
....................       } 
1A80:  MOVLB  6
1A82:  INCF   x32,F
1A84:  BRA    1A36
....................    } 
1A86:  INCF   x31,F
1A88:  BRA    19E8
.................... } 
1A8A:  MOVLB  0
1A8C:  RETLW  00
.................... #endif 
....................  
....................  
.................... // Purpose:    Turn a pixel on a graphic LCD on or off 
.................... // Inputs:     1) x - the x coordinate of the pixel 
.................... //             2) y - the y coordinate of the pixel 
.................... //             3) color - ON or OFF 
.................... void glcd_pixel(int8 x, int8 y, int1 color) 
.................... #ifdef FAST_GLCD 
.................... { 
....................    int8* p; 
....................    int16 temp; 
....................    temp =  y/8; 
1A8E:  MOVLB  6
1A90:  CLRF   x68
1A92:  RRCF   x63,W
1A94:  MOVWF  x67
1A96:  RRCF   x67,F
1A98:  RRCF   x67,F
1A9A:  MOVLW  1F
1A9C:  ANDWF  x67,F
....................    temp *= 64; 
1A9E:  RLCF   x67,F
1AA0:  RLCF   x68,F
1AA2:  RLCF   x67,F
1AA4:  RLCF   x68,F
1AA6:  RLCF   x67,F
1AA8:  RLCF   x68,F
1AAA:  RLCF   x67,F
1AAC:  RLCF   x68,F
1AAE:  RLCF   x67,F
1AB0:  RLCF   x68,F
1AB2:  RLCF   x67,F
1AB4:  RLCF   x68,F
1AB6:  MOVLW  C0
1AB8:  ANDWF  x67,F
....................    temp += x; 
1ABA:  MOVF   x62,W
1ABC:  ADDWF  x67,F
1ABE:  MOVLW  00
1AC0:  ADDWFC x68,F
....................  
....................    if(x > 63) 
1AC2:  MOVF   x62,W
1AC4:  SUBLW  3F
1AC6:  BC    1AE2
....................    { 
....................       p = displayData.right + temp - 64; 
1AC8:  MOVLW  16
1ACA:  ADDWF  x67,W
1ACC:  MOVWF  x69
1ACE:  MOVLW  02
1AD0:  ADDWFC x68,W
1AD2:  MOVWF  x6A
1AD4:  MOVLW  40
1AD6:  SUBWF  x69,W
1AD8:  MOVWF  x65
1ADA:  MOVLW  00
1ADC:  SUBWFB x6A,W
1ADE:  MOVWF  x66
....................    } 
....................    else 
1AE0:  BRA    1AEE
....................    { 
....................       p = displayData.left + temp; 
1AE2:  MOVLW  16
1AE4:  ADDWF  x67,W
1AE6:  MOVWF  x65
1AE8:  MOVLW  00
1AEA:  ADDWFC x68,W
1AEC:  MOVWF  x66
....................    } 
....................  
....................    if(color) 
1AEE:  MOVF   x64,F
1AF0:  BZ    1B1C
....................    { 
....................       bit_set(*p, y%8); 
1AF2:  MOVFF  666,03
1AF6:  MOVFF  665,FE9
1AFA:  MOVFF  666,FEA
1AFE:  MOVF   x63,W
1B00:  ANDLW  07
1B02:  MOVWF  x69
1B04:  MOVLW  01
1B06:  MOVWF  00
1B08:  MOVF   x69,W
1B0A:  MOVWF  01
1B0C:  BZ    1B16
1B0E:  BCF    FD8.0
1B10:  RLCF   00,F
1B12:  DECFSZ 01,F
1B14:  BRA    1B0E
1B16:  MOVF   00,W
1B18:  IORWF  FEF,F
....................    } 
....................    else 
1B1A:  BRA    1B46
....................    { 
....................       bit_clear(*p, y%8); 
1B1C:  MOVFF  666,03
1B20:  MOVFF  665,FE9
1B24:  MOVFF  666,FEA
1B28:  MOVF   x63,W
1B2A:  ANDLW  07
1B2C:  MOVWF  x69
1B2E:  MOVLW  01
1B30:  MOVWF  00
1B32:  MOVF   x69,W
1B34:  MOVWF  01
1B36:  BZ    1B40
1B38:  BCF    FD8.0
1B3A:  RLCF   00,F
1B3C:  DECFSZ 01,F
1B3E:  BRA    1B38
1B40:  MOVF   00,W
1B42:  XORLW  FF
1B44:  ANDWF  FEF,F
....................    } 
.................... } 
1B46:  MOVLB  0
1B48:  RETLW  00
.................... #else 
.................... { 
....................    BYTE data; 
....................    int1 side = GLCD_LEFT;  // Stores which chip to use on the LCD 
....................  
....................    if(x > 63)              // Check for first or second display area 
....................    { 
....................       x -= 64; 
....................       side = GLCD_RIGHT; 
....................    } 
....................  
....................    output_low(GLCD_DI);                         // Set for instruction 
....................    bit_clear(x,7);                              // Clear the MSB. Part of an instruction code 
....................    bit_set(x,6);                                // Set bit 6. Also part of an instruction code 
....................    glcd_writeByte(side, x);                     // Set the horizontal address 
....................    glcd_writeByte(side, (y/8 & 0xBF) | 0xB8);   // Set the vertical page address 
....................    output_high(GLCD_DI);                        // Set for data 
....................    glcd_readByte(side);                         // Need two reads to get data 
....................    data = glcd_readByte(side);                  //  at new address 
....................  
....................    if(color == ON) 
....................       bit_set(data, y%8);        // Turn the pixel on 
....................    else                          // or 
....................       bit_clear(data, y%8);      // turn the pixel off 
....................  
....................    output_low(GLCD_DI);          // Set for instruction 
....................    glcd_writeByte(side, x);      // Set the horizontal address 
....................    output_high(GLCD_DI);         // Set for data 
....................    glcd_writeByte(side, data);   // Write the pixel data 
.................... } 
.................... #endif 
....................  
....................  
.................... // Purpose:    Fill the LCD screen with the passed in color 
.................... // Inputs:     ON  - turn all the pixels on 
.................... //             OFF - turn all the pixels off 
.................... void glcd_fillScreen(int1 color) 
.................... #ifdef FAST_GLCD 
.................... { 
....................    int8  data; 
....................    int8  *p1, *p2; 
....................    int16 i; 
....................  
....................    p1 = displayData.left; 
*
20E2:  MOVLB  6
20E4:  CLRF   x34
20E6:  MOVLW  16
20E8:  MOVWF  x33
....................    p2 = displayData.right; 
20EA:  MOVLW  02
20EC:  MOVWF  x36
20EE:  MOVLW  16
20F0:  MOVWF  x35
....................    data = 0xFF * color; 
20F2:  MOVF   x31,W
20F4:  MULLW  FF
20F6:  MOVFF  FF3,632
....................  
....................    for(i=0; i<512; ++i) 
20FA:  CLRF   x38
20FC:  CLRF   x37
20FE:  MOVF   x38,W
2100:  SUBLW  01
2102:  BNC   2138
....................    { 
....................       *p1++ = data; 
2104:  MOVFF  634,03
2108:  MOVF   x33,W
210A:  INCF   x33,F
210C:  BTFSC  FD8.2
210E:  INCF   x34,F
2110:  MOVWF  FE9
2112:  MOVFF  03,FEA
2116:  MOVFF  632,FEF
....................       *p2++ = data; 
211A:  MOVFF  636,03
211E:  MOVF   x35,W
2120:  INCF   x35,F
2122:  BTFSC  FD8.2
2124:  INCF   x36,F
2126:  MOVWF  FE9
2128:  MOVFF  03,FEA
212C:  MOVFF  632,FEF
....................    } 
2130:  INCF   x37,F
2132:  BTFSC  FD8.2
2134:  INCF   x38,F
2136:  BRA    20FE
.................... } 
2138:  MOVLB  0
213A:  RETLW  00
.................... #else 
.................... { 
....................    int8 i, j; 
....................  
....................    // Loop through the vertical pages 
....................    for(i = 0; i < 8; ++i) 
....................    { 
....................       output_low(GLCD_DI);                      // Set for instruction 
....................       glcd_writeByte(GLCD_LEFT, 0b01000000);    // Set horizontal address to 0 
....................       glcd_writeByte(GLCD_RIGHT, 0b01000000); 
....................       glcd_writeByte(GLCD_LEFT, i | 0b10111000);// Set page address 
....................       glcd_writeByte(GLCD_RIGHT, i | 0b10111000); 
....................       output_high(GLCD_DI);                     // Set for data 
....................  
....................       // Loop through the horizontal sections 
....................       for(j = 0; j < 64; ++j) 
....................       { 
....................          glcd_writeByte(GLCD_LEFT, 0xFF*color);  // Turn pixels on or off 
....................          glcd_writeByte(GLCD_RIGHT, 0xFF*color); // Turn pixels on or off 
....................       } 
....................    } 
.................... } 
.................... #endif 
....................  
....................  
.................... // Purpose:    Write a byte of data to the specified chip 
.................... // Inputs:     1) chipSelect - which chip to write the data to 
.................... //             2) data - the byte of data to write 
.................... void glcd_writeByte(int1 side, BYTE data) 
.................... { 
....................    if(side)                   // Choose which side to write to 
*
1996:  MOVLB  6
1998:  MOVF   x38,F
199A:  BZ    19A2
....................       output_high(GLCD_CS2); 
199C:  BCF    F93.4
199E:  BSF    F8A.4
....................    else 
19A0:  BRA    19A6
....................       output_high(GLCD_CS1); 
19A2:  BCF    F93.3
19A4:  BSF    F8A.3
....................  
....................    output_low(GLCD_RW);       // Set for writing 
19A6:  BCF    F93.6
19A8:  BCF    F8A.6
....................    output_d(data);            // Put the data on the port 
19AA:  CLRF   F95
19AC:  MOVFF  639,F8C
....................    delay_cycles(50); 
19B0:  MOVLW  10
19B2:  MOVWF  00
19B4:  DECFSZ 00,F
19B6:  BRA    19B4
19B8:  NOP   
....................    output_high(GLCD_E);       // Pulse the enable pin 
19BA:  BCF    F93.7
19BC:  BSF    F8A.7
....................    delay_cycles(250); 
19BE:  MOVLW  53
19C0:  MOVWF  00
19C2:  DECFSZ 00,F
19C4:  BRA    19C2
....................    output_low(GLCD_E); 
19C6:  BCF    F93.7
19C8:  BCF    F8A.7
....................  
....................    output_low(GLCD_CS1);      // Reset the chip select lines 
19CA:  BCF    F93.3
19CC:  BCF    F8A.3
....................    output_low(GLCD_CS2); 
19CE:  BCF    F93.4
19D0:  BCF    F8A.4
.................... } 
19D2:  MOVLB  0
19D4:  RETLW  00
....................  
....................  
.................... // Purpose:    Reads a byte of data from the specified chip 
.................... // Ouputs:     A byte of data read from the chip 
.................... BYTE glcd_readByte(int1 side) 
.................... { 
....................    BYTE data;                 // Stores the data read from the LCD 
....................  
....................    set_tris_d(0xFF);          // Set port d to input 
....................    output_high(GLCD_RW);      // Set for reading 
....................  
....................    if(side)                   // Choose which side to write to 
....................       output_high(GLCD_CS2); 
....................    else 
....................       output_high(GLCD_CS1); 
....................  
....................    delay_cycles(50); 
....................    output_high(GLCD_E);       // Pulse the enable pin 
....................    delay_cycles(200); 
....................    data = input_d();          // Get the data from the display's output register 
....................    output_low(GLCD_E); 
....................  
....................    output_low(GLCD_CS1);      // Reset the chip select lines 
....................    output_low(GLCD_CS2); 
....................    return data;               // Return the read data 
.................... } 
....................  
.................... #endif 
....................  
.................... #include "GRAPHICS.c" 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                          graphics.c                             //// 
.................... ////                                                                 //// 
.................... ////   This file contains functions to draw lines, rectangles, bars, //// 
.................... ////   circles and text to a display. A function which draws a       //// 
.................... ////   single pixel must be defined before calling the functions in  //// 
.................... ////   this file. Call it glcd_pixel(x, y, color) where x is the     //// 
.................... ////   horizontal coordinate, y is the vertical coordinate, and      //// 
.................... ////   color is 1 bit to turn the pixel on or off.                   //// 
.................... ////                                                                 //// 
.................... ////   * Note: (0, 0) is treated as the upper left corner            //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////                                                                 //// 
.................... ////  glcd_line(x1, y1, x2, y2, color)                               //// 
.................... ////     * Draws a line from the first point to the second point     //// 
.................... ////       with the given color                                      //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_rect(x1, y1, x2, y2, fill, color)                         //// 
.................... ////     * Draws a rectangle with one corner at point (x1,y1) and    //// 
.................... ////       the other corner at point (x2,y2)                         //// 
.................... ////       - fill can be YES or NO                                   //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_bar(x1, y1, x2, y2, width, color)                         //// 
.................... ////     * Draws a bar (wide line) from the first point to the       //// 
.................... ////       second point                                              //// 
.................... ////       - width is the number of pixels wide                      //// 
.................... ////       - color is ON or OFF                                      //// 
.................... ////                                                                 //// 
.................... ////  glcd_circle(x, y, radius, fill, color)                         //// 
.................... ////     * Draws a circle with center at (x,y)                       //// 
.................... ////       - fill can be YES or NO                                   //// 
.................... ////       - color can be ON or OFF                                  //// 
.................... ////                                                                 //// 
.................... ////  glcd_text57(x, y, textptr, size, color)                        //// 
.................... ////     * Write the null terminated text pointed to by textptr with //// 
.................... ////       the upper left coordinate of the first character at (x,y) //// 
.................... ////       Characters are 5 pixels wide and 7 pixels tall            //// 
.................... ////       - size is an integer that scales the size of the text     //// 
.................... ////       - color is ON or OFF                                      //// 
.................... ////     * Note - This function wraps characters to the next line    //// 
.................... ////              use #define GLCD_WIDTH to specify a display width  //// 
.................... ////                                                                 //// 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2004 Custom Computer Services        //// 
.................... //// This source code may only be used by licensed users of the CCS  //// 
.................... //// C compiler.  This source code may only be distributed to other  //// 
.................... //// licensed users of the CCS C compiler.  No other use,            //// 
.................... //// reproduction or distribution is permitted without written       //// 
.................... //// permission.  Derivative programs created using this software    //// 
.................... //// in object code form are not restricted in any way.              //// 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifndef GRAPHICS_DRAWING_FUNCTIONS 
.................... #define GRAPHICS_DRAWING_FUNCTIONS 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifndef ON 
.................... #define ON  1 
.................... #endif 
....................  
.................... #ifndef OFF 
.................... #define OFF 0 
.................... #endif 
....................  
.................... #ifndef YES 
.................... #define YES 1 
.................... #endif 
....................  
.................... #ifndef NO 
.................... #define NO  0 
.................... #endif 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... //// Defines a 5x7 font 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... const int8 FONT[51][5] ={0x00, 0x00, 0x00, 0x00, 0x00, // SPACE 
....................                          0x00, 0x00, 0x5F, 0x00, 0x00, // ! 
....................                          0x00, 0x03, 0x00, 0x03, 0x00, // " 
....................                          0x14, 0x3E, 0x14, 0x3E, 0x14, // # 
....................                          0x24, 0x2A, 0x7F, 0x2A, 0x12, // $ 
....................                          0x43, 0x33, 0x08, 0x66, 0x61, // % 
....................                          0x36, 0x49, 0x55, 0x22, 0x50, // & 
....................                          0x00, 0x05, 0x03, 0x00, 0x00, // ' 
....................                          0x00, 0x1C, 0x22, 0x41, 0x00, // ( 
....................                          0x00, 0x41, 0x22, 0x1C, 0x00, // ) 
....................                          0x14, 0x08, 0x3E, 0x08, 0x14, // * 
....................                          0x08, 0x08, 0x3E, 0x08, 0x08, // + 
....................                          0x00, 0x50, 0x30, 0x00, 0x00, // , 
....................                          0x08, 0x08, 0x08, 0x08, 0x08, // - 
....................                          0x00, 0x60, 0x60, 0x00, 0x00, // . 
....................                          0x20, 0x10, 0x08, 0x04, 0x02, // / 
....................                          0x3E, 0x51, 0x49, 0x45, 0x3E, // 0 
....................                          0x00, 0x04, 0x02, 0x7F, 0x00, // 1 
....................                          0x42, 0x61, 0x51, 0x49, 0x46, // 2 
....................                          0x22, 0x41, 0x49, 0x49, 0x36, // 3 
....................                          0x18, 0x14, 0x12, 0x7F, 0x10, // 4 
....................                          0x27, 0x45, 0x45, 0x45, 0x39, // 5 
....................                          0x3E, 0x49, 0x49, 0x49, 0x32, // 6 
....................                          0x01, 0x01, 0x71, 0x09, 0x07, // 7 
....................                          0x36, 0x49, 0x49, 0x49, 0x36, // 8 
....................                          0x26, 0x49, 0x49, 0x49, 0x3E, // 9 
....................                          0x00, 0x36, 0x36, 0x00, 0x00, // : 
....................                          0x00, 0x56, 0x36, 0x00, 0x00, // ; 
....................                          0x08, 0x14, 0x22, 0x41, 0x00, // < 
....................                          0x14, 0x14, 0x14, 0x14, 0x14, // = 
....................                          0x00, 0x41, 0x22, 0x14, 0x08, // > 
....................                          0x02, 0x01, 0x51, 0x09, 0x06, // ? 
....................                          0x3E, 0x41, 0x59, 0x55, 0x5E, // @ 
....................                          0x7E, 0x09, 0x09, 0x09, 0x7E, // A 
....................                          0x7F, 0x49, 0x49, 0x49, 0x36, // B 
....................                          0x3E, 0x41, 0x41, 0x41, 0x22, // C 
....................                          0x7F, 0x41, 0x41, 0x41, 0x3E, // D 
....................                          0x7F, 0x49, 0x49, 0x49, 0x41, // E 
....................                          0x7F, 0x09, 0x09, 0x09, 0x01, // F 
....................                          0x3E, 0x41, 0x41, 0x49, 0x3A, // G 
....................                          0x7F, 0x08, 0x08, 0x08, 0x7F, // H 
....................                          0x00, 0x41, 0x7F, 0x41, 0x00, // I 
....................                          0x30, 0x40, 0x40, 0x40, 0x3F, // J 
....................                          0x7F, 0x08, 0x14, 0x22, 0x41, // K 
....................                          0x7F, 0x40, 0x40, 0x40, 0x40, // L 
....................                          0x7F, 0x02, 0x0C, 0x02, 0x7F, // M 
....................                          0x7F, 0x02, 0x04, 0x08, 0x7F, // N 
....................                          0x3E, 0x41, 0x41, 0x41, 0x3E, // O 
....................                          0x7F, 0x09, 0x09, 0x09, 0x06, // P 
....................                          0x1E, 0x21, 0x21, 0x21, 0x5E, // Q 
....................                          0x7F, 0x09, 0x09, 0x09, 0x76};// R 
....................  
.................... const int8 FONT2[44][5]={0x26, 0x49, 0x49, 0x49, 0x32, // S 
....................                          0x01, 0x01, 0x7F, 0x01, 0x01, // T 
....................                          0x3F, 0x40, 0x40, 0x40, 0x3F, // U 
....................                          0x1F, 0x20, 0x40, 0x20, 0x1F, // V 
....................                          0x7F, 0x20, 0x10, 0x20, 0x7F, // W 
....................                          0x41, 0x22, 0x1C, 0x22, 0x41, // X 
....................                          0x07, 0x08, 0x70, 0x08, 0x07, // Y 
....................                          0x61, 0x51, 0x49, 0x45, 0x43, // Z 
....................                          0x00, 0x7F, 0x41, 0x00, 0x00, // [ 
....................                          0x02, 0x04, 0x08, 0x10, 0x20, // \ 
....................                          0x00, 0x00, 0x41, 0x7F, 0x00, // ] 
....................                          0x04, 0x02, 0x01, 0x02, 0x04, // ^ 
....................                          0x40, 0x40, 0x40, 0x40, 0x40, // _ 
....................                          0x00, 0x01, 0x02, 0x04, 0x00, // ` 
....................                          0x20, 0x54, 0x54, 0x54, 0x78, // a 
....................                          0x7F, 0x44, 0x44, 0x44, 0x38, // b 
....................                          0x38, 0x44, 0x44, 0x44, 0x44, // c 
....................                          0x38, 0x44, 0x44, 0x44, 0x7F, // d 
....................                          0x38, 0x54, 0x54, 0x54, 0x18, // e 
....................                          0x04, 0x04, 0x7E, 0x05, 0x05, // f 
....................                          0x08, 0x54, 0x54, 0x54, 0x3C, // g 
....................                          0x7F, 0x08, 0x04, 0x04, 0x78, // h 
....................                          0x00, 0x44, 0x7D, 0x40, 0x00, // i 
....................                          0x20, 0x40, 0x44, 0x3D, 0x00, // j 
....................                          0x7F, 0x10, 0x28, 0x44, 0x00, // k 
....................                          0x00, 0x41, 0x7F, 0x40, 0x00, // l 
....................                          0x7C, 0x04, 0x78, 0x04, 0x78, // m 
....................                          0x7C, 0x08, 0x04, 0x04, 0x78, // n 
....................                          0x38, 0x44, 0x44, 0x44, 0x38, // o 
....................                          0x7C, 0x14, 0x14, 0x14, 0x08, // p 
....................                          0x08, 0x14, 0x14, 0x14, 0x7C, // q 
....................                          0x00, 0x7C, 0x08, 0x04, 0x04, // r 
....................                          0x48, 0x54, 0x54, 0x54, 0x20, // s 
....................                          0x04, 0x04, 0x3F, 0x44, 0x44, // t 
....................                          0x3C, 0x40, 0x40, 0x20, 0x7C, // u 
....................                          0x1C, 0x20, 0x40, 0x20, 0x1C, // v 
....................                          0x3C, 0x40, 0x30, 0x40, 0x3C, // w 
....................                          0x44, 0x28, 0x10, 0x28, 0x44, // x 
....................                          0x0C, 0x50, 0x50, 0x50, 0x3C, // y 
....................                          0x44, 0x64, 0x54, 0x4C, 0x44, // z 
....................                          0x00, 0x08, 0x36, 0x41, 0x41, // { 
....................                          0x00, 0x00, 0x7F, 0x00, 0x00, // | 
....................                          0x41, 0x41, 0x36, 0x08, 0x00, // } 
....................                          0x02, 0x01, 0x02, 0x04, 0x02};// ~ 
.................... ///////////////////////////////////////////////////////////////////////// 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a line on a graphic LCD using Bresenham's 
.................... //                line drawing algorithm 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                color - ON or OFF 
.................... // Dependencies:  glcd_pixel() 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_line(int16 x1, int16 y1, int16 x2, int16 y2, int1 color) 
.................... #else 
.................... void glcd_line(int8 x1, int8 y1, int8 x2, int8 y2, int1 color) 
.................... #endif 
.................... { 
*
1B4A:  MOVLW  01
1B4C:  MOVLB  6
1B4E:  MOVWF  x5B
1B50:  MOVWF  x5C
1B52:  CLRF   x61
....................    int16        dy, dx; 
....................    signed int8  addx=1, addy=1; 
....................    signed int16 P, diff; 
....................  
....................    #ifdef LARGE_LCD 
....................    int16 i=0; 
....................    dx = abs((signed int16)(x2 - x1)); 
....................    dy = abs((signed int16)(y2 - y1)); 
....................    #else 
....................    int8 i=0; 
....................    dx = abs((signed int8)(x2 - x1)); 
1B54:  MOVF   x52,W
1B56:  SUBWF  x54,W
1B58:  MOVWF  x62
1B5A:  MOVF   x62,W
1B5C:  BTFSS  x62.7
1B5E:  BRA    1B66
1B60:  MOVLW  00
1B62:  BSF    FD8.0
1B64:  SUBFWB x62,W
1B66:  CLRF   03
1B68:  MOVWF  x59
1B6A:  MOVFF  03,65A
....................    dy = abs((signed int8)(y2 - y1)); 
1B6E:  MOVF   x53,W
1B70:  SUBWF  x55,W
1B72:  MOVWF  x62
1B74:  MOVF   x62,W
1B76:  BTFSS  x62.7
1B78:  BRA    1B80
1B7A:  MOVLW  00
1B7C:  BSF    FD8.0
1B7E:  SUBFWB x62,W
1B80:  CLRF   03
1B82:  MOVWF  x57
1B84:  MOVFF  03,658
....................    #endif 
....................  
....................    if(x1 > x2) 
1B88:  MOVF   x52,W
1B8A:  SUBWF  x54,W
1B8C:  BC    1B92
....................       addx = -1; 
1B8E:  MOVLW  FF
1B90:  MOVWF  x5B
....................    if(y1 > y2) 
1B92:  MOVF   x53,W
1B94:  SUBWF  x55,W
1B96:  BC    1B9C
....................       addy = -1; 
1B98:  MOVLW  FF
1B9A:  MOVWF  x5C
....................  
....................    if(dx >= dy) 
1B9C:  MOVF   x58,W
1B9E:  SUBWF  x5A,W
1BA0:  BNC   1C18
1BA2:  BNZ   1BAA
1BA4:  MOVF   x57,W
1BA6:  SUBWF  x59,W
1BA8:  BNC   1C18
....................    { 
....................       dy *= 2; 
1BAA:  BCF    FD8.0
1BAC:  RLCF   x57,F
1BAE:  RLCF   x58,F
....................       P = dy - dx; 
1BB0:  MOVF   x59,W
1BB2:  SUBWF  x57,W
1BB4:  MOVWF  00
1BB6:  MOVF   x5A,W
1BB8:  SUBWFB x58,W
1BBA:  MOVFF  00,65D
1BBE:  MOVWF  x5E
....................       diff = P - dx; 
1BC0:  MOVF   x59,W
1BC2:  SUBWF  x5D,W
1BC4:  MOVWF  x5F
1BC6:  MOVF   x5A,W
1BC8:  SUBWFB x5E,W
1BCA:  MOVWF  x60
....................  
....................       for(; i<=dx; ++i) 
1BCC:  MOVF   x5A,F
1BCE:  BNZ   1BD6
1BD0:  MOVF   x61,W
1BD2:  SUBWF  x59,W
1BD4:  BNC   1C16
....................       { 
....................          glcd_pixel(x1, y1, color); 
1BD6:  MOVFF  652,662
1BDA:  MOVFF  653,663
1BDE:  MOVFF  656,664
1BE2:  MOVLB  0
1BE4:  RCALL  1A8E
....................  
....................          if(P < 0) 
1BE6:  MOVLB  6
1BE8:  BTFSC  x5E.7
1BEA:  BRA    1BEE
1BEC:  BRA    1BFE
....................          { 
....................             P  += dy; 
1BEE:  MOVF   x57,W
1BF0:  ADDWF  x5D,F
1BF2:  MOVF   x58,W
1BF4:  ADDWFC x5E,F
....................             x1 += addx; 
1BF6:  MOVF   x5B,W
1BF8:  ADDWF  x52,W
1BFA:  MOVWF  x52
....................          } 
....................          else 
1BFC:  BRA    1C12
....................          { 
....................             P  += diff; 
1BFE:  MOVF   x5F,W
1C00:  ADDWF  x5D,F
1C02:  MOVF   x60,W
1C04:  ADDWFC x5E,F
....................             x1 += addx; 
1C06:  MOVF   x5B,W
1C08:  ADDWF  x52,W
1C0A:  MOVWF  x52
....................             y1 += addy; 
1C0C:  MOVF   x5C,W
1C0E:  ADDWF  x53,W
1C10:  MOVWF  x53
....................          } 
....................       } 
1C12:  INCF   x61,F
1C14:  BRA    1BCC
....................    } 
....................    else 
1C16:  BRA    1C84
....................    { 
....................       dx *= 2; 
1C18:  BCF    FD8.0
1C1A:  RLCF   x59,F
1C1C:  RLCF   x5A,F
....................       P = dx - dy; 
1C1E:  MOVF   x57,W
1C20:  SUBWF  x59,W
1C22:  MOVWF  00
1C24:  MOVF   x58,W
1C26:  SUBWFB x5A,W
1C28:  MOVFF  00,65D
1C2C:  MOVWF  x5E
....................       diff = P - dy; 
1C2E:  MOVF   x57,W
1C30:  SUBWF  x5D,W
1C32:  MOVWF  x5F
1C34:  MOVF   x58,W
1C36:  SUBWFB x5E,W
1C38:  MOVWF  x60
....................  
....................       for(; i<=dy; ++i) 
1C3A:  MOVF   x58,F
1C3C:  BNZ   1C44
1C3E:  MOVF   x61,W
1C40:  SUBWF  x57,W
1C42:  BNC   1C84
....................       { 
....................          glcd_pixel(x1, y1, color); 
1C44:  MOVFF  652,662
1C48:  MOVFF  653,663
1C4C:  MOVFF  656,664
1C50:  MOVLB  0
1C52:  RCALL  1A8E
....................  
....................          if(P < 0) 
1C54:  MOVLB  6
1C56:  BTFSC  x5E.7
1C58:  BRA    1C5C
1C5A:  BRA    1C6C
....................          { 
....................             P  += dx; 
1C5C:  MOVF   x59,W
1C5E:  ADDWF  x5D,F
1C60:  MOVF   x5A,W
1C62:  ADDWFC x5E,F
....................             y1 += addy; 
1C64:  MOVF   x5C,W
1C66:  ADDWF  x53,W
1C68:  MOVWF  x53
....................          } 
....................          else 
1C6A:  BRA    1C80
....................          { 
....................             P  += diff; 
1C6C:  MOVF   x5F,W
1C6E:  ADDWF  x5D,F
1C70:  MOVF   x60,W
1C72:  ADDWFC x5E,F
....................             x1 += addx; 
1C74:  MOVF   x5B,W
1C76:  ADDWF  x52,W
1C78:  MOVWF  x52
....................             y1 += addy; 
1C7A:  MOVF   x5C,W
1C7C:  ADDWF  x53,W
1C7E:  MOVWF  x53
....................          } 
....................       } 
1C80:  INCF   x61,F
1C82:  BRA    1C3A
....................    } 
.................... } 
1C84:  MOVLB  0
1C86:  RETLW  00
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a rectangle on a graphic LCD 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                fill  - YES or NO 
.................... //                color - ON or OFF 
.................... // Dependencies:  glcd_pixel(), glcd_line() 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_rect(int16 x1, int16 y1, int16 x2, int16 y2, int1 fill, int1 color) 
.................... #else 
.................... void glcd_rect(int8 x1, int8 y1, int8 x2, int8 y2, int1 fill, int1 color) 
.................... #endif 
.................... { 
....................    if(fill) 
1C88:  MOVLB  6
1C8A:  MOVF   x4B,F
1C8C:  BZ    1CEA
....................    { 
....................       #ifdef LARGE_LCD 
....................       int16 i, xmin, xmax, ymin, ymax; 
....................       #else 
....................       int8  i, xmin, xmax, ymin, ymax; 
....................       #endif 
....................  
....................       if(x1 < x2)                            //  Find x min and max 
1C8E:  MOVF   x49,W
1C90:  SUBWF  x47,W
1C92:  BC    1C9E
....................       { 
....................          xmin = x1; 
1C94:  MOVFF  647,64E
....................          xmax = x2; 
1C98:  MOVFF  649,64F
....................       } 
....................       else 
1C9C:  BRA    1CA6
....................       { 
....................          xmin = x2; 
1C9E:  MOVFF  649,64E
....................          xmax = x1; 
1CA2:  MOVFF  647,64F
....................       } 
....................  
....................       if(y1 < y2)                            // Find the y min and max 
1CA6:  MOVF   x4A,W
1CA8:  SUBWF  x48,W
1CAA:  BC    1CB6
....................       { 
....................          ymin = y1; 
1CAC:  MOVFF  648,650
....................          ymax = y2; 
1CB0:  MOVFF  64A,651
....................       } 
....................       else 
1CB4:  BRA    1CBE
....................       { 
....................          ymin = y2; 
1CB6:  MOVFF  64A,650
....................          ymax = y1; 
1CBA:  MOVFF  648,651
....................       } 
....................  
....................       for(; xmin <= xmax; ++xmin) 
1CBE:  MOVF   x4E,W
1CC0:  SUBWF  x4F,W
1CC2:  BNC   1CE8
....................       { 
....................          for(i=ymin; i<=ymax; ++i) 
1CC4:  MOVFF  650,64D
1CC8:  MOVF   x4D,W
1CCA:  SUBWF  x51,W
1CCC:  BNC   1CE4
....................          { 
....................             glcd_pixel(xmin, i, color); 
1CCE:  MOVFF  64E,662
1CD2:  MOVFF  64D,663
1CD6:  MOVFF  64C,664
1CDA:  MOVLB  0
1CDC:  RCALL  1A8E
....................          } 
1CDE:  MOVLB  6
1CE0:  INCF   x4D,F
1CE2:  BRA    1CC8
....................       } 
1CE4:  INCF   x4E,F
1CE6:  BRA    1CBE
....................    } 
....................    else 
1CE8:  BRA    1D46
....................    { 
....................       glcd_line(x1, y1, x2, y1, color);      // Draw the 4 sides 
1CEA:  MOVFF  647,652
1CEE:  MOVFF  648,653
1CF2:  MOVFF  649,654
1CF6:  MOVFF  648,655
1CFA:  MOVFF  64C,656
1CFE:  MOVLB  0
1D00:  RCALL  1B4A
....................       glcd_line(x1, y2, x2, y2, color); 
1D02:  MOVFF  647,652
1D06:  MOVFF  64A,653
1D0A:  MOVFF  649,654
1D0E:  MOVFF  64A,655
1D12:  MOVFF  64C,656
1D16:  RCALL  1B4A
....................       glcd_line(x1, y1, x1, y2, color); 
1D18:  MOVFF  647,652
1D1C:  MOVFF  648,653
1D20:  MOVFF  647,654
1D24:  MOVFF  64A,655
1D28:  MOVFF  64C,656
1D2C:  RCALL  1B4A
....................       glcd_line(x2, y1, x2, y2, color); 
1D2E:  MOVFF  649,652
1D32:  MOVFF  648,653
1D36:  MOVFF  649,654
1D3A:  MOVFF  64A,655
1D3E:  MOVFF  64C,656
1D42:  RCALL  1B4A
1D44:  MOVLB  6
....................    } 
.................... } 
1D46:  MOVLB  0
1D48:  RETLW  00
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a bar (wide line) on a graphic LCD 
.................... // Inputs:        (x1, y1) - the start coordinate 
.................... //                (x2, y2) - the end coordinate 
.................... //                width  - The number of pixels wide 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_bar(int16 x1, int16 y1, int16 x2, int16 y2, int8 width, int1 color) 
.................... #else 
.................... void glcd_bar(int8 x1, int8 y1, int8 x2, int8 y2, int8 width, int1 color) 
.................... #endif 
.................... { 
....................    int8         half_width; 
....................    signed int16 dy, dx; 
....................    signed int8  addx=1, addy=1, j; 
....................    signed int16 P, diff, c1, c2; 
....................  
....................    #ifdef LARGE_LCD 
....................    int16 i=0; 
....................    dx = abs((signed int16)(x2 - x1)); 
....................    dy = abs((signed int16)(y2 - y1)); 
....................    #else 
....................    int8 i=0; 
....................    dx = abs((signed int8)(x2 - x1)); 
....................    dy = abs((signed int8)(y2 - y1)); 
....................    #endif 
....................  
....................    half_width = width/2; 
....................    c1 = -(dx*x1 + dy*y1); 
....................    c2 = -(dx*x2 + dy*y2); 
....................  
....................    if(x1 > x2) 
....................    { 
....................       signed int16 temp; 
....................       temp = c1; 
....................       c1 = c2; 
....................       c2 = temp; 
....................       addx = -1; 
....................    } 
....................    if(y1 > y2) 
....................    { 
....................       signed int16 temp; 
....................       temp = c1; 
....................       c1 = c2; 
....................       c2 = temp; 
....................       addy = -1; 
....................    } 
....................  
....................    if(dx >= dy) 
....................    { 
....................       P = 2*dy - dx; 
....................       diff = P - dx; 
....................  
....................       for(i=0; i<=dx; ++i) 
....................       { 
....................          for(j=-half_width; j<half_width+width%2; ++j) 
....................          { 
....................             #ifdef LARGE_LCD 
....................             int16 temp; 
....................             #else 
....................             int8 temp; 
....................             #endif 
....................  
....................             temp = dx*x1+dy*(y1+j);    // Use more RAM to increase speed 
....................             if(temp+c1 >= 0 && temp+c2 <=0) 
....................                glcd_pixel(x1, y1+j, color); 
....................          } 
....................          if(P < 0) 
....................          { 
....................             P  += 2*dy; 
....................             x1 += addx; 
....................          } 
....................          else 
....................          { 
....................             P  += diff; 
....................             x1 += addx; 
....................             y1 += addy; 
....................          } 
....................       } 
....................    } 
....................    else 
....................    { 
....................       P = 2*dx - dy; 
....................       diff = P - dy; 
....................  
....................       for(i=0; i<=dy; ++i) 
....................       { 
....................          if(P < 0) 
....................          { 
....................             P  += 2*dx; 
....................             y1 += addy; 
....................          } 
....................          else 
....................          { 
....................             P  += diff; 
....................             x1 += addx; 
....................             y1 += addy; 
....................          } 
....................          for(j=-half_width; j<half_width+width%2; ++j) 
....................          { 
....................             #ifdef LARGE_LCD 
....................             int16 temp; 
....................             #else 
....................             int8 temp; 
....................             #endif 
....................  
....................             temp = dx*x1+dy*(y1+j);    // Use more RAM to increase speed 
....................             if(temp+c1 >= 0 && temp+c2 <=0) 
....................                glcd_pixel(x1+j, y1, color); 
....................          } 
....................       } 
....................    } 
.................... } 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Draw a circle on a graphic LCD 
.................... // Inputs:        (x,y) - the center of the circle 
.................... //                radius - the radius of the circle 
.................... //                fill - YES or NO 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_circle(int16 x, int16 y, int16 radius, int1 fill, int1 color) 
.................... #else 
.................... void glcd_circle(int8 x, int8 y, int8 radius, int1 fill, int1 color) 
.................... #endif 
.................... { 
....................    #ifdef LARGE_LCD 
....................    signed int16 a, b, P; 
....................    #else 
....................    signed int8  a, b, P; 
....................    #endif 
....................  
....................    a = 0; 
....................    b = radius; 
....................    P = 1 - radius; 
....................  
....................    do 
....................    { 
....................       if(fill) 
....................       { 
....................          glcd_line(x-a, y+b, x+a, y+b, color); 
....................          glcd_line(x-a, y-b, x+a, y-b, color); 
....................          glcd_line(x-b, y+a, x+b, y+a, color); 
....................          glcd_line(x-b, y-a, x+b, y-a, color); 
....................       } 
....................       else 
....................       { 
....................          glcd_pixel(a+x, b+y, color); 
....................          glcd_pixel(b+x, a+y, color); 
....................          glcd_pixel(x-a, b+y, color); 
....................          glcd_pixel(x-b, a+y, color); 
....................          glcd_pixel(b+x, y-a, color); 
....................          glcd_pixel(a+x, y-b, color); 
....................          glcd_pixel(x-a, y-b, color); 
....................          glcd_pixel(x-b, y-a, color); 
....................       } 
....................  
....................       if(P < 0) 
....................          P += 3 + 2 * a++; 
....................       else 
....................          P += 5 + 2 * (a++ - b--); 
....................     } while(a <= b); 
.................... } 
....................  
....................  
.................... ///////////////////////////////////////////////////////////////////////// 
.................... // Purpose:       Write text on a graphic LCD 
.................... // Inputs:        (x,y) - The upper left coordinate of the first letter 
.................... //                textptr - A pointer to an array of text to display 
.................... //                size - The size of the text: 1 = 5x7, 2 = 10x14, ... 
.................... //                color - ON or OFF 
.................... ///////////////////////////////////////////////////////////////////////// 
.................... #ifdef LARGE_LCD 
.................... void glcd_text57(int16 x, int16 y, char* textptr, int8 size, int1 color) 
.................... #else 
.................... void glcd_text57(int8 x, int8 y, char* textptr, int8 size, int1 color) 
.................... #endif 
.................... { 
....................    int8 j, k, l, m;                       // Loop counters 
....................    int8 pixelData[5];                     // Stores character data 
....................  
....................    for(; *textptr != '\0'; ++textptr, ++x)// Loop through the passed string 
1D4A:  MOVFF  64A,03
1D4E:  MOVLB  6
1D50:  MOVFF  649,FE9
1D54:  MOVFF  64A,FEA
1D58:  MOVF   FEF,F
1D5A:  BTFSC  FD8.2
1D5C:  BRA    1EFE
....................    { 
....................       if(*textptr < 'S') // Checks if the letter is in the first font array 
1D5E:  MOVFF  64A,03
1D62:  MOVFF  649,FE9
1D66:  MOVFF  64A,FEA
1D6A:  MOVF   FEF,W
1D6C:  SUBLW  52
1D6E:  BNC   1DBE
....................          memcpy(pixelData, FONT[*textptr - ' '], 5); 
1D70:  MOVFF  64A,03
1D74:  MOVFF  649,FE9
1D78:  MOVFF  64A,FEA
1D7C:  MOVLW  20
1D7E:  SUBWF  FEF,W
1D80:  MULLW  05
1D82:  MOVF   FF3,W
1D84:  CLRF   03
1D86:  MOVWF  x56
1D88:  MOVLW  06
1D8A:  MOVWF  FEA
1D8C:  MOVLW  51
1D8E:  MOVWF  FE9
1D90:  CLRF   x5A
1D92:  MOVFF  656,659
1D96:  MOVFF  FF2,657
1D9A:  BCF    FF2.7
1D9C:  MOVLW  05
1D9E:  MOVWF  01
1DA0:  CLRF   FF7
1DA2:  MOVF   x56,W
1DA4:  MOVLB  0
1DA6:  CALL   0096
1DAA:  TBLRD*-
1DAC:  TBLRD*+
1DAE:  MOVFF  FF5,FEE
1DB2:  DECFSZ 01,F
1DB4:  BRA    1DAC
1DB6:  MOVLB  6
1DB8:  BTFSC  x57.7
1DBA:  BSF    FF2.7
....................       else if(*textptr <= '~') // Check if the letter is in the second font array 
1DBC:  BRA    1E28
1DBE:  MOVFF  64A,03
1DC2:  MOVFF  649,FE9
1DC6:  MOVFF  64A,FEA
1DCA:  MOVF   FEF,W
1DCC:  SUBLW  7E
1DCE:  BNC   1E1E
....................          memcpy(pixelData, FONT2[*textptr - 'S'], 5); 
1DD0:  MOVFF  64A,03
1DD4:  MOVFF  649,FE9
1DD8:  MOVFF  64A,FEA
1DDC:  MOVLW  53
1DDE:  SUBWF  FEF,W
1DE0:  MULLW  05
1DE2:  MOVF   FF3,W
1DE4:  CLRF   03
1DE6:  MOVWF  x56
1DE8:  MOVLW  06
1DEA:  MOVWF  FEA
1DEC:  MOVLW  51
1DEE:  MOVWF  FE9
1DF0:  CLRF   x5A
1DF2:  MOVFF  656,659
1DF6:  MOVFF  FF2,657
1DFA:  BCF    FF2.7
1DFC:  MOVLW  05
1DFE:  MOVWF  01
1E00:  CLRF   FF7
1E02:  MOVF   x56,W
1E04:  MOVLB  0
1E06:  CALL   01B0
1E0A:  TBLRD*-
1E0C:  TBLRD*+
1E0E:  MOVFF  FF5,FEE
1E12:  DECFSZ 01,F
1E14:  BRA    1E0C
1E16:  MOVLB  6
1E18:  BTFSC  x57.7
1E1A:  BSF    FF2.7
....................       else 
1E1C:  BRA    1E28
....................          memcpy(pixelData, FONT[0], 5);   // Default to space 
1E1E:  CLRF   x51
1E20:  CLRF   x52
1E22:  CLRF   x53
1E24:  CLRF   x54
1E26:  CLRF   x55
....................  
....................       // Handles newline and carriage returns 
....................       switch(*textptr) 
....................       { 
1E28:  MOVFF  64A,03
1E2C:  MOVF   x49,W
1E2E:  MOVWF  FE9
1E30:  MOVFF  03,FEA
1E34:  MOVF   FEF,W
1E36:  XORLW  0A
1E38:  MOVLB  0
1E3A:  BZ    1E42
1E3C:  XORLW  07
1E3E:  BZ    1E52
1E40:  BRA    1E58
....................          case '\n': 
....................             y += 7*size + 1; 
1E42:  MOVLB  6
1E44:  MOVF   x4B,W
1E46:  MULLW  07
1E48:  MOVF   FF3,W
1E4A:  ADDLW  01
1E4C:  ADDWF  x48,F
....................             continue; 
1E4E:  BRA    1EF0
1E50:  MOVLB  0
....................          case '\r': 
....................             x = 0; 
1E52:  MOVLB  6
1E54:  CLRF   x47
....................             continue; 
1E56:  BRA    1EF0
....................       } 
....................  
....................       if(x+5*size >= GLCD_WIDTH)          // Performs character wrapping 
1E58:  MOVLB  6
1E5A:  MOVF   x4B,W
1E5C:  MULLW  05
1E5E:  MOVF   FF3,W
1E60:  ADDWF  x47,W
1E62:  SUBLW  7F
1E64:  BC    1E72
....................       { 
....................          x = 0;                           // Set x at far left position 
1E66:  CLRF   x47
....................          y += 7*size + 1;                 // Set y at next position down 
1E68:  MOVF   x4B,W
1E6A:  MULLW  07
1E6C:  MOVF   FF3,W
1E6E:  ADDLW  01
1E70:  ADDWF  x48,F
....................       } 
....................       for(j=0; j<5; ++j, x+=size)         // Loop through character byte data 
1E72:  CLRF   x4D
1E74:  MOVF   x4D,W
1E76:  SUBLW  04
1E78:  BNC   1EF0
....................       { 
....................          for(k=0; k < 7; ++k)             // Loop through the vertical pixels 
1E7A:  CLRF   x4E
1E7C:  MOVF   x4E,W
1E7E:  SUBLW  06
1E80:  BNC   1EE8
....................          { 
....................             if(bit_test(pixelData[j], k)) // Check if the pixel should be set 
1E82:  CLRF   03
1E84:  MOVF   x4D,W
1E86:  ADDLW  51
1E88:  MOVWF  FE9
1E8A:  MOVLW  06
1E8C:  ADDWFC 03,W
1E8E:  MOVWF  FEA
1E90:  MOVFF  FEF,656
1E94:  MOVFF  656,00
1E98:  MOVF   x4E,W
1E9A:  MOVWF  01
1E9C:  BZ    1EA6
1E9E:  BCF    FD8.0
1EA0:  RRCF   00,F
1EA2:  DECFSZ 01,F
1EA4:  BRA    1E9E
1EA6:  BTFSS  00.0
1EA8:  BRA    1EE4
....................             { 
....................                for(l=0; l < size; ++l)    // These two loops change the 
1EAA:  CLRF   x4F
1EAC:  MOVF   x4B,W
1EAE:  SUBWF  x4F,W
1EB0:  BC    1EE4
....................                {                          // character's size 
....................                   for(m=0; m < size; ++m) 
1EB2:  CLRF   x50
1EB4:  MOVF   x4B,W
1EB6:  SUBWF  x50,W
1EB8:  BC    1EE0
....................                   { 
....................                      glcd_pixel(x+m, y+k*size+l, color); // Draws the pixel 
1EBA:  MOVF   x50,W
1EBC:  ADDWF  x47,W
1EBE:  MOVWF  x56
1EC0:  MOVF   x4E,W
1EC2:  MULWF  x4B
1EC4:  MOVF   FF3,W
1EC6:  ADDWF  x48,W
1EC8:  ADDWF  x4F,W
1ECA:  MOVWF  x57
1ECC:  MOVFF  656,662
1ED0:  MOVWF  x63
1ED2:  MOVFF  64C,664
1ED6:  MOVLB  0
1ED8:  RCALL  1A8E
....................                   } 
1EDA:  MOVLB  6
1EDC:  INCF   x50,F
1EDE:  BRA    1EB4
....................                } 
1EE0:  INCF   x4F,F
1EE2:  BRA    1EAC
....................             } 
....................          } 
1EE4:  INCF   x4E,F
1EE6:  BRA    1E7C
....................       } 
1EE8:  INCF   x4D,F
1EEA:  MOVF   x4B,W
1EEC:  ADDWF  x47,F
1EEE:  BRA    1E74
....................    } 
1EF0:  INCF   x49,F
1EF2:  BTFSC  FD8.2
1EF4:  INCF   x4A,F
1EF6:  INCF   x47,F
1EF8:  MOVLB  0
1EFA:  BRA    1D4A
1EFC:  MOVLB  6
.................... } 
1EFE:  MOVLB  0
1F00:  RETLW  00
....................  
.................... #endif 
....................  
.................... #include "imagen.h" 
.................... const int8 Bombillo [64][16] = { 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x80, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x01, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x84, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF9, 0x02, 0xF8, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x84, 0x80, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x78, 0x40, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x48, 0x20, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x48, 0x10, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
.................... }; 
....................  
.................... const int8 Tomai [64][16] = { 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xF8, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x08, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x03, 0x88, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x45, 0x02, 0x88, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x45, 0x02, 0x88, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x45, 0x02, 0x88, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x45, 0x02, 0x88, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x03, 0x88, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x08, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xFC, 0x08, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x84, 0x08, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x84, 0x08, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xFC, 0x08, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x08, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xF8, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
.................... }; 
....................  
.................... const int8 Ventilador [64][16] = { 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xF8, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xF8, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xF8, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x71, 0xC0, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x93, 0xE0, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x0F, 0xF0, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x0F, 0xF0, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7D, 0x93, 0xE0, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x61, 0xC0, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xF8, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xF8, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xF8, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00, 
.................... 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00 
.................... }; 
....................  
....................  
.................... #define   UP               input(PIN_A0) 
.................... #define   DOWN             input(PIN_A1) 
.................... #define   RIGHT            input(PIN_A2) 
.................... #define   LEFT             input(PIN_A3) 
....................  
.................... #define   Display_on       output_bit(PIN_E0,1) 
.................... #define   Display_off      output_bit(PIN_E0,0) 
....................  
.................... const int8 Lenbuf = 32; 
.................... int8 txbuf[Lenbuf]; 
....................  
.................... int16 tiempos=0; 
.................... int8 i=0; 
.................... byte SlaveA0Tx[0X10]; 
.................... byte dato=0;            //Contendrá la información a enviar o recibir 
.................... byte direccion=0;       //Contendrá la dirección del esclavo en el bus I2C 
.................... byte posicion=0;        //Contendrá la posición en el buffer de memoria del esclavo donde se almacenará o de donde se recuperará el dato 
....................  
.................... short Flanco=0,Flanco1=0,Flanco2=0,Flanco3=0,Flanco4=0,Flanco5=0,Flanco6=0,imprimir=0,flag_uv=0,flag_blower=0,flag_toma=0,flag_luz=0,flag_alarma=0,w=0; 
.................... short tiempo_purga=0,tiempo_uv=0,tiempo_trabajo=0,tiempo_postpurga=0,Latencia=0,flag_latencia=0; 
.................... short guardauv=0,guardatrabajo=0,Lectura=0,n=0; 
.................... char  JP[] = "JP Inglobal", Cabina[] = "Cabina Flujo Laminar",tiempo_est[]="T est=", Dos_puntos[]=":"; 
.................... char  Clase[] = "Horizontal", Tiempo[] = "Tiempo de Purga", UV[]="UV"; 
.................... char  Baje_Vidrio[] = "!!Ubique Vidrio!!",Inflowt[] = "JP CFLH180",Downflowt[] = "Dnflow(m/s):", ZF[] = "Fabrica:203.0", ZA[] = "Actual:",AJ[]="Ajuste:"; 
.................... char  Vida_UV[] = "UVLife:",Vida_Filtro[] = "Filter:",ZFP[] = "Fabrica:235.0", Perdida[]="!Perdida Flujo!"; 
.................... int8 Menu=200, unidad=1, Opcion=1,inicie=0,negativo=10,MediaMovil=5,G_l=0,G_h=0,tiemporeset=0; 
.................... int8 q=0,r=0,l=0,h=0,Entero=0,Decimal1=0,LuzBlanca=10,LuzUV=10,Motor=10,Alarma=10,Toma=10,UV2=0; 
.................... unsigned int8 Inflow_l=0,Inflow_h=0,Downflow_h=0,Downflow_l=0,Vidrio_abajo=0,Vidrio_ok=0,Filtro_Inflow_l=0,Filtro_Inflow_h=0; 
.................... unsigned int8 Filtro_Downflow_l=0,Filtro_Downflow_h=0; 
....................  
.................... unsigned int16 Inflow_adc=0,Downflow_adc=0,Filtro_Inflow_adc=0,Filtro_Downflow_adc=0,Temporal1=0; 
....................  
.................... int16 t_latencia=0,minutos_uv=0,minutos_trabajo=0,G16=0; 
.................... signed int  Tpurga[4]={0,0,0,0};       // Tiempo de Purga transcurrido 
.................... signed int  Tpurgap[4]={9,0,0,0};      // Tiempo de Purga programado 
.................... signed int  Tppurga[4]={0,0,0,0};      // Tiempo de Post-Purga transcurrido 
.................... signed int  Tppurgap[4]={9,0,0,0};     // Tiempo de Post-Purga programado 
.................... signed int  Tuv[4]={0,0,0,0};          // Tiempo de UV transcurrido(en Horas) 
.................... signed int  Tempouv[4]={0,0,0,0};         // Tiempo de UV transcurrido 
.................... signed int  Tempouvp[4]={0,0,0,0};        // Tiempo de UV transcurrido 
.................... signed int  Ttrabajo[4]={0,0,0,0};        // Tiempo de trabajo transcurrido (en Horas) 
.................... signed int  Contrasena[4]={0,0,0,0};      // Contrasena de 4 digitos 
.................... signed int  Password[4]={0,0,0,0};        // Contrasena Almacenada de 4 digitos 
.................... float Inflow=0.0,Downflow=0.0,Filtro_Downflow=0.0,Diferencia=0.0,barra=0.0,barra_old=0.0,barra2=0.0,barra_old2=0.0,Inflowdec=0.0; 
.................... float Velocidad=0.0,x_uno=0.0,x_cuadrado=0.0,x_cubo=0.0,Ajuste1=0.0,Ajuste2=0.0; 
.................... float ADC=0,Temporal=0.0,Temporal2=0.0; 
.................... float a=0.0000001418633343546420,b=-0.00009476749001431169,c= 0.040182822903506,d= -5.354852229527197;//Sensor 2 Posible bueno 
.................... float promedio[8]={0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}; 
.................... float PromPresion[8]={0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}; 
.................... float Flujo2=0.0,zero_fabrica=203.0,zero_actual=0.0; 
.................... float V1=0.0,Presion=0.0,G=2.0,UVTime=0.0; 
....................  
.................... typedef struct{ 
....................    char Letra[20]; 
.................... }MENUU; 
....................  
.................... MENUU Menus; 
....................  
.................... void glcd_imagen(int8 x) 
.................... { 
....................    char i,j; 
....................    signed char k;  
....................       
....................    if(x==3){ 
*
2F30:  MOVLB  6
2F32:  MOVF   x30,W
2F34:  SUBLW  03
2F36:  BNZ   2FDA
....................    for( i = 0 ; i < 64 ; i ++ ) 
2F38:  CLRF   x31
2F3A:  MOVF   x31,W
2F3C:  SUBLW  3F
2F3E:  BNC   2FDA
....................    {  for( j = 0 ; j < 16 ; j ++) 
2F40:  CLRF   x32
2F42:  MOVF   x32,W
2F44:  SUBLW  0F
2F46:  BNC   2FD6
....................       {  for(k=7;k>-1;k--) 
2F48:  MOVLW  07
2F4A:  MOVWF  x33
2F4C:  MOVF   x33,W
2F4E:  XORLW  80
2F50:  SUBLW  7F
2F52:  BC    2FD2
....................          {       
....................             if( bit_test(Bombillo[i][j] ,7-k ))  
2F54:  CLRF   x35
2F56:  MOVFF  631,634
2F5A:  CLRF   x37
2F5C:  MOVLW  10
2F5E:  MOVWF  x36
2F60:  MOVLB  0
2F62:  RCALL  2F0E
2F64:  MOVFF  02,635
2F68:  MOVFF  01,634
2F6C:  MOVLB  6
2F6E:  MOVF   x32,W
2F70:  ADDWF  01,W
2F72:  MOVWF  01
2F74:  MOVLW  00
2F76:  ADDWFC 02,W
2F78:  MOVWF  03
2F7A:  MOVF   01,W
2F7C:  MOVFF  FF2,634
2F80:  BCF    FF2.7
2F82:  MOVFF  03,FF7
2F86:  MOVLB  0
2F88:  CALL   02A6
2F8C:  MOVLB  6
2F8E:  BTFSC  x34.7
2F90:  BSF    FF2.7
2F92:  MOVWF  x34
2F94:  MOVLW  07
2F96:  BSF    FD8.0
2F98:  SUBFWB x33,W
2F9A:  MOVWF  x35
2F9C:  MOVFF  634,00
2FA0:  MOVF   x35,W
2FA2:  MOVWF  01
2FA4:  BZ    2FAE
2FA6:  BCF    FD8.0
2FA8:  RRCF   00,F
2FAA:  DECFSZ 01,F
2FAC:  BRA    2FA6
2FAE:  BTFSS  00.0
2FB0:  BRA    2FCE
....................                glcd_pixel( j*8+k,i, ON ); 
2FB2:  MOVF   x32,W
2FB4:  MULLW  08
2FB6:  MOVF   FF3,W
2FB8:  ADDWF  x33,W
2FBA:  MOVWF  x34
2FBC:  MOVWF  x62
2FBE:  MOVFF  631,663
2FC2:  MOVLW  01
2FC4:  MOVWF  x64
2FC6:  MOVLB  0
2FC8:  CALL   1A8E
2FCC:  MOVLB  6
....................          }   
2FCE:  DECF   x33,F
2FD0:  BRA    2F4C
....................       } 
2FD2:  INCF   x32,F
2FD4:  BRA    2F42
....................    } 
2FD6:  INCF   x31,F
2FD8:  BRA    2F3A
....................    } 
....................     
....................    if(x==4){ 
2FDA:  MOVF   x30,W
2FDC:  SUBLW  04
2FDE:  BNZ   3082
....................    for( i = 0 ; i < 64 ; i ++ ) 
2FE0:  CLRF   x31
2FE2:  MOVF   x31,W
2FE4:  SUBLW  3F
2FE6:  BNC   3082
....................    {  for( j = 0 ; j < 16 ; j ++) 
2FE8:  CLRF   x32
2FEA:  MOVF   x32,W
2FEC:  SUBLW  0F
2FEE:  BNC   307E
....................       {  for(k=7;k>-1;k--) 
2FF0:  MOVLW  07
2FF2:  MOVWF  x33
2FF4:  MOVF   x33,W
2FF6:  XORLW  80
2FF8:  SUBLW  7F
2FFA:  BC    307A
....................          {       
....................             if( bit_test(Tomai[i][j] ,7-k ))  
2FFC:  CLRF   x35
2FFE:  MOVFF  631,634
3002:  CLRF   x37
3004:  MOVLW  10
3006:  MOVWF  x36
3008:  MOVLB  0
300A:  RCALL  2F0E
300C:  MOVFF  02,635
3010:  MOVFF  01,634
3014:  MOVLB  6
3016:  MOVF   x32,W
3018:  ADDWF  01,W
301A:  MOVWF  01
301C:  MOVLW  00
301E:  ADDWFC 02,W
3020:  MOVWF  03
3022:  MOVF   01,W
3024:  MOVFF  FF2,634
3028:  BCF    FF2.7
302A:  MOVFF  03,FF7
302E:  MOVLB  0
3030:  CALL   06BE
3034:  MOVLB  6
3036:  BTFSC  x34.7
3038:  BSF    FF2.7
303A:  MOVWF  x34
303C:  MOVLW  07
303E:  BSF    FD8.0
3040:  SUBFWB x33,W
3042:  MOVWF  x35
3044:  MOVFF  634,00
3048:  MOVF   x35,W
304A:  MOVWF  01
304C:  BZ    3056
304E:  BCF    FD8.0
3050:  RRCF   00,F
3052:  DECFSZ 01,F
3054:  BRA    304E
3056:  BTFSS  00.0
3058:  BRA    3076
....................                glcd_pixel( j*8+k,i, ON ); 
305A:  MOVF   x32,W
305C:  MULLW  08
305E:  MOVF   FF3,W
3060:  ADDWF  x33,W
3062:  MOVWF  x34
3064:  MOVWF  x62
3066:  MOVFF  631,663
306A:  MOVLW  01
306C:  MOVWF  x64
306E:  MOVLB  0
3070:  CALL   1A8E
3074:  MOVLB  6
....................          }   
3076:  DECF   x33,F
3078:  BRA    2FF4
....................       } 
307A:  INCF   x32,F
307C:  BRA    2FEA
....................    } 
307E:  INCF   x31,F
3080:  BRA    2FE2
....................    } 
....................     
....................    if(x==5){ 
3082:  MOVF   x30,W
3084:  SUBLW  05
3086:  BNZ   312A
....................    for( i = 0 ; i < 64 ; i ++ ) 
3088:  CLRF   x31
308A:  MOVF   x31,W
308C:  SUBLW  3F
308E:  BNC   312A
....................    {  for( j = 0 ; j < 16 ; j ++) 
3090:  CLRF   x32
3092:  MOVF   x32,W
3094:  SUBLW  0F
3096:  BNC   3126
....................       {  for(k=7;k>-1;k--) 
3098:  MOVLW  07
309A:  MOVWF  x33
309C:  MOVF   x33,W
309E:  XORLW  80
30A0:  SUBLW  7F
30A2:  BC    3122
....................          {       
....................             if( bit_test(Ventilador[i][j] ,7-k ))  
30A4:  CLRF   x35
30A6:  MOVFF  631,634
30AA:  CLRF   x37
30AC:  MOVLW  10
30AE:  MOVWF  x36
30B0:  MOVLB  0
30B2:  RCALL  2F0E
30B4:  MOVFF  02,635
30B8:  MOVFF  01,634
30BC:  MOVLB  6
30BE:  MOVF   x32,W
30C0:  ADDWF  01,W
30C2:  MOVWF  01
30C4:  MOVLW  00
30C6:  ADDWFC 02,W
30C8:  MOVWF  03
30CA:  MOVF   01,W
30CC:  MOVFF  FF2,634
30D0:  BCF    FF2.7
30D2:  MOVFF  03,FF7
30D6:  MOVLB  0
30D8:  CALL   0AD6
30DC:  MOVLB  6
30DE:  BTFSC  x34.7
30E0:  BSF    FF2.7
30E2:  MOVWF  x34
30E4:  MOVLW  07
30E6:  BSF    FD8.0
30E8:  SUBFWB x33,W
30EA:  MOVWF  x35
30EC:  MOVFF  634,00
30F0:  MOVF   x35,W
30F2:  MOVWF  01
30F4:  BZ    30FE
30F6:  BCF    FD8.0
30F8:  RRCF   00,F
30FA:  DECFSZ 01,F
30FC:  BRA    30F6
30FE:  BTFSS  00.0
3100:  BRA    311E
....................                glcd_pixel( j*8+k,i, ON ); 
3102:  MOVF   x32,W
3104:  MULLW  08
3106:  MOVF   FF3,W
3108:  ADDWF  x33,W
310A:  MOVWF  x34
310C:  MOVWF  x62
310E:  MOVFF  631,663
3112:  MOVLW  01
3114:  MOVWF  x64
3116:  MOVLB  0
3118:  CALL   1A8E
311C:  MOVLB  6
....................          }   
311E:  DECF   x33,F
3120:  BRA    309C
....................       } 
3122:  INCF   x32,F
3124:  BRA    3092
....................    } 
3126:  INCF   x31,F
3128:  BRA    308A
....................    } 
.................... } 
312A:  MOVLB  0
312C:  RETLW  00
....................  
.................... void mensajes(int8 x,y){// Funcion para imprimir mensajes de Menu Principal. 
....................   if(x==1) 
....................    {glcd_text57(7, y, tiempo_est, 1, ON);} 
.................... } 
....................   
.................... void displayContrasena(int digito, int x, int y, int sombreado) 
.................... { 
....................    char voltage[9]; 
....................    sprintf(voltage, "%i", digito); 
*
202C:  MOVLW  06
202E:  MOVLB  6
2030:  MOVWF  x2F
2032:  MOVLW  36
2034:  MOVWF  x2E
2036:  MOVFF  632,63F
203A:  MOVLW  1F
203C:  MOVWF  x40
203E:  MOVLB  0
2040:  RCALL  1F4E
....................     
....................    if(sombreado==1) 
2042:  MOVLB  6
2044:  DECFSZ x35,W
2046:  BRA    2096
....................       {glcd_rect(x, y, x+18, y+24, YES, ON);glcd_text57(x+2, y+1, voltage, 2, OFF);} 
2048:  MOVLW  12
204A:  ADDWF  x33,W
204C:  MOVWF  x3F
204E:  MOVLW  18
2050:  ADDWF  x34,W
2052:  MOVWF  x40
2054:  MOVFF  633,647
2058:  MOVFF  634,648
205C:  MOVFF  63F,649
2060:  MOVWF  x4A
2062:  MOVLW  01
2064:  MOVWF  x4B
2066:  MOVWF  x4C
2068:  MOVLB  0
206A:  RCALL  1C88
206C:  MOVLW  02
206E:  MOVLB  6
2070:  ADDWF  x33,W
2072:  MOVWF  x3F
2074:  MOVLW  01
2076:  ADDWF  x34,W
2078:  MOVWF  x40
207A:  MOVFF  63F,647
207E:  MOVWF  x48
2080:  MOVLW  06
2082:  MOVWF  x4A
2084:  MOVLW  36
2086:  MOVWF  x49
2088:  MOVLW  02
208A:  MOVWF  x4B
208C:  CLRF   x4C
208E:  MOVLB  0
2090:  RCALL  1D4A
....................    else    
2092:  BRA    20E0
2094:  MOVLB  6
....................       {glcd_rect(x, y, x+18, y+24, NO, OFF);glcd_text57(x+2, y+1, voltage, 2, ON);} 
2096:  MOVLW  12
2098:  ADDWF  x33,W
209A:  MOVWF  x3F
209C:  MOVLW  18
209E:  ADDWF  x34,W
20A0:  MOVWF  x40
20A2:  MOVFF  633,647
20A6:  MOVFF  634,648
20AA:  MOVFF  63F,649
20AE:  MOVWF  x4A
20B0:  CLRF   x4B
20B2:  CLRF   x4C
20B4:  MOVLB  0
20B6:  RCALL  1C88
20B8:  MOVLW  02
20BA:  MOVLB  6
20BC:  ADDWF  x33,W
20BE:  MOVWF  x3F
20C0:  MOVLW  01
20C2:  ADDWF  x34,W
20C4:  MOVWF  x40
20C6:  MOVFF  63F,647
20CA:  MOVWF  x48
20CC:  MOVLW  06
20CE:  MOVWF  x4A
20D0:  MOVLW  36
20D2:  MOVWF  x49
20D4:  MOVLW  02
20D6:  MOVWF  x4B
20D8:  MOVLW  01
20DA:  MOVWF  x4C
20DC:  MOVLB  0
20DE:  RCALL  1D4A
....................  
.................... } 
20E0:  RETLW  00
....................  
.................... void displayTiempo(int digito, int x, int y, int sombreado, int tamano) 
.................... { 
....................    char voltage[9]; 
....................    sprintf(voltage, "%i", digito); 
*
2208:  MOVLW  06
220A:  MOVLB  6
220C:  MOVWF  x2F
220E:  MOVLW  35
2210:  MOVWF  x2E
2212:  MOVFF  630,63F
2216:  MOVLW  1F
2218:  MOVWF  x40
221A:  MOVLB  0
221C:  RCALL  1F4E
....................     
....................    if(sombreado==1) 
221E:  MOVLB  6
2220:  DECFSZ x33,W
2222:  BRA    2278
....................       {glcd_rect(x, y, x+(tamano*6), y+(tamano*8), YES, ON);glcd_text57(x+2, y+1, voltage, tamano, OFF);} 
2224:  MOVF   x34,W
2226:  MULLW  06
2228:  MOVF   FF3,W
222A:  ADDWF  x31,W
222C:  MOVWF  x3E
222E:  MOVF   x34,W
2230:  MULLW  08
2232:  MOVF   FF3,W
2234:  ADDWF  x32,W
2236:  MOVWF  x3F
2238:  MOVFF  631,647
223C:  MOVFF  632,648
2240:  MOVFF  63E,649
2244:  MOVWF  x4A
2246:  MOVLW  01
2248:  MOVWF  x4B
224A:  MOVWF  x4C
224C:  MOVLB  0
224E:  RCALL  1C88
2250:  MOVLW  02
2252:  MOVLB  6
2254:  ADDWF  x31,W
2256:  MOVWF  x3E
2258:  MOVLW  01
225A:  ADDWF  x32,W
225C:  MOVWF  x3F
225E:  MOVFF  63E,647
2262:  MOVWF  x48
2264:  MOVLW  06
2266:  MOVWF  x4A
2268:  MOVLW  35
226A:  MOVWF  x49
226C:  MOVFF  634,64B
2270:  CLRF   x4C
2272:  MOVLB  0
2274:  RCALL  1D4A
2276:  MOVLB  6
....................    if(sombreado==0) 
2278:  MOVF   x33,F
227A:  BNZ   22D2
....................       {glcd_rect(x, y, x+(tamano*6), y+(tamano*8), YES, OFF);glcd_text57(x+2, y+1, voltage, tamano, ON);} 
227C:  MOVF   x34,W
227E:  MULLW  06
2280:  MOVF   FF3,W
2282:  ADDWF  x31,W
2284:  MOVWF  x3E
2286:  MOVF   x34,W
2288:  MULLW  08
228A:  MOVF   FF3,W
228C:  ADDWF  x32,W
228E:  MOVWF  x3F
2290:  MOVFF  631,647
2294:  MOVFF  632,648
2298:  MOVFF  63E,649
229C:  MOVWF  x4A
229E:  MOVLW  01
22A0:  MOVWF  x4B
22A2:  CLRF   x4C
22A4:  MOVLB  0
22A6:  RCALL  1C88
22A8:  MOVLW  02
22AA:  MOVLB  6
22AC:  ADDWF  x31,W
22AE:  MOVWF  x3E
22B0:  MOVLW  01
22B2:  ADDWF  x32,W
22B4:  MOVWF  x3F
22B6:  MOVFF  63E,647
22BA:  MOVWF  x48
22BC:  MOVLW  06
22BE:  MOVWF  x4A
22C0:  MOVLW  35
22C2:  MOVWF  x49
22C4:  MOVFF  634,64B
22C8:  MOVLW  01
22CA:  MOVWF  x4C
22CC:  MOVLB  0
22CE:  RCALL  1D4A
22D0:  MOVLB  6
....................  
.................... } 
22D2:  MOVLB  0
22D4:  RETLW  00
....................  
.................... void displayMenu(char palabra[100], int x, int y, int sombreado, int tamano) 
.................... { 
....................    strcpy(Menus.Letra,palabra); 
*
213C:  MOVLB  6
213E:  MOVFF  630,01
2142:  MOVFF  631,03
2146:  MOVFF  630,636
214A:  MOVFF  631,637
214E:  MOVLW  06
2150:  MOVWF  FEA
2152:  MOVLW  1A
2154:  MOVWF  FE9
2156:  MOVFF  631,FE2
215A:  MOVFF  630,FE1
215E:  MOVF   FE7,F
2160:  MOVFF  FE6,FEE
2164:  BNZ   215E
....................    if(sombreado==1) 
2166:  DECFSZ x34,W
2168:  BRA    21B4
....................       {glcd_rect(0, y, 127, y+(tamano*8), YES, ON);glcd_text57(x+1, y+1, Menus.Letra, tamano, OFF);} 
216A:  MOVF   x35,W
216C:  MULLW  08
216E:  MOVF   FF3,W
2170:  ADDWF  x33,W
2172:  MOVWF  x36
2174:  CLRF   x47
2176:  MOVFF  633,648
217A:  MOVLW  7F
217C:  MOVWF  x49
217E:  MOVFF  636,64A
2182:  MOVLW  01
2184:  MOVWF  x4B
2186:  MOVWF  x4C
2188:  MOVLB  0
218A:  RCALL  1C88
218C:  MOVLW  01
218E:  MOVLB  6
2190:  ADDWF  x32,W
2192:  MOVWF  x36
2194:  MOVLW  01
2196:  ADDWF  x33,W
2198:  MOVWF  x37
219A:  MOVFF  636,647
219E:  MOVWF  x48
21A0:  MOVLW  06
21A2:  MOVWF  x4A
21A4:  MOVLW  1A
21A6:  MOVWF  x49
21A8:  MOVFF  635,64B
21AC:  CLRF   x4C
21AE:  MOVLB  0
21B0:  RCALL  1D4A
21B2:  MOVLB  6
....................    if(sombreado==0) 
21B4:  MOVF   x34,F
21B6:  BNZ   2204
....................       {glcd_rect(0, y, 127, y+(tamano*8), YES, OFF);glcd_text57(x+1, y+1, Menus.Letra, tamano, ON);} 
21B8:  MOVF   x35,W
21BA:  MULLW  08
21BC:  MOVF   FF3,W
21BE:  ADDWF  x33,W
21C0:  MOVWF  x36
21C2:  CLRF   x47
21C4:  MOVFF  633,648
21C8:  MOVLW  7F
21CA:  MOVWF  x49
21CC:  MOVFF  636,64A
21D0:  MOVLW  01
21D2:  MOVWF  x4B
21D4:  CLRF   x4C
21D6:  MOVLB  0
21D8:  RCALL  1C88
21DA:  MOVLW  01
21DC:  MOVLB  6
21DE:  ADDWF  x32,W
21E0:  MOVWF  x36
21E2:  MOVLW  01
21E4:  ADDWF  x33,W
21E6:  MOVWF  x37
21E8:  MOVFF  636,647
21EC:  MOVWF  x48
21EE:  MOVLW  06
21F0:  MOVWF  x4A
21F2:  MOVLW  1A
21F4:  MOVWF  x49
21F6:  MOVFF  635,64B
21FA:  MOVLW  01
21FC:  MOVWF  x4C
21FE:  MOVLB  0
2200:  RCALL  1D4A
2202:  MOVLB  6
....................  
.................... } 
2204:  MOVLB  0
2206:  RETLW  00
....................  
.................... void displayfloat(float adc,int x,int y,int sombreado, int tamano) { 
....................    char voltage[9];     
....................       sprintf(voltage, "%1.2f",adc); // Converts adc to text 
*
2E28:  MOVLW  06
2E2A:  MOVLB  6
2E2C:  MOVWF  x2F
2E2E:  MOVLW  3C
2E30:  MOVWF  x2E
2E32:  MOVLW  89
2E34:  MOVWF  FE9
2E36:  MOVFF  637,648
2E3A:  MOVFF  636,647
2E3E:  MOVFF  635,646
2E42:  MOVFF  634,645
2E46:  MOVLW  02
2E48:  MOVWF  x49
2E4A:  MOVLB  0
2E4C:  BRA    2C72
....................        
....................    if(sombreado==1) 
2E4E:  MOVLB  6
2E50:  DECFSZ x3A,W
2E52:  BRA    2EAC
....................       {glcd_rect(x, y, x+(tamano*48), y+(tamano*8), YES, ON);glcd_text57(x+2, y+1, voltage, tamano, OFF);} 
2E54:  MOVF   x3B,W
2E56:  MULLW  30
2E58:  MOVF   FF3,W
2E5A:  ADDWF  x38,W
2E5C:  MOVWF  x45
2E5E:  MOVF   x3B,W
2E60:  MULLW  08
2E62:  MOVF   FF3,W
2E64:  ADDWF  x39,W
2E66:  MOVWF  x46
2E68:  MOVFF  638,647
2E6C:  MOVFF  639,648
2E70:  MOVFF  645,649
2E74:  MOVWF  x4A
2E76:  MOVLW  01
2E78:  MOVWF  x4B
2E7A:  MOVWF  x4C
2E7C:  MOVLB  0
2E7E:  CALL   1C88
2E82:  MOVLW  02
2E84:  MOVLB  6
2E86:  ADDWF  x38,W
2E88:  MOVWF  x45
2E8A:  MOVLW  01
2E8C:  ADDWF  x39,W
2E8E:  MOVWF  x46
2E90:  MOVFF  645,647
2E94:  MOVWF  x48
2E96:  MOVLW  06
2E98:  MOVWF  x4A
2E9A:  MOVLW  3C
2E9C:  MOVWF  x49
2E9E:  MOVFF  63B,64B
2EA2:  CLRF   x4C
2EA4:  MOVLB  0
2EA6:  CALL   1D4A
2EAA:  MOVLB  6
....................    if(sombreado==0) 
2EAC:  MOVF   x3A,F
2EAE:  BNZ   2F0A
....................       {glcd_rect(x, y, x+(tamano*48), y+(tamano*8), YES, OFF);glcd_text57(x+2, y+1, voltage, tamano, ON);} 
2EB0:  MOVF   x3B,W
2EB2:  MULLW  30
2EB4:  MOVF   FF3,W
2EB6:  ADDWF  x38,W
2EB8:  MOVWF  x45
2EBA:  MOVF   x3B,W
2EBC:  MULLW  08
2EBE:  MOVF   FF3,W
2EC0:  ADDWF  x39,W
2EC2:  MOVWF  x46
2EC4:  MOVFF  638,647
2EC8:  MOVFF  639,648
2ECC:  MOVFF  645,649
2ED0:  MOVWF  x4A
2ED2:  MOVLW  01
2ED4:  MOVWF  x4B
2ED6:  CLRF   x4C
2ED8:  MOVLB  0
2EDA:  CALL   1C88
2EDE:  MOVLW  02
2EE0:  MOVLB  6
2EE2:  ADDWF  x38,W
2EE4:  MOVWF  x45
2EE6:  MOVLW  01
2EE8:  ADDWF  x39,W
2EEA:  MOVWF  x46
2EEC:  MOVFF  645,647
2EF0:  MOVWF  x48
2EF2:  MOVLW  06
2EF4:  MOVWF  x4A
2EF6:  MOVLW  3C
2EF8:  MOVWF  x49
2EFA:  MOVFF  63B,64B
2EFE:  MOVLW  01
2F00:  MOVWF  x4C
2F02:  MOVLB  0
2F04:  CALL   1D4A
2F08:  MOVLB  6
....................        
.................... } 
2F0A:  MOVLB  0
2F0C:  RETLW  00
....................  
.................... Float Leer_Sensor_Flujo(int media) 
.................... { 
....................     if(negativo==10) 
*
2408:  MOVLB  5
240A:  MOVF   x11,W
240C:  SUBLW  0A
240E:  BNZ   2456
....................     { 
....................       x_uno=Inflow_adc+Diferencia; 
2410:  MOVFF  52D,636
2414:  MOVFF  52C,635
2418:  MOVLB  0
241A:  CALL   1294
241E:  BCF    FD8.1
2420:  MOVFF  03,63C
2424:  MOVFF  02,63B
2428:  MOVFF  01,63A
242C:  MOVFF  00,639
2430:  MOVFF  575,640
2434:  MOVFF  574,63F
2438:  MOVFF  573,63E
243C:  MOVFF  572,63D
2440:  CALL   1428
2444:  MOVFF  03,591
2448:  MOVFF  02,590
244C:  MOVFF  01,58F
2450:  MOVFF  00,58E
2454:  MOVLB  5
....................     } 
....................     if(negativo==20) 
2456:  MOVF   x11,W
2458:  SUBLW  14
245A:  BNZ   24A0
....................     { 
....................       x_uno=Inflow_adc-Diferencia; 
245C:  MOVFF  52D,636
2460:  MOVFF  52C,635
2464:  MOVLB  0
2466:  CALL   1294
246A:  BSF    FD8.1
246C:  MOVFF  03,63C
2470:  MOVFF  02,63B
2474:  MOVFF  01,63A
2478:  MOVFF  00,639
247C:  MOVFF  575,640
2480:  MOVFF  574,63F
2484:  MOVFF  573,63E
2488:  MOVFF  572,63D
248C:  CALL   1428
2490:  MOVFF  03,591
2494:  MOVFF  02,590
2498:  MOVFF  01,58F
249C:  MOVFF  00,58E
....................     } 
....................     x_cuadrado=x_uno*x_uno; 
24A0:  MOVFF  591,655
24A4:  MOVFF  590,654
24A8:  MOVFF  58F,653
24AC:  MOVFF  58E,652
24B0:  MOVFF  591,659
24B4:  MOVFF  590,658
24B8:  MOVFF  58F,657
24BC:  MOVFF  58E,656
24C0:  MOVLB  0
24C2:  CALL   16DC
24C6:  MOVFF  03,595
24CA:  MOVFF  02,594
24CE:  MOVFF  01,593
24D2:  MOVFF  00,592
....................     x_cubo=x_uno*x_cuadrado; 
24D6:  MOVFF  591,655
24DA:  MOVFF  590,654
24DE:  MOVFF  58F,653
24E2:  MOVFF  58E,652
24E6:  MOVFF  595,659
24EA:  MOVFF  594,658
24EE:  MOVFF  593,657
24F2:  MOVFF  592,656
24F6:  CALL   16DC
24FA:  MOVFF  03,599
24FE:  MOVFF  02,598
2502:  MOVFF  01,597
2506:  MOVFF  00,596
....................     Velocidad=(x_cubo*a)+(x_cuadrado*b)+(x_uno*c)+d;  
250A:  MOVFF  599,655
250E:  MOVFF  598,654
2512:  MOVFF  597,653
2516:  MOVFF  596,652
251A:  MOVFF  5B1,659
251E:  MOVFF  5B0,658
2522:  MOVFF  5AF,657
2526:  MOVFF  5AE,656
252A:  CALL   16DC
252E:  MOVFF  00,631
2532:  MOVFF  01,632
2536:  MOVFF  02,633
253A:  MOVFF  03,634
253E:  MOVFF  595,655
2542:  MOVFF  594,654
2546:  MOVFF  593,653
254A:  MOVFF  592,652
254E:  MOVFF  5B5,659
2552:  MOVFF  5B4,658
2556:  MOVFF  5B3,657
255A:  MOVFF  5B2,656
255E:  CALL   16DC
2562:  BCF    FD8.1
2564:  MOVFF  634,63C
2568:  MOVFF  633,63B
256C:  MOVFF  632,63A
2570:  MOVFF  631,639
2574:  MOVFF  03,640
2578:  MOVFF  02,63F
257C:  MOVFF  01,63E
2580:  MOVFF  00,63D
2584:  CALL   1428
2588:  MOVFF  00,631
258C:  MOVFF  01,632
2590:  MOVFF  02,633
2594:  MOVFF  03,634
2598:  MOVFF  591,655
259C:  MOVFF  590,654
25A0:  MOVFF  58F,653
25A4:  MOVFF  58E,652
25A8:  MOVFF  5B9,659
25AC:  MOVFF  5B8,658
25B0:  MOVFF  5B7,657
25B4:  MOVFF  5B6,656
25B8:  CALL   16DC
25BC:  BCF    FD8.1
25BE:  MOVFF  634,63C
25C2:  MOVFF  633,63B
25C6:  MOVFF  632,63A
25CA:  MOVFF  631,639
25CE:  MOVFF  03,640
25D2:  MOVFF  02,63F
25D6:  MOVFF  01,63E
25DA:  MOVFF  00,63D
25DE:  CALL   1428
25E2:  MOVFF  00,631
25E6:  MOVFF  01,632
25EA:  MOVFF  02,633
25EE:  MOVFF  03,634
25F2:  BCF    FD8.1
25F4:  MOVFF  03,63C
25F8:  MOVFF  02,63B
25FC:  MOVFF  01,63A
2600:  MOVFF  00,639
2604:  MOVFF  5BD,640
2608:  MOVFF  5BC,63F
260C:  MOVFF  5BB,63E
2610:  MOVFF  5BA,63D
2614:  CALL   1428
2618:  MOVFF  03,58D
261C:  MOVFF  02,58C
2620:  MOVFF  01,58B
2624:  MOVFF  00,58A
....................     //Velocidad=Velocidad*correccion;//Ajuste de Temperatura 
....................     Velocidad=Velocidad-0.08; 
2628:  BSF    FD8.1
262A:  MOVFF  58D,63C
262E:  MOVFF  58C,63B
2632:  MOVFF  58B,63A
2636:  MOVFF  58A,639
263A:  MOVLW  0A
263C:  MOVLB  6
263E:  MOVWF  x40
2640:  MOVLW  D7
2642:  MOVWF  x3F
2644:  MOVLW  23
2646:  MOVWF  x3E
2648:  MOVLW  7B
264A:  MOVWF  x3D
264C:  MOVLB  0
264E:  CALL   1428
2652:  MOVFF  03,58D
2656:  MOVFF  02,58C
265A:  MOVFF  01,58B
265E:  MOVFF  00,58A
....................     if(Velocidad<0.0) 
2662:  MOVFF  58D,638
2666:  MOVFF  58C,637
266A:  MOVFF  58B,636
266E:  MOVFF  58A,635
2672:  MOVLB  6
2674:  CLRF   x3C
2676:  CLRF   x3B
2678:  CLRF   x3A
267A:  CLRF   x39
267C:  MOVLB  0
267E:  RCALL  238E
2680:  BNC   268C
....................      {Velocidad=0.0;} 
2682:  MOVLB  5
2684:  CLRF   x8D
2686:  CLRF   x8C
2688:  CLRF   x8B
268A:  CLRF   x8A
....................       
....................      if(l>=media) 
268C:  MOVLB  6
268E:  MOVF   x30,W
2690:  MOVLB  5
2692:  SUBWF  x18,W
2694:  BNC   2698
....................        {l=0;} 
2696:  CLRF   x18
....................       
....................      promedio[l]=Velocidad;l++; 
2698:  MOVF   x18,W
269A:  MULLW  04
269C:  MOVF   FF3,W
269E:  CLRF   03
26A0:  ADDLW  BE
26A2:  MOVWF  FE9
26A4:  MOVLW  05
26A6:  ADDWFC 03,W
26A8:  MOVWF  FEA
26AA:  MOVFF  58A,FEF
26AE:  MOVFF  58B,FEC
26B2:  MOVFF  58C,FEC
26B6:  MOVFF  58D,FEC
26BA:  INCF   x18,F
....................      Flujo2=0; 
26BC:  MOVLB  6
26BE:  CLRF   x01
26C0:  CLRF   x00
26C2:  MOVLB  5
26C4:  CLRF   xFF
26C6:  CLRF   xFE
....................         for(h=0;h<=(media-1);h++) 
26C8:  CLRF   x19
26CA:  MOVLW  01
26CC:  MOVLB  6
26CE:  SUBWF  x30,W
26D0:  MOVLB  5
26D2:  SUBWF  x19,W
26D4:  BZ    26D8
26D6:  BC    2748
....................         { 
....................            Flujo2+=promedio[h]; 
26D8:  MOVF   x19,W
26DA:  MULLW  04
26DC:  MOVF   FF3,W
26DE:  CLRF   03
26E0:  ADDLW  BE
26E2:  MOVWF  FE9
26E4:  MOVLW  05
26E6:  ADDWFC 03,W
26E8:  MOVWF  FEA
26EA:  MOVFF  FEF,00
26EE:  MOVFF  FEC,01
26F2:  MOVFF  FEC,02
26F6:  MOVFF  FEC,03
26FA:  MOVFF  FEA,632
26FE:  MOVFF  FE9,631
2702:  BCF    FD8.1
2704:  MOVFF  601,63C
2708:  MOVFF  600,63B
270C:  MOVFF  5FF,63A
2710:  MOVFF  5FE,639
2714:  MOVFF  03,640
2718:  MOVFF  02,63F
271C:  MOVFF  01,63E
2720:  MOVFF  00,63D
2724:  MOVLB  0
2726:  CALL   1428
272A:  MOVFF  632,FEA
272E:  MOVFF  631,FE9
2732:  MOVFF  03,601
2736:  MOVFF  02,600
273A:  MOVFF  01,5FF
273E:  MOVFF  00,5FE
....................         }  
2742:  MOVLB  5
2744:  INCF   x19,F
2746:  BRA    26CA
....................            Flujo2=(Flujo2/media)*Ajuste1;  
2748:  MOVLB  6
274A:  CLRF   x36
274C:  MOVFF  630,635
2750:  MOVLB  0
2752:  CALL   1294
2756:  MOVFF  601,638
275A:  MOVFF  600,637
275E:  MOVFF  5FF,636
2762:  MOVFF  5FE,635
2766:  MOVFF  03,63C
276A:  MOVFF  02,63B
276E:  MOVFF  01,63A
2772:  MOVFF  00,639
2776:  CALL   12CA
277A:  MOVFF  00,631
277E:  MOVFF  01,632
2782:  MOVFF  02,633
2786:  MOVFF  03,634
278A:  MOVFF  03,655
278E:  MOVFF  02,654
2792:  MOVFF  01,653
2796:  MOVFF  00,652
279A:  MOVFF  59D,659
279E:  MOVFF  59C,658
27A2:  MOVFF  59B,657
27A6:  MOVFF  59A,656
27AA:  CALL   16DC
27AE:  MOVFF  03,601
27B2:  MOVFF  02,600
27B6:  MOVFF  01,5FF
27BA:  MOVFF  00,5FE
....................            return Flujo2; 
27BE:  MOVFF  5FE,00
27C2:  MOVFF  5FF,01
27C6:  MOVFF  600,02
27CA:  MOVFF  601,03
.................... } 
27CE:  GOTO   2A90 (RETURN)
....................  
.................... float Leer_Sensor_Presion(int media){ 
27D2:  MOVLB  6
27D4:  CLRF   x34
27D6:  CLRF   x33
27D8:  CLRF   x32
27DA:  CLRF   x31
....................    float promediopresion=0.0; 
....................     
....................    V1=Filtro_Downflow_adc;  
27DC:  MOVFF  533,636
27E0:  MOVFF  532,635
27E4:  MOVLB  0
27E6:  CALL   1294
27EA:  MOVFF  03,60D
27EE:  MOVFF  02,60C
27F2:  MOVFF  01,60B
27F6:  MOVFF  00,60A
....................    //V1 = (x_uno*5.0)/1023.0;   //Lectura de Divisor de Voltaje de PT100 con resistencia de 1k (+-10%) 
....................    Presion=(V1/G)-1.0;// Presion=(Voltaje/Ganancia)-1 
27FA:  MOVFF  60D,638
27FE:  MOVFF  60C,637
2802:  MOVFF  60B,636
2806:  MOVFF  60A,635
280A:  MOVFF  615,63C
280E:  MOVFF  614,63B
2812:  MOVFF  613,63A
2816:  MOVFF  612,639
281A:  CALL   12CA
281E:  MOVFF  00,635
2822:  MOVFF  01,636
2826:  MOVFF  02,637
282A:  MOVFF  03,638
282E:  BSF    FD8.1
2830:  MOVFF  03,63C
2834:  MOVFF  02,63B
2838:  MOVFF  01,63A
283C:  MOVFF  00,639
2840:  MOVLB  6
2842:  CLRF   x40
2844:  CLRF   x3F
2846:  CLRF   x3E
2848:  MOVLW  7F
284A:  MOVWF  x3D
284C:  MOVLB  0
284E:  CALL   1428
2852:  MOVFF  03,611
2856:  MOVFF  02,610
285A:  MOVFF  01,60F
285E:  MOVFF  00,60E
....................     
....................    if(Presion<0.0) 
2862:  MOVFF  611,638
2866:  MOVFF  610,637
286A:  MOVFF  60F,636
286E:  MOVFF  60E,635
2872:  MOVLB  6
2874:  CLRF   x3C
2876:  CLRF   x3B
2878:  CLRF   x3A
287A:  CLRF   x39
287C:  MOVLB  0
287E:  RCALL  238E
2880:  BNC   288C
....................    { 
....................       Presion=0.0; 
2882:  MOVLB  6
2884:  CLRF   x11
2886:  CLRF   x10
2888:  CLRF   x0F
288A:  CLRF   x0E
....................    } 
....................  
....................    if(r>media-1) 
288C:  MOVLW  01
288E:  MOVLB  6
2890:  SUBWF  x30,W
2892:  MOVLB  5
2894:  SUBWF  x17,W
2896:  BZ    289C
2898:  BNC   289C
....................    {r=0;} 
289A:  CLRF   x17
....................    PromPresion[r]=Presion*4.02;r++; 
289C:  MOVF   x17,W
289E:  MULLW  04
28A0:  MOVF   FF3,W
28A2:  CLRF   03
28A4:  ADDLW  DE
28A6:  MOVWF  FE9
28A8:  MOVLW  05
28AA:  ADDWFC 03,W
28AC:  MOVWF  FEA
28AE:  MOVFF  611,655
28B2:  MOVFF  610,654
28B6:  MOVFF  60F,653
28BA:  MOVFF  60E,652
28BE:  MOVLW  D7
28C0:  MOVLB  6
28C2:  MOVWF  x59
28C4:  MOVLW  A3
28C6:  MOVWF  x58
28C8:  CLRF   x57
28CA:  MOVLW  81
28CC:  MOVWF  x56
28CE:  MOVLB  0
28D0:  CALL   16DC
28D4:  MOVFF  00,FEF
28D8:  MOVFF  01,FEC
28DC:  MOVFF  02,FEC
28E0:  MOVFF  03,FEC
28E4:  MOVLB  5
28E6:  INCF   x17,F
....................           
....................    for(q=0;q<=(media-1);q++) 
28E8:  CLRF   x16
28EA:  MOVLW  01
28EC:  MOVLB  6
28EE:  SUBWF  x30,W
28F0:  MOVLB  5
28F2:  SUBWF  x16,W
28F4:  BZ    28F8
28F6:  BC    2968
....................    { 
....................       promediopresion+=PromPresion[q]; 
28F8:  MOVF   x16,W
28FA:  MULLW  04
28FC:  MOVF   FF3,W
28FE:  CLRF   03
2900:  ADDLW  DE
2902:  MOVWF  FE9
2904:  MOVLW  05
2906:  ADDWFC 03,W
2908:  MOVWF  FEA
290A:  MOVFF  FEF,00
290E:  MOVFF  FEC,01
2912:  MOVFF  FEC,02
2916:  MOVFF  FEC,03
291A:  MOVFF  FEA,636
291E:  MOVFF  FE9,635
2922:  BCF    FD8.1
2924:  MOVFF  634,63C
2928:  MOVFF  633,63B
292C:  MOVFF  632,63A
2930:  MOVFF  631,639
2934:  MOVFF  03,640
2938:  MOVFF  02,63F
293C:  MOVFF  01,63E
2940:  MOVFF  00,63D
2944:  MOVLB  0
2946:  CALL   1428
294A:  MOVFF  636,FEA
294E:  MOVFF  635,FE9
2952:  MOVFF  03,634
2956:  MOVFF  02,633
295A:  MOVFF  01,632
295E:  MOVFF  00,631
....................    }  
2962:  MOVLB  5
2964:  INCF   x16,F
2966:  BRA    28EA
....................    promediopresion=promediopresion/media;    
2968:  MOVLB  6
296A:  CLRF   x36
296C:  MOVFF  630,635
2970:  MOVLB  0
2972:  CALL   1294
2976:  MOVFF  634,638
297A:  MOVFF  633,637
297E:  MOVFF  632,636
2982:  MOVFF  631,635
2986:  MOVFF  03,63C
298A:  MOVFF  02,63B
298E:  MOVFF  01,63A
2992:  MOVFF  00,639
2996:  CALL   12CA
299A:  MOVFF  03,634
299E:  MOVFF  02,633
29A2:  MOVFF  01,632
29A6:  MOVFF  00,631
....................     
....................    return promediopresion; 
29AA:  MOVFF  631,00
29AE:  MOVFF  632,01
29B2:  MOVFF  633,02
29B6:  MOVFF  634,03
.................... } 
29BA:  GOTO   2AA6 (RETURN)
....................  
.................... #int_TIMER1 
.................... void temp1s(void){ 
....................    set_timer1(5536); 
*
10EE:  MOVLW  15
10F0:  MOVWF  FCF
10F2:  MOVLW  A0
10F4:  MOVWF  FCE
....................    tiempos++; 
10F6:  MOVLB  4
10F8:  INCF   x36,F
10FA:  BTFSC  FD8.2
10FC:  INCF   x37,F
....................     
....................    if(flag_latencia==1) 
10FE:  BTFSS  x4E.3
1100:  BRA    110A
....................    { 
....................       t_latencia++;          
1102:  MOVLB  5
1104:  INCF   x36,F
1106:  BTFSC  FD8.2
1108:  INCF   x37,F
....................    } 
....................     
....................    if(t_latencia>=3000) 
110A:  MOVLB  5
110C:  MOVF   x37,W
110E:  SUBLW  0A
1110:  BC    1120
1112:  XORLW  FF
1114:  BNZ   111C
1116:  MOVF   x36,W
1118:  SUBLW  B7
111A:  BC    1120
....................    {Latencia=1;} 
111C:  MOVLB  4
111E:  BSF    x4E.2
....................                  
....................    if(tiempos>=200) 
1120:  MOVLB  4
1122:  MOVF   x37,F
1124:  BNZ   112E
1126:  MOVF   x36,W
1128:  SUBLW  C7
112A:  BTFSC  FD8.0
112C:  BRA    1262
....................    { 
....................       tiempos=0;imprimir=1;inicie++;Lectura=1;tiemporeset++; 
112E:  CLRF   x37
1130:  CLRF   x36
1132:  BSF    x4C.7
1134:  MOVLB  5
1136:  INCF   x10,F
1138:  MOVLB  4
113A:  BSF    x4E.6
113C:  MOVLB  5
113E:  INCF   x15,F
....................     
....................    if(tiempo_postpurga) 
1140:  MOVLB  4
1142:  BTFSS  x4E.1
1144:  BRA    1182
....................    { 
....................       Tppurga[0]++; 
1146:  MOVLB  5
1148:  INCF   x46,F
....................       if(Tppurga[0]>9) 
114A:  BTFSC  x46.7
114C:  BRA    1158
114E:  MOVF   x46,W
1150:  SUBLW  09
1152:  BC    1158
....................       { 
....................          Tppurga[0]=0; 
1154:  CLRF   x46
....................          Tppurga[1]++; 
1156:  INCF   x47,F
....................       } 
....................       if(Tppurga[1]>5) 
1158:  BTFSC  x47.7
115A:  BRA    1166
115C:  MOVF   x47,W
115E:  SUBLW  05
1160:  BC    1166
....................       {   
....................          Tppurga[1]=0; 
1162:  CLRF   x47
....................          Tppurga[2]++; 
1164:  INCF   x48,F
....................       } 
....................       if(Tppurga[2]>9) 
1166:  BTFSC  x48.7
1168:  BRA    1174
116A:  MOVF   x48,W
116C:  SUBLW  09
116E:  BC    1174
....................       { 
....................          Tppurga[2]=0; 
1170:  CLRF   x48
....................          Tppurga[3]++; 
1172:  INCF   x49,F
....................       } 
....................       if(Tppurga[3]>5) 
1174:  BTFSC  x49.7
1176:  BRA    1180
1178:  MOVF   x49,W
117A:  SUBLW  05
117C:  BC    1180
....................       { 
....................          Tppurga[3]=0; 
117E:  CLRF   x49
1180:  MOVLB  4
....................       } 
....................    } 
....................     
....................    if(tiempo_uv==1) 
1182:  BTFSS  x4D.7
1184:  BRA    1214
....................    { 
....................       minutos_uv++; 
1186:  MOVLB  5
1188:  INCF   x38,F
118A:  BTFSC  FD8.2
118C:  INCF   x39,F
....................       if(minutos_uv>=3600) 
118E:  MOVF   x39,W
1190:  SUBLW  0D
1192:  BC    11DA
1194:  XORLW  FF
1196:  BNZ   119E
1198:  MOVF   x38,W
119A:  SUBLW  0F
119C:  BC    11DA
....................       //if(minutos_uv>=1) 
....................       {  minutos_uv=0; 
119E:  CLRF   x39
11A0:  CLRF   x38
....................          Tuv[0]++; 
11A2:  INCF   x4E,F
....................          if(Tuv[0]>9) 
11A4:  BTFSC  x4E.7
11A6:  BRA    11B2
11A8:  MOVF   x4E,W
11AA:  SUBLW  09
11AC:  BC    11B2
....................          { 
....................             Tuv[0]=0; 
11AE:  CLRF   x4E
....................             Tuv[1]++; 
11B0:  INCF   x4F,F
....................          } 
....................          if(Tuv[1]>9) 
11B2:  BTFSC  x4F.7
11B4:  BRA    11C0
11B6:  MOVF   x4F,W
11B8:  SUBLW  09
11BA:  BC    11C0
....................          { 
....................             Tuv[1]=0; 
11BC:  CLRF   x4F
....................             Tuv[2]++; 
11BE:  INCF   x50,F
....................          } 
....................          if(Tuv[2]>9) 
11C0:  BTFSC  x50.7
11C2:  BRA    11CE
11C4:  MOVF   x50,W
11C6:  SUBLW  09
11C8:  BC    11CE
....................          { 
....................             Tuv[2]=0; 
11CA:  CLRF   x50
....................             Tuv[3]++; 
11CC:  INCF   x51,F
....................          } 
....................          if(Tuv[3]>9) 
11CE:  BTFSC  x51.7
11D0:  BRA    11DA
11D2:  MOVF   x51,W
11D4:  SUBLW  09
11D6:  BC    11DA
....................          { 
....................             Tuv[3]=0; 
11D8:  CLRF   x51
....................          } 
....................       }       
....................        
....................          Tempouv[0]++; 
11DA:  INCF   x52,F
....................          if(Tempouv[0]>9) 
11DC:  BTFSC  x52.7
11DE:  BRA    11EA
11E0:  MOVF   x52,W
11E2:  SUBLW  09
11E4:  BC    11EA
....................          { 
....................             Tempouv[0]=0; 
11E6:  CLRF   x52
....................             Tempouv[1]++; 
11E8:  INCF   x53,F
....................          } 
....................          if(Tempouv[1]>5) 
11EA:  BTFSC  x53.7
11EC:  BRA    11F8
11EE:  MOVF   x53,W
11F0:  SUBLW  05
11F2:  BC    11F8
....................          { 
....................             Tempouv[1]=0; 
11F4:  CLRF   x53
....................             Tempouv[2]++; 
11F6:  INCF   x54,F
....................          } 
....................          if(Tempouv[2]>9) 
11F8:  BTFSC  x54.7
11FA:  BRA    1206
11FC:  MOVF   x54,W
11FE:  SUBLW  09
1200:  BC    1206
....................          { 
....................             Tempouv[2]=0; 
1202:  CLRF   x54
....................             Tempouv[3]++; 
1204:  INCF   x55,F
....................          } 
....................          if(Tempouv[3]>5) 
1206:  BTFSC  x55.7
1208:  BRA    1212
120A:  MOVF   x55,W
120C:  SUBLW  05
120E:  BC    1212
....................          { 
....................             Tempouv[3]=0; 
1210:  CLRF   x55
1212:  MOVLB  4
....................          } 
....................                
....................    } 
....................     
....................    if(flag_blower==1) 
1214:  BTFSS  x4D.1
1216:  BRA    1222
....................    { 
....................       minutos_trabajo++;  
1218:  MOVLB  5
121A:  INCF   x3A,F
121C:  BTFSC  FD8.2
121E:  INCF   x3B,F
1220:  MOVLB  4
....................    } 
....................    
....................    if(tiempo_purga==1) 
1222:  BTFSS  x4D.6
1224:  BRA    1262
....................    {                   
....................       Tpurga[0]++; 
1226:  MOVLB  5
1228:  INCF   x3E,F
....................       if(Tpurga[0]>9) 
122A:  BTFSC  x3E.7
122C:  BRA    1238
122E:  MOVF   x3E,W
1230:  SUBLW  09
1232:  BC    1238
....................       { 
....................          Tpurga[0]=0; 
1234:  CLRF   x3E
....................          Tpurga[1]++; 
1236:  INCF   x3F,F
....................       } 
....................       if(Tpurga[1]>5) 
1238:  BTFSC  x3F.7
123A:  BRA    1246
123C:  MOVF   x3F,W
123E:  SUBLW  05
1240:  BC    1246
....................       { 
....................          Tpurga[1]=0; 
1242:  CLRF   x3F
....................          Tpurga[2]++; 
1244:  INCF   x40,F
....................       } 
....................       if(Tpurga[2]>9) 
1246:  BTFSC  x40.7
1248:  BRA    1254
124A:  MOVF   x40,W
124C:  SUBLW  09
124E:  BC    1254
....................       { 
....................          Tpurga[2]=0; 
1250:  CLRF   x40
....................          Tpurga[3]++; 
1252:  INCF   x41,F
....................       } 
....................       if(Tpurga[3]>5) 
1254:  BTFSC  x41.7
1256:  BRA    1260
1258:  MOVF   x41,W
125A:  SUBLW  05
125C:  BC    1260
....................       { 
....................          Tpurga[3]=0; 
125E:  CLRF   x41
1260:  MOVLB  4
....................       } 
....................    }        
....................          
....................    } 
.................... } 
....................  
1262:  BCF    F9E.0
1264:  MOVLB  0
1266:  GOTO   0054
.................... void Envio_I2C(direccion, posicion, dato){ 
....................  
....................    i2c_start();            // Comienzo comunicación 
*
1900:  BSF    F93.0
1902:  MOVLW  02
1904:  MOVWF  00
1906:  DECFSZ 00,F
1908:  BRA    1906
190A:  BSF    F93.1
190C:  MOVLW  02
190E:  MOVWF  00
1910:  DECFSZ 00,F
1912:  BRA    1910
1914:  BCF    F8A.0
1916:  BCF    F93.0
1918:  MOVLW  02
191A:  MOVWF  00
191C:  DECFSZ 00,F
191E:  BRA    191C
1920:  BCF    F8A.1
1922:  BCF    F93.1
....................    i2c_write(direccion);   // Dirección del esclavo en el bus I2C 
1924:  MOVFF  631,634
1928:  RCALL  188A
....................    i2c_write(posicion);    // Posición donde se guardara el dato transmitido 
192A:  MOVFF  632,634
192E:  RCALL  188A
....................    i2c_write(dato);        // Dato a transmitir 
1930:  MOVFF  633,634
1934:  RCALL  188A
....................    i2c_stop();             // Fin comunicación 
1936:  BCF    F93.0
1938:  NOP   
193A:  BSF    F93.1
193C:  BTFSS  F81.1
193E:  BRA    193C
1940:  MOVLW  02
1942:  MOVWF  00
1944:  DECFSZ 00,F
1946:  BRA    1944
1948:  BRA    194A
194A:  NOP   
194C:  BSF    F93.0
194E:  MOVLW  02
1950:  MOVWF  00
1952:  DECFSZ 00,F
1954:  BRA    1952
....................  } 
1956:  GOTO   198C (RETURN)
....................  
.................... void Lectura_I2C (byte direccion, byte posicion, byte &dato) { 
....................  
....................    i2c_start();            // Comienzo de la comunicación 
*
29D8:  BSF    F93.0
29DA:  MOVLW  02
29DC:  MOVWF  00
29DE:  DECFSZ 00,F
29E0:  BRA    29DE
29E2:  BSF    F93.1
29E4:  MOVLW  02
29E6:  MOVWF  00
29E8:  DECFSZ 00,F
29EA:  BRA    29E8
29EC:  BCF    F8A.0
29EE:  BCF    F93.0
29F0:  MOVLW  02
29F2:  MOVWF  00
29F4:  DECFSZ 00,F
29F6:  BRA    29F4
29F8:  BCF    F8A.1
29FA:  BCF    F93.1
....................    i2c_write(direccion);   // Dirección del esclavo en el bus I2C 
29FC:  MOVFF  630,634
2A00:  MOVLB  0
2A02:  CALL   188A
....................    i2c_write(posicion);    // Posición de donde se leerá el dato en el esclavo 
2A06:  MOVFF  631,634
2A0A:  CALL   188A
....................    i2c_start();            // Reinicio 
2A0E:  BSF    F93.0
2A10:  MOVLW  02
2A12:  MOVWF  00
2A14:  DECFSZ 00,F
2A16:  BRA    2A14
2A18:  BSF    F93.1
2A1A:  MOVLW  02
2A1C:  MOVWF  00
2A1E:  DECFSZ 00,F
2A20:  BRA    2A1E
2A22:  BTFSS  F81.1
2A24:  BRA    2A22
2A26:  BCF    F8A.0
2A28:  BCF    F93.0
2A2A:  MOVLW  02
2A2C:  MOVWF  00
2A2E:  DECFSZ 00,F
2A30:  BRA    2A2E
2A32:  BCF    F8A.1
2A34:  BCF    F93.1
....................    i2c_write(direccion+1); // Dirección del esclavo en modo lectura 
2A36:  MOVLW  01
2A38:  MOVLB  6
2A3A:  ADDWF  x30,W
2A3C:  MOVWF  x32
2A3E:  MOVWF  x34
2A40:  MOVLB  0
2A42:  CALL   188A
....................    dato=i2c_read(0);       // Lectura del dato 
2A46:  CLRF   00
2A48:  BRA    22D6
2A4A:  MOVFF  01,449
....................    i2c_stop();             // Fin comunicación 
2A4E:  BCF    F93.0
2A50:  NOP   
2A52:  BSF    F93.1
2A54:  BTFSS  F81.1
2A56:  BRA    2A54
2A58:  MOVLW  02
2A5A:  MOVWF  00
2A5C:  DECFSZ 00,F
2A5E:  BRA    2A5C
2A60:  BRA    2A62
2A62:  NOP   
2A64:  BSF    F93.0
2A66:  MOVLW  02
2A68:  MOVWF  00
2A6A:  DECFSZ 00,F
2A6C:  BRA    2A6A
.................... } 
....................  
.................... void Lee_Vector(void){ 
....................    Inflow_l=txbuf[0]; 
*
2342:  MOVFF  416,522
....................    Inflow_h=txbuf[1]; 
2346:  MOVFF  417,523
....................    Downflow_l=txbuf[2]; 
234A:  MOVFF  418,525
....................    Downflow_h=txbuf[3]; 
234E:  MOVFF  419,524
....................    Vidrio_abajo=txbuf[4]; 
2352:  MOVFF  41A,526
....................    Vidrio_ok=txbuf[5]; 
2356:  MOVFF  41B,527
....................    Filtro_Inflow_l=txbuf[8]; 
235A:  MOVFF  41E,528
....................    Filtro_Inflow_h=txbuf[9]; 
235E:  MOVFF  41F,529
....................    Filtro_Downflow_l=txbuf[6]; 
2362:  MOVFF  41C,52A
....................    Filtro_Downflow_h=txbuf[7]; 
2366:  MOVFF  41D,52B
....................     
....................    Inflow_adc=make16(Inflow_h,Inflow_l); 
236A:  MOVFF  523,52D
236E:  MOVFF  522,52C
....................    Downflow_adc=make16(Downflow_h,Downflow_l); 
2372:  MOVFF  524,52F
2376:  MOVFF  525,52E
....................     
....................    Filtro_Inflow_adc=make16(Filtro_Inflow_h,Filtro_Inflow_l); 
237A:  MOVFF  529,531
237E:  MOVFF  528,530
....................    Filtro_Downflow_adc=make16(Filtro_Downflow_h,Filtro_Downflow_l); 
2382:  MOVFF  52B,533
2386:  MOVFF  52A,532
.................... } 
238A:  GOTO   2A8A (RETURN)
....................  
.................... void Carga_Vector(void){ 
....................    SlaveA0Tx[0]=LuzBlanca; 
*
17D2:  MOVFF  51C,439
....................    SlaveA0Tx[1]=LuzUV; 
17D6:  MOVFF  51D,43A
....................    SlaveA0Tx[2]=Motor; 
17DA:  MOVFF  51E,43B
....................    SlaveA0Tx[3]=Toma; 
17DE:  MOVFF  520,43C
....................    SlaveA0Tx[4]=Alarma; 
17E2:  MOVFF  51F,43D
....................    SlaveA0Tx[5]=(int8)Inflow; 
17E6:  MOVFF  569,633
17EA:  MOVFF  568,632
17EE:  MOVFF  567,631
17F2:  MOVFF  566,630
17F6:  RCALL  16A0
17F8:  MOVFF  01,43E
....................    Inflowdec=100*(Inflow-(int8)Inflow); 
17FC:  MOVFF  569,633
1800:  MOVFF  568,632
1804:  MOVFF  567,631
1808:  MOVFF  566,630
180C:  RCALL  16A0
180E:  MOVLB  6
1810:  CLRF   x36
1812:  MOVFF  01,635
1816:  MOVLB  0
1818:  RCALL  1294
181A:  BSF    FD8.1
181C:  MOVFF  569,63C
1820:  MOVFF  568,63B
1824:  MOVFF  567,63A
1828:  MOVFF  566,639
182C:  MOVFF  03,640
1830:  MOVFF  02,63F
1834:  MOVFF  01,63E
1838:  MOVFF  00,63D
183C:  RCALL  1428
183E:  MOVLB  6
1840:  CLRF   x55
1842:  CLRF   x54
1844:  MOVLW  48
1846:  MOVWF  x53
1848:  MOVLW  85
184A:  MOVWF  x52
184C:  MOVFF  03,659
1850:  MOVFF  02,658
1854:  MOVFF  01,657
1858:  MOVFF  00,656
185C:  MOVLB  0
185E:  RCALL  16DC
1860:  MOVFF  03,589
1864:  MOVFF  02,588
1868:  MOVFF  01,587
186C:  MOVFF  00,586
....................    SlaveA0Tx[6]=(int8)Inflowdec; 
1870:  MOVFF  589,633
1874:  MOVFF  588,632
1878:  MOVFF  587,631
187C:  MOVFF  586,630
1880:  RCALL  16A0
1882:  MOVFF  01,43F
.................... } 
1886:  GOTO   195C (RETURN)
....................  
.................... void Envio_Esclavos(void){ 
....................    Carga_Vector(); 
*
195A:  BRA    17D2
....................    for(i=0;i<7;i++) 
195C:  MOVLB  4
195E:  CLRF   x38
1960:  MOVF   x38,W
1962:  SUBLW  06
1964:  BNC   1992
....................    { 
....................       direccion=0xA0; 
1966:  MOVLW  A0
1968:  MOVWF  x4A
....................       Envio_I2C(direccion,i,SlaveA0Tx[i]); 
196A:  CLRF   03
196C:  MOVF   x38,W
196E:  ADDLW  39
1970:  MOVWF  FE9
1972:  MOVLW  04
1974:  ADDWFC 03,W
1976:  MOVWF  FEA
1978:  MOVFF  FEF,630
197C:  MOVFF  44A,631
1980:  MOVFF  438,632
1984:  MOVFF  630,633
1988:  MOVLB  0
198A:  BRA    1900
....................    }  
198C:  MOVLB  4
198E:  INCF   x38,F
1990:  BRA    1960
.................... } 
1992:  MOVLB  0
1994:  RETLW  00
.................... void Lectura_Esclavos(void){ 
....................    // Lectura 
....................    for(i=0;i<10;i++) 
*
29BE:  MOVLB  4
29C0:  CLRF   x38
29C2:  MOVF   x38,W
29C4:  SUBLW  09
29C6:  BNC   2A86
....................    { 
....................       direccion=0xA0;                        //Dirección en el bus I2c 
29C8:  MOVLW  A0
29CA:  MOVWF  x4A
....................       posicion=i;                         //Posición de memoria a leer 
29CC:  MOVFF  438,44B
....................       Lectura_I2C(direccion, posicion, dato);    //Lectura por I2C 
29D0:  MOVFF  44A,630
29D4:  MOVFF  44B,631
....................       txbuf[i]=(int8)dato; 
*
2A6E:  CLRF   03
2A70:  MOVLB  4
2A72:  MOVF   x38,W
2A74:  ADDLW  16
2A76:  MOVWF  FE9
2A78:  MOVLW  04
2A7A:  ADDWFC 03,W
2A7C:  MOVWF  FEA
2A7E:  MOVFF  449,FEF
....................       //Muestra en el lcd las variables de la transmisión 
....................       //lcd_gotoxy(1,1); 
....................       //printf(lcd_putc, "\fI2C=%x Pos.%d =%x" direccion, posicion, dato); 
....................       //delay_ms (1000);  
....................    } 
2A82:  INCF   x38,F
2A84:  BRA    29C2
....................    Lee_Vector(); 
2A86:  MOVLB  0
2A88:  BRA    2342
....................    Inflow=Leer_Sensor_Flujo(MediaMovil); 
2A8A:  MOVFF  512,630
2A8E:  BRA    2408
2A90:  MOVFF  03,569
2A94:  MOVFF  02,568
2A98:  MOVFF  01,567
2A9C:  MOVFF  00,566
....................    Filtro_Downflow=Leer_Sensor_Presion(MediaMovil); 
2AA0:  MOVFF  512,630
2AA4:  BRA    27D2
2AA6:  MOVFF  03,571
2AAA:  MOVFF  02,570
2AAE:  MOVFF  01,56F
2AB2:  MOVFF  00,56E
.................... } 
2AB6:  RETLW  00
....................  
.................... void main(){ 
*
31EE:  CLRF   FF8
31F0:  BCF    FD0.7
31F2:  BSF    07.7
31F4:  CLRF   FEA
31F6:  CLRF   FE9
31F8:  MOVLB  4
31FA:  CLRF   x37
31FC:  CLRF   x36
31FE:  CLRF   x38
3200:  CLRF   x49
3202:  CLRF   x4A
3204:  CLRF   x4B
3206:  BCF    x4C.0
3208:  BCF    x4C.1
320A:  BCF    x4C.2
320C:  BCF    x4C.3
320E:  BCF    x4C.4
3210:  BCF    x4C.5
3212:  BCF    x4C.6
3214:  BCF    x4C.7
3216:  BCF    x4D.0
3218:  BCF    x4D.1
321A:  BCF    x4D.2
321C:  BCF    x4D.3
321E:  BCF    x4D.4
3220:  BCF    x4D.5
3222:  BCF    x4D.6
3224:  BCF    x4D.7
3226:  BCF    x4E.0
3228:  BCF    x4E.1
322A:  BCF    x4E.2
322C:  BCF    x4E.3
322E:  BCF    x4E.4
3230:  BCF    x4E.5
3232:  BCF    x4E.6
3234:  BCF    x4E.7
3236:  MOVLW  C8
3238:  MOVLB  5
323A:  MOVWF  x0D
323C:  MOVLW  01
323E:  MOVWF  x0E
3240:  MOVWF  x0F
3242:  CLRF   x10
3244:  MOVLW  0A
3246:  MOVWF  x11
3248:  MOVLW  05
324A:  MOVWF  x12
324C:  CLRF   x13
324E:  CLRF   x14
3250:  CLRF   x15
3252:  CLRF   x16
3254:  CLRF   x17
3256:  CLRF   x18
3258:  CLRF   x19
325A:  CLRF   x1A
325C:  CLRF   x1B
325E:  MOVLW  0A
3260:  MOVWF  x1C
3262:  MOVWF  x1D
3264:  MOVWF  x1E
3266:  MOVWF  x1F
3268:  MOVWF  x20
326A:  CLRF   x21
326C:  CLRF   x22
326E:  CLRF   x23
3270:  CLRF   x24
3272:  CLRF   x25
3274:  CLRF   x26
3276:  CLRF   x27
3278:  CLRF   x28
327A:  CLRF   x29
327C:  CLRF   x2A
327E:  CLRF   x2B
3280:  CLRF   x2D
3282:  CLRF   x2C
3284:  CLRF   x2F
3286:  CLRF   x2E
3288:  CLRF   x31
328A:  CLRF   x30
328C:  CLRF   x33
328E:  CLRF   x32
3290:  CLRF   x35
3292:  CLRF   x34
3294:  CLRF   x37
3296:  CLRF   x36
3298:  CLRF   x39
329A:  CLRF   x38
329C:  CLRF   x3B
329E:  CLRF   x3A
32A0:  CLRF   x3D
32A2:  CLRF   x3C
32A4:  CLRF   x69
32A6:  CLRF   x68
32A8:  CLRF   x67
32AA:  CLRF   x66
32AC:  CLRF   x6D
32AE:  CLRF   x6C
32B0:  CLRF   x6B
32B2:  CLRF   x6A
32B4:  CLRF   x71
32B6:  CLRF   x70
32B8:  CLRF   x6F
32BA:  CLRF   x6E
32BC:  CLRF   x75
32BE:  CLRF   x74
32C0:  CLRF   x73
32C2:  CLRF   x72
32C4:  CLRF   x79
32C6:  CLRF   x78
32C8:  CLRF   x77
32CA:  CLRF   x76
32CC:  CLRF   x7D
32CE:  CLRF   x7C
32D0:  CLRF   x7B
32D2:  CLRF   x7A
32D4:  CLRF   x81
32D6:  CLRF   x80
32D8:  CLRF   x7F
32DA:  CLRF   x7E
32DC:  CLRF   x85
32DE:  CLRF   x84
32E0:  CLRF   x83
32E2:  CLRF   x82
32E4:  CLRF   x89
32E6:  CLRF   x88
32E8:  CLRF   x87
32EA:  CLRF   x86
32EC:  CLRF   x8D
32EE:  CLRF   x8C
32F0:  CLRF   x8B
32F2:  CLRF   x8A
32F4:  CLRF   x91
32F6:  CLRF   x90
32F8:  CLRF   x8F
32FA:  CLRF   x8E
32FC:  CLRF   x95
32FE:  CLRF   x94
3300:  CLRF   x93
3302:  CLRF   x92
3304:  CLRF   x99
3306:  CLRF   x98
3308:  CLRF   x97
330A:  CLRF   x96
330C:  CLRF   x9D
330E:  CLRF   x9C
3310:  CLRF   x9B
3312:  CLRF   x9A
3314:  CLRF   xA1
3316:  CLRF   xA0
3318:  CLRF   x9F
331A:  CLRF   x9E
331C:  CLRF   xA5
331E:  CLRF   xA4
3320:  CLRF   xA3
3322:  CLRF   xA2
3324:  CLRF   xA9
3326:  CLRF   xA8
3328:  CLRF   xA7
332A:  CLRF   xA6
332C:  CLRF   xAD
332E:  CLRF   xAC
3330:  CLRF   xAB
3332:  CLRF   xAA
3334:  MOVLW  19
3336:  MOVWF  xB1
3338:  MOVLW  53
333A:  MOVWF  xB0
333C:  MOVLW  18
333E:  MOVWF  xAF
3340:  MOVLW  68
3342:  MOVWF  xAE
3344:  MOVLW  E9
3346:  MOVWF  xB5
3348:  MOVLW  BD
334A:  MOVWF  xB4
334C:  MOVLW  C6
334E:  MOVWF  xB3
3350:  MOVLW  71
3352:  MOVWF  xB2
3354:  MOVLW  BE
3356:  MOVWF  xB9
3358:  MOVLW  96
335A:  MOVWF  xB8
335C:  MOVLW  24
335E:  MOVWF  xB7
3360:  MOVLW  7A
3362:  MOVWF  xB6
3364:  MOVLW  F3
3366:  MOVWF  xBD
3368:  MOVLW  5A
336A:  MOVWF  xBC
336C:  MOVLW  AB
336E:  MOVWF  xBB
3370:  MOVLW  81
3372:  MOVWF  xBA
3374:  MOVLB  6
3376:  CLRF   x01
3378:  CLRF   x00
337A:  MOVLB  5
337C:  CLRF   xFF
337E:  CLRF   xFE
3380:  MOVLB  6
3382:  CLRF   x05
3384:  CLRF   x04
3386:  MOVLW  4B
3388:  MOVWF  x03
338A:  MOVLW  86
338C:  MOVWF  x02
338E:  CLRF   x09
3390:  CLRF   x08
3392:  CLRF   x07
3394:  CLRF   x06
3396:  CLRF   x0D
3398:  CLRF   x0C
339A:  CLRF   x0B
339C:  CLRF   x0A
339E:  CLRF   x11
33A0:  CLRF   x10
33A2:  CLRF   x0F
33A4:  CLRF   x0E
33A6:  CLRF   x15
33A8:  CLRF   x14
33AA:  CLRF   x13
33AC:  MOVLW  80
33AE:  MOVWF  x12
33B0:  CLRF   x19
33B2:  CLRF   x18
33B4:  CLRF   x17
33B6:  CLRF   x16
33B8:  MOVF   FC1,W
33BA:  ANDLW  C0
33BC:  IORLW  0F
33BE:  MOVWF  FC1
33C0:  MOVLW  07
33C2:  MOVWF  FB4
33C4:  MOVLW  4A
33C6:  MOVLB  4
33C8:  MOVWF  x4F
33CA:  MOVLW  50
33CC:  MOVWF  x50
33CE:  MOVLW  20
33D0:  MOVWF  x51
33D2:  MOVLW  49
33D4:  MOVWF  x52
33D6:  MOVLW  6E
33D8:  MOVWF  x53
33DA:  MOVLW  67
33DC:  MOVWF  x54
33DE:  MOVLW  6C
33E0:  MOVWF  x55
33E2:  MOVLW  6F
33E4:  MOVWF  x56
33E6:  MOVLW  62
33E8:  MOVWF  x57
33EA:  MOVLW  61
33EC:  MOVWF  x58
33EE:  MOVLW  6C
33F0:  MOVWF  x59
33F2:  CLRF   x5A
33F4:  MOVLW  43
33F6:  MOVWF  x5B
33F8:  MOVLW  61
33FA:  MOVWF  x5C
33FC:  MOVLW  62
33FE:  MOVWF  x5D
3400:  MOVLW  69
3402:  MOVWF  x5E
3404:  MOVLW  6E
3406:  MOVWF  x5F
3408:  MOVLW  61
340A:  MOVWF  x60
340C:  MOVLW  20
340E:  MOVWF  x61
3410:  MOVLW  46
3412:  MOVWF  x62
3414:  MOVLW  6C
3416:  MOVWF  x63
3418:  MOVLW  75
341A:  MOVWF  x64
341C:  MOVLW  6A
341E:  MOVWF  x65
3420:  MOVLW  6F
3422:  MOVWF  x66
3424:  MOVLW  20
3426:  MOVWF  x67
3428:  MOVLW  4C
342A:  MOVWF  x68
342C:  MOVLW  61
342E:  MOVWF  x69
3430:  MOVLW  6D
3432:  MOVWF  x6A
3434:  MOVLW  69
3436:  MOVWF  x6B
3438:  MOVLW  6E
343A:  MOVWF  x6C
343C:  MOVLW  61
343E:  MOVWF  x6D
3440:  MOVLW  72
3442:  MOVWF  x6E
3444:  CLRF   x6F
3446:  MOVLW  54
3448:  MOVWF  x70
344A:  MOVLW  20
344C:  MOVWF  x71
344E:  MOVLW  65
3450:  MOVWF  x72
3452:  MOVLW  73
3454:  MOVWF  x73
3456:  MOVLW  74
3458:  MOVWF  x74
345A:  MOVLW  3D
345C:  MOVWF  x75
345E:  CLRF   x76
3460:  MOVLW  3A
3462:  MOVWF  x77
3464:  CLRF   x78
3466:  MOVLW  48
3468:  MOVWF  x79
346A:  MOVLW  6F
346C:  MOVWF  x7A
346E:  MOVLW  72
3470:  MOVWF  x7B
3472:  MOVLW  69
3474:  MOVWF  x7C
3476:  MOVLW  7A
3478:  MOVWF  x7D
347A:  MOVLW  6F
347C:  MOVWF  x7E
347E:  MOVLW  6E
3480:  MOVWF  x7F
3482:  MOVLW  74
3484:  MOVWF  x80
3486:  MOVLW  61
3488:  MOVWF  x81
348A:  MOVLW  6C
348C:  MOVWF  x82
348E:  CLRF   x83
3490:  MOVLW  54
3492:  MOVWF  x84
3494:  MOVLW  69
3496:  MOVWF  x85
3498:  MOVLW  65
349A:  MOVWF  x86
349C:  MOVLW  6D
349E:  MOVWF  x87
34A0:  MOVLW  70
34A2:  MOVWF  x88
34A4:  MOVLW  6F
34A6:  MOVWF  x89
34A8:  MOVLW  20
34AA:  MOVWF  x8A
34AC:  MOVLW  64
34AE:  MOVWF  x8B
34B0:  MOVLW  65
34B2:  MOVWF  x8C
34B4:  MOVLW  20
34B6:  MOVWF  x8D
34B8:  MOVLW  50
34BA:  MOVWF  x8E
34BC:  MOVLW  75
34BE:  MOVWF  x8F
34C0:  MOVLW  72
34C2:  MOVWF  x90
34C4:  MOVLW  67
34C6:  MOVWF  x91
34C8:  MOVLW  61
34CA:  MOVWF  x92
34CC:  CLRF   x93
34CE:  MOVLW  55
34D0:  MOVWF  x94
34D2:  MOVLW  56
34D4:  MOVWF  x95
34D6:  CLRF   x96
34D8:  MOVLW  21
34DA:  MOVWF  x97
34DC:  MOVWF  x98
34DE:  MOVLW  55
34E0:  MOVWF  x99
34E2:  MOVLW  62
34E4:  MOVWF  x9A
34E6:  MOVLW  69
34E8:  MOVWF  x9B
34EA:  MOVLW  71
34EC:  MOVWF  x9C
34EE:  MOVLW  75
34F0:  MOVWF  x9D
34F2:  MOVLW  65
34F4:  MOVWF  x9E
34F6:  MOVLW  20
34F8:  MOVWF  x9F
34FA:  MOVLW  56
34FC:  MOVWF  xA0
34FE:  MOVLW  69
3500:  MOVWF  xA1
3502:  MOVLW  64
3504:  MOVWF  xA2
3506:  MOVLW  72
3508:  MOVWF  xA3
350A:  MOVLW  69
350C:  MOVWF  xA4
350E:  MOVLW  6F
3510:  MOVWF  xA5
3512:  MOVLW  21
3514:  MOVWF  xA6
3516:  MOVWF  xA7
3518:  CLRF   xA8
351A:  MOVLW  4A
351C:  MOVWF  xA9
351E:  MOVLW  50
3520:  MOVWF  xAA
3522:  MOVLW  20
3524:  MOVWF  xAB
3526:  MOVLW  43
3528:  MOVWF  xAC
352A:  MOVLW  46
352C:  MOVWF  xAD
352E:  MOVLW  4C
3530:  MOVWF  xAE
3532:  MOVLW  48
3534:  MOVWF  xAF
3536:  MOVLW  31
3538:  MOVWF  xB0
353A:  MOVLW  38
353C:  MOVWF  xB1
353E:  MOVLW  30
3540:  MOVWF  xB2
3542:  CLRF   xB3
3544:  MOVLW  44
3546:  MOVWF  xB4
3548:  MOVLW  6E
354A:  MOVWF  xB5
354C:  MOVLW  66
354E:  MOVWF  xB6
3550:  MOVLW  6C
3552:  MOVWF  xB7
3554:  MOVLW  6F
3556:  MOVWF  xB8
3558:  MOVLW  77
355A:  MOVWF  xB9
355C:  MOVLW  28
355E:  MOVWF  xBA
3560:  MOVLW  6D
3562:  MOVWF  xBB
3564:  MOVLW  2F
3566:  MOVWF  xBC
3568:  MOVLW  73
356A:  MOVWF  xBD
356C:  MOVLW  29
356E:  MOVWF  xBE
3570:  MOVLW  3A
3572:  MOVWF  xBF
3574:  CLRF   xC0
3576:  MOVLW  46
3578:  MOVWF  xC1
357A:  MOVLW  61
357C:  MOVWF  xC2
357E:  MOVLW  62
3580:  MOVWF  xC3
3582:  MOVLW  72
3584:  MOVWF  xC4
3586:  MOVLW  69
3588:  MOVWF  xC5
358A:  MOVLW  63
358C:  MOVWF  xC6
358E:  MOVLW  61
3590:  MOVWF  xC7
3592:  MOVLW  3A
3594:  MOVWF  xC8
3596:  MOVLW  32
3598:  MOVWF  xC9
359A:  MOVLW  30
359C:  MOVWF  xCA
359E:  MOVLW  33
35A0:  MOVWF  xCB
35A2:  MOVLW  2E
35A4:  MOVWF  xCC
35A6:  MOVLW  30
35A8:  MOVWF  xCD
35AA:  CLRF   xCE
35AC:  MOVLW  41
35AE:  MOVWF  xCF
35B0:  MOVLW  63
35B2:  MOVWF  xD0
35B4:  MOVLW  74
35B6:  MOVWF  xD1
35B8:  MOVLW  75
35BA:  MOVWF  xD2
35BC:  MOVLW  61
35BE:  MOVWF  xD3
35C0:  MOVLW  6C
35C2:  MOVWF  xD4
35C4:  MOVLW  3A
35C6:  MOVWF  xD5
35C8:  CLRF   xD6
35CA:  MOVLW  41
35CC:  MOVWF  xD7
35CE:  MOVLW  6A
35D0:  MOVWF  xD8
35D2:  MOVLW  75
35D4:  MOVWF  xD9
35D6:  MOVLW  73
35D8:  MOVWF  xDA
35DA:  MOVLW  74
35DC:  MOVWF  xDB
35DE:  MOVLW  65
35E0:  MOVWF  xDC
35E2:  MOVLW  3A
35E4:  MOVWF  xDD
35E6:  CLRF   xDE
35E8:  MOVLW  55
35EA:  MOVWF  xDF
35EC:  MOVLW  56
35EE:  MOVWF  xE0
35F0:  MOVLW  4C
35F2:  MOVWF  xE1
35F4:  MOVLW  69
35F6:  MOVWF  xE2
35F8:  MOVLW  66
35FA:  MOVWF  xE3
35FC:  MOVLW  65
35FE:  MOVWF  xE4
3600:  MOVLW  3A
3602:  MOVWF  xE5
3604:  CLRF   xE6
3606:  MOVLW  46
3608:  MOVWF  xE7
360A:  MOVLW  69
360C:  MOVWF  xE8
360E:  MOVLW  6C
3610:  MOVWF  xE9
3612:  MOVLW  74
3614:  MOVWF  xEA
3616:  MOVLW  65
3618:  MOVWF  xEB
361A:  MOVLW  72
361C:  MOVWF  xEC
361E:  MOVLW  3A
3620:  MOVWF  xED
3622:  CLRF   xEE
3624:  MOVLW  46
3626:  MOVWF  xEF
3628:  MOVLW  61
362A:  MOVWF  xF0
362C:  MOVLW  62
362E:  MOVWF  xF1
3630:  MOVLW  72
3632:  MOVWF  xF2
3634:  MOVLW  69
3636:  MOVWF  xF3
3638:  MOVLW  63
363A:  MOVWF  xF4
363C:  MOVLW  61
363E:  MOVWF  xF5
3640:  MOVLW  3A
3642:  MOVWF  xF6
3644:  MOVLW  32
3646:  MOVWF  xF7
3648:  MOVLW  33
364A:  MOVWF  xF8
364C:  MOVLW  35
364E:  MOVWF  xF9
3650:  MOVLW  2E
3652:  MOVWF  xFA
3654:  MOVLW  30
3656:  MOVWF  xFB
3658:  CLRF   xFC
365A:  MOVLW  21
365C:  MOVWF  xFD
365E:  MOVLW  50
3660:  MOVWF  xFE
3662:  MOVLW  65
3664:  MOVWF  xFF
3666:  MOVLW  72
3668:  MOVLB  5
366A:  MOVWF  x00
366C:  MOVLW  64
366E:  MOVWF  x01
3670:  MOVLW  69
3672:  MOVWF  x02
3674:  MOVLW  64
3676:  MOVWF  x03
3678:  MOVLW  61
367A:  MOVWF  x04
367C:  MOVLW  20
367E:  MOVWF  x05
3680:  MOVLW  46
3682:  MOVWF  x06
3684:  MOVLW  6C
3686:  MOVWF  x07
3688:  MOVLW  75
368A:  MOVWF  x08
368C:  MOVLW  6A
368E:  MOVWF  x09
3690:  MOVLW  6F
3692:  MOVWF  x0A
3694:  MOVLW  21
3696:  MOVWF  x0B
3698:  CLRF   x0C
369A:  CLRF   x3E
369C:  CLRF   x3F
369E:  CLRF   x40
36A0:  CLRF   x41
36A2:  MOVLW  09
36A4:  MOVWF  x42
36A6:  CLRF   x43
36A8:  CLRF   x44
36AA:  CLRF   x45
36AC:  CLRF   x46
36AE:  CLRF   x47
36B0:  CLRF   x48
36B2:  CLRF   x49
36B4:  MOVWF  x4A
36B6:  CLRF   x4B
36B8:  CLRF   x4C
36BA:  CLRF   x4D
36BC:  CLRF   x4E
36BE:  CLRF   x4F
36C0:  CLRF   x50
36C2:  CLRF   x51
36C4:  CLRF   x52
36C6:  CLRF   x53
36C8:  CLRF   x54
36CA:  CLRF   x55
36CC:  CLRF   x56
36CE:  CLRF   x57
36D0:  CLRF   x58
36D2:  CLRF   x59
36D4:  CLRF   x5A
36D6:  CLRF   x5B
36D8:  CLRF   x5C
36DA:  CLRF   x5D
36DC:  CLRF   x5E
36DE:  CLRF   x5F
36E0:  CLRF   x60
36E2:  CLRF   x61
36E4:  CLRF   x62
36E6:  CLRF   x63
36E8:  CLRF   x64
36EA:  CLRF   x65
36EC:  CLRF   xBE
36EE:  CLRF   xBF
36F0:  CLRF   xC0
36F2:  CLRF   xC1
36F4:  CLRF   xC2
36F6:  CLRF   xC3
36F8:  CLRF   xC4
36FA:  CLRF   xC5
36FC:  CLRF   xC6
36FE:  CLRF   xC7
3700:  CLRF   xC8
3702:  CLRF   xC9
3704:  CLRF   xCA
3706:  CLRF   xCB
3708:  CLRF   xCC
370A:  CLRF   xCD
370C:  CLRF   xCE
370E:  CLRF   xCF
3710:  CLRF   xD0
3712:  CLRF   xD1
3714:  CLRF   xD2
3716:  CLRF   xD3
3718:  CLRF   xD4
371A:  CLRF   xD5
371C:  CLRF   xD6
371E:  CLRF   xD7
3720:  CLRF   xD8
3722:  CLRF   xD9
3724:  CLRF   xDA
3726:  CLRF   xDB
3728:  CLRF   xDC
372A:  CLRF   xDD
372C:  CLRF   xDE
372E:  CLRF   xDF
3730:  CLRF   xE0
3732:  CLRF   xE1
3734:  CLRF   xE2
3736:  CLRF   xE3
3738:  CLRF   xE4
373A:  CLRF   xE5
373C:  CLRF   xE6
373E:  CLRF   xE7
3740:  CLRF   xE8
3742:  CLRF   xE9
3744:  CLRF   xEA
3746:  CLRF   xEB
3748:  CLRF   xEC
374A:  CLRF   xED
374C:  CLRF   xEE
374E:  CLRF   xEF
3750:  CLRF   xF0
3752:  CLRF   xF1
3754:  CLRF   xF2
3756:  CLRF   xF3
3758:  CLRF   xF4
375A:  CLRF   xF5
375C:  CLRF   xF6
375E:  CLRF   xF7
3760:  CLRF   xF8
3762:  CLRF   xF9
3764:  CLRF   xFA
3766:  CLRF   xFB
3768:  CLRF   xFC
376A:  CLRF   xFD
376C:  MOVLB  6
376E:  CLRF   x2E
3770:  CLRF   x2F
....................  
....................    for (posicion=0;posicion<0x10;posicion++) 
3772:  MOVLB  4
3774:  CLRF   x4B
3776:  MOVF   x4B,W
3778:  SUBLW  0F
377A:  BNC   3790
....................    { 
....................       SlaveA0Tx[posicion] = 0x00; 
377C:  CLRF   03
377E:  MOVF   x4B,W
3780:  ADDLW  39
3782:  MOVWF  FE9
3784:  MOVLW  04
3786:  ADDWFC 03,W
3788:  MOVWF  FEA
378A:  CLRF   FEF
....................    } 
378C:  INCF   x4B,F
378E:  BRA    3776
....................  
....................    setup_timer_1(T1_INTERNAL|T1_DIV_BY_1); 
3790:  MOVLW  85
3792:  MOVWF  FCD
....................    enable_interrupts(INT_TIMER1); 
3794:  BSF    F9D.0
....................    enable_interrupts(global);    
3796:  MOVLW  C0
3798:  IORWF  FF2,F
....................     
....................     
....................    Password[0]=read_eeprom(0); 
379A:  MOVFF  FF2,630
379E:  BCF    FF2.7
37A0:  CLRF   FA9
37A2:  BCF    FA6.6
37A4:  BCF    FA6.7
37A6:  BSF    FA6.0
37A8:  MOVF   FA8,W
37AA:  MOVLB  6
37AC:  BTFSC  x30.7
37AE:  BSF    FF2.7
37B0:  MOVLB  5
37B2:  MOVWF  x62
....................    delay_ms(10); 
37B4:  MOVLW  0A
37B6:  MOVLB  6
37B8:  MOVWF  x31
37BA:  MOVLB  0
37BC:  CALL   126A
....................    Password[1]=read_eeprom(1); 
37C0:  MOVFF  FF2,630
37C4:  BCF    FF2.7
37C6:  MOVLW  01
37C8:  MOVWF  FA9
37CA:  BCF    FA6.6
37CC:  BCF    FA6.7
37CE:  BSF    FA6.0
37D0:  MOVF   FA8,W
37D2:  MOVLB  6
37D4:  BTFSC  x30.7
37D6:  BSF    FF2.7
37D8:  MOVLB  5
37DA:  MOVWF  x63
....................    delay_ms(10); 
37DC:  MOVLW  0A
37DE:  MOVLB  6
37E0:  MOVWF  x31
37E2:  MOVLB  0
37E4:  CALL   126A
....................    Password[2]=read_eeprom(2); 
37E8:  MOVFF  FF2,630
37EC:  BCF    FF2.7
37EE:  MOVLW  02
37F0:  MOVWF  FA9
37F2:  BCF    FA6.6
37F4:  BCF    FA6.7
37F6:  BSF    FA6.0
37F8:  MOVF   FA8,W
37FA:  MOVLB  6
37FC:  BTFSC  x30.7
37FE:  BSF    FF2.7
3800:  MOVLB  5
3802:  MOVWF  x64
....................    delay_ms(10); 
3804:  MOVLW  0A
3806:  MOVLB  6
3808:  MOVWF  x31
380A:  MOVLB  0
380C:  CALL   126A
....................    Password[3]=read_eeprom(3); 
3810:  MOVFF  FF2,630
3814:  BCF    FF2.7
3816:  MOVLW  03
3818:  MOVWF  FA9
381A:  BCF    FA6.6
381C:  BCF    FA6.7
381E:  BSF    FA6.0
3820:  MOVF   FA8,W
3822:  MOVLB  6
3824:  BTFSC  x30.7
3826:  BSF    FF2.7
3828:  MOVLB  5
382A:  MOVWF  x65
....................    delay_ms(10); 
382C:  MOVLW  0A
382E:  MOVLB  6
3830:  MOVWF  x31
3832:  MOVLB  0
3834:  CALL   126A
....................    Tpurgap[0]=read_eeprom(4); 
3838:  MOVFF  FF2,630
383C:  BCF    FF2.7
383E:  MOVLW  04
3840:  MOVWF  FA9
3842:  BCF    FA6.6
3844:  BCF    FA6.7
3846:  BSF    FA6.0
3848:  MOVF   FA8,W
384A:  MOVLB  6
384C:  BTFSC  x30.7
384E:  BSF    FF2.7
3850:  MOVLB  5
3852:  MOVWF  x42
....................    delay_ms(10); 
3854:  MOVLW  0A
3856:  MOVLB  6
3858:  MOVWF  x31
385A:  MOVLB  0
385C:  CALL   126A
....................    Tpurgap[1]=read_eeprom(5); 
3860:  MOVFF  FF2,630
3864:  BCF    FF2.7
3866:  MOVLW  05
3868:  MOVWF  FA9
386A:  BCF    FA6.6
386C:  BCF    FA6.7
386E:  BSF    FA6.0
3870:  MOVF   FA8,W
3872:  MOVLB  6
3874:  BTFSC  x30.7
3876:  BSF    FF2.7
3878:  MOVLB  5
387A:  MOVWF  x43
....................    delay_ms(10); 
387C:  MOVLW  0A
387E:  MOVLB  6
3880:  MOVWF  x31
3882:  MOVLB  0
3884:  CALL   126A
....................    Tpurgap[2]=read_eeprom(6); 
3888:  MOVFF  FF2,630
388C:  BCF    FF2.7
388E:  MOVLW  06
3890:  MOVWF  FA9
3892:  BCF    FA6.6
3894:  BCF    FA6.7
3896:  BSF    FA6.0
3898:  MOVF   FA8,W
389A:  MOVLB  6
389C:  BTFSC  x30.7
389E:  BSF    FF2.7
38A0:  MOVLB  5
38A2:  MOVWF  x44
....................    delay_ms(10); 
38A4:  MOVLW  0A
38A6:  MOVLB  6
38A8:  MOVWF  x31
38AA:  MOVLB  0
38AC:  CALL   126A
....................    Tpurgap[3]=read_eeprom(7); 
38B0:  MOVFF  FF2,630
38B4:  BCF    FF2.7
38B6:  MOVLW  07
38B8:  MOVWF  FA9
38BA:  BCF    FA6.6
38BC:  BCF    FA6.7
38BE:  BSF    FA6.0
38C0:  MOVF   FA8,W
38C2:  MOVLB  6
38C4:  BTFSC  x30.7
38C6:  BSF    FF2.7
38C8:  MOVLB  5
38CA:  MOVWF  x45
....................    delay_ms(10); 
38CC:  MOVLW  0A
38CE:  MOVLB  6
38D0:  MOVWF  x31
38D2:  MOVLB  0
38D4:  CALL   126A
....................    Tppurgap[0]=read_eeprom(8); 
38D8:  MOVFF  FF2,630
38DC:  BCF    FF2.7
38DE:  MOVLW  08
38E0:  MOVWF  FA9
38E2:  BCF    FA6.6
38E4:  BCF    FA6.7
38E6:  BSF    FA6.0
38E8:  MOVF   FA8,W
38EA:  MOVLB  6
38EC:  BTFSC  x30.7
38EE:  BSF    FF2.7
38F0:  MOVLB  5
38F2:  MOVWF  x4A
....................    delay_ms(10); 
38F4:  MOVLW  0A
38F6:  MOVLB  6
38F8:  MOVWF  x31
38FA:  MOVLB  0
38FC:  CALL   126A
....................    Tppurgap[1]=read_eeprom(9); 
3900:  MOVFF  FF2,630
3904:  BCF    FF2.7
3906:  MOVLW  09
3908:  MOVWF  FA9
390A:  BCF    FA6.6
390C:  BCF    FA6.7
390E:  BSF    FA6.0
3910:  MOVF   FA8,W
3912:  MOVLB  6
3914:  BTFSC  x30.7
3916:  BSF    FF2.7
3918:  MOVLB  5
391A:  MOVWF  x4B
....................    delay_ms(10); 
391C:  MOVLW  0A
391E:  MOVLB  6
3920:  MOVWF  x31
3922:  MOVLB  0
3924:  CALL   126A
....................    Tppurgap[2]=read_eeprom(10); 
3928:  MOVFF  FF2,630
392C:  BCF    FF2.7
392E:  MOVLW  0A
3930:  MOVWF  FA9
3932:  BCF    FA6.6
3934:  BCF    FA6.7
3936:  BSF    FA6.0
3938:  MOVF   FA8,W
393A:  MOVLB  6
393C:  BTFSC  x30.7
393E:  BSF    FF2.7
3940:  MOVLB  5
3942:  MOVWF  x4C
....................    delay_ms(10); 
3944:  MOVLW  0A
3946:  MOVLB  6
3948:  MOVWF  x31
394A:  MOVLB  0
394C:  CALL   126A
....................    Tppurgap[3]=read_eeprom(11); 
3950:  MOVFF  FF2,630
3954:  BCF    FF2.7
3956:  MOVLW  0B
3958:  MOVWF  FA9
395A:  BCF    FA6.6
395C:  BCF    FA6.7
395E:  BSF    FA6.0
3960:  MOVF   FA8,W
3962:  MOVLB  6
3964:  BTFSC  x30.7
3966:  BSF    FF2.7
3968:  MOVLB  5
396A:  MOVWF  x4D
....................    delay_ms(10); 
396C:  MOVLW  0A
396E:  MOVLB  6
3970:  MOVWF  x31
3972:  MOVLB  0
3974:  CALL   126A
....................    Tuv[0]=read_eeprom(12); 
3978:  MOVFF  FF2,630
397C:  BCF    FF2.7
397E:  MOVLW  0C
3980:  MOVWF  FA9
3982:  BCF    FA6.6
3984:  BCF    FA6.7
3986:  BSF    FA6.0
3988:  MOVF   FA8,W
398A:  MOVLB  6
398C:  BTFSC  x30.7
398E:  BSF    FF2.7
3990:  MOVLB  5
3992:  MOVWF  x4E
....................    delay_ms(10); 
3994:  MOVLW  0A
3996:  MOVLB  6
3998:  MOVWF  x31
399A:  MOVLB  0
399C:  CALL   126A
....................    Tuv[1]=read_eeprom(13); 
39A0:  MOVFF  FF2,630
39A4:  BCF    FF2.7
39A6:  MOVLW  0D
39A8:  MOVWF  FA9
39AA:  BCF    FA6.6
39AC:  BCF    FA6.7
39AE:  BSF    FA6.0
39B0:  MOVF   FA8,W
39B2:  MOVLB  6
39B4:  BTFSC  x30.7
39B6:  BSF    FF2.7
39B8:  MOVLB  5
39BA:  MOVWF  x4F
....................    delay_ms(10); 
39BC:  MOVLW  0A
39BE:  MOVLB  6
39C0:  MOVWF  x31
39C2:  MOVLB  0
39C4:  CALL   126A
....................    Tuv[2]=read_eeprom(14); 
39C8:  MOVFF  FF2,630
39CC:  BCF    FF2.7
39CE:  MOVLW  0E
39D0:  MOVWF  FA9
39D2:  BCF    FA6.6
39D4:  BCF    FA6.7
39D6:  BSF    FA6.0
39D8:  MOVF   FA8,W
39DA:  MOVLB  6
39DC:  BTFSC  x30.7
39DE:  BSF    FF2.7
39E0:  MOVLB  5
39E2:  MOVWF  x50
....................    delay_ms(10); 
39E4:  MOVLW  0A
39E6:  MOVLB  6
39E8:  MOVWF  x31
39EA:  MOVLB  0
39EC:  CALL   126A
....................    Tuv[3]=read_eeprom(15); 
39F0:  MOVFF  FF2,630
39F4:  BCF    FF2.7
39F6:  MOVLW  0F
39F8:  MOVWF  FA9
39FA:  BCF    FA6.6
39FC:  BCF    FA6.7
39FE:  BSF    FA6.0
3A00:  MOVF   FA8,W
3A02:  MOVLB  6
3A04:  BTFSC  x30.7
3A06:  BSF    FF2.7
3A08:  MOVLB  5
3A0A:  MOVWF  x51
....................    delay_ms(10); 
3A0C:  MOVLW  0A
3A0E:  MOVLB  6
3A10:  MOVWF  x31
3A12:  MOVLB  0
3A14:  CALL   126A
....................    Ttrabajo[0]=read_eeprom(16); 
3A18:  MOVFF  FF2,630
3A1C:  BCF    FF2.7
3A1E:  MOVLW  10
3A20:  MOVWF  FA9
3A22:  BCF    FA6.6
3A24:  BCF    FA6.7
3A26:  BSF    FA6.0
3A28:  MOVF   FA8,W
3A2A:  MOVLB  6
3A2C:  BTFSC  x30.7
3A2E:  BSF    FF2.7
3A30:  MOVLB  5
3A32:  MOVWF  x5A
....................    delay_ms(10); 
3A34:  MOVLW  0A
3A36:  MOVLB  6
3A38:  MOVWF  x31
3A3A:  MOVLB  0
3A3C:  CALL   126A
....................    Ttrabajo[1]=read_eeprom(17); 
3A40:  MOVFF  FF2,630
3A44:  BCF    FF2.7
3A46:  MOVLW  11
3A48:  MOVWF  FA9
3A4A:  BCF    FA6.6
3A4C:  BCF    FA6.7
3A4E:  BSF    FA6.0
3A50:  MOVF   FA8,W
3A52:  MOVLB  6
3A54:  BTFSC  x30.7
3A56:  BSF    FF2.7
3A58:  MOVLB  5
3A5A:  MOVWF  x5B
....................    delay_ms(10); 
3A5C:  MOVLW  0A
3A5E:  MOVLB  6
3A60:  MOVWF  x31
3A62:  MOVLB  0
3A64:  CALL   126A
....................    Ttrabajo[2]=read_eeprom(18); 
3A68:  MOVFF  FF2,630
3A6C:  BCF    FF2.7
3A6E:  MOVLW  12
3A70:  MOVWF  FA9
3A72:  BCF    FA6.6
3A74:  BCF    FA6.7
3A76:  BSF    FA6.0
3A78:  MOVF   FA8,W
3A7A:  MOVLB  6
3A7C:  BTFSC  x30.7
3A7E:  BSF    FF2.7
3A80:  MOVLB  5
3A82:  MOVWF  x5C
....................    delay_ms(10); 
3A84:  MOVLW  0A
3A86:  MOVLB  6
3A88:  MOVWF  x31
3A8A:  MOVLB  0
3A8C:  CALL   126A
....................    Ttrabajo[3]=read_eeprom(19); 
3A90:  MOVFF  FF2,630
3A94:  BCF    FF2.7
3A96:  MOVLW  13
3A98:  MOVWF  FA9
3A9A:  BCF    FA6.6
3A9C:  BCF    FA6.7
3A9E:  BSF    FA6.0
3AA0:  MOVF   FA8,W
3AA2:  MOVLB  6
3AA4:  BTFSC  x30.7
3AA6:  BSF    FF2.7
3AA8:  MOVLB  5
3AAA:  MOVWF  x5D
....................    delay_ms(10); 
3AAC:  MOVLW  0A
3AAE:  MOVLB  6
3AB0:  MOVWF  x31
3AB2:  MOVLB  0
3AB4:  CALL   126A
....................    flag_alarma=read_eeprom(20); 
3AB8:  MOVFF  FF2,630
3ABC:  BCF    FF2.7
3ABE:  MOVLW  14
3AC0:  MOVWF  FA9
3AC2:  BCF    FA6.6
3AC4:  BCF    FA6.7
3AC6:  BSF    FA6.0
3AC8:  MOVF   FA8,W
3ACA:  MOVLB  6
3ACC:  BTFSC  x30.7
3ACE:  BSF    FF2.7
3AD0:  MOVWF  01
3AD2:  MOVLB  4
3AD4:  BCF    x4D.4
3AD6:  BTFSC  01.0
3AD8:  BSF    x4D.4
....................    delay_ms(10); 
3ADA:  MOVLW  0A
3ADC:  MOVLB  6
3ADE:  MOVWF  x31
3AE0:  MOVLB  0
3AE2:  CALL   126A
....................    Tempouvp[0]=read_eeprom(21); 
3AE6:  MOVFF  FF2,630
3AEA:  BCF    FF2.7
3AEC:  MOVLW  15
3AEE:  MOVWF  FA9
3AF0:  BCF    FA6.6
3AF2:  BCF    FA6.7
3AF4:  BSF    FA6.0
3AF6:  MOVF   FA8,W
3AF8:  MOVLB  6
3AFA:  BTFSC  x30.7
3AFC:  BSF    FF2.7
3AFE:  MOVLB  5
3B00:  MOVWF  x56
....................    delay_ms(10); 
3B02:  MOVLW  0A
3B04:  MOVLB  6
3B06:  MOVWF  x31
3B08:  MOVLB  0
3B0A:  CALL   126A
....................    Tempouvp[1]=read_eeprom(22); 
3B0E:  MOVFF  FF2,630
3B12:  BCF    FF2.7
3B14:  MOVLW  16
3B16:  MOVWF  FA9
3B18:  BCF    FA6.6
3B1A:  BCF    FA6.7
3B1C:  BSF    FA6.0
3B1E:  MOVF   FA8,W
3B20:  MOVLB  6
3B22:  BTFSC  x30.7
3B24:  BSF    FF2.7
3B26:  MOVLB  5
3B28:  MOVWF  x57
....................    delay_ms(10); 
3B2A:  MOVLW  0A
3B2C:  MOVLB  6
3B2E:  MOVWF  x31
3B30:  MOVLB  0
3B32:  CALL   126A
....................    Tempouvp[2]=read_eeprom(23); 
3B36:  MOVFF  FF2,630
3B3A:  BCF    FF2.7
3B3C:  MOVLW  17
3B3E:  MOVWF  FA9
3B40:  BCF    FA6.6
3B42:  BCF    FA6.7
3B44:  BSF    FA6.0
3B46:  MOVF   FA8,W
3B48:  MOVLB  6
3B4A:  BTFSC  x30.7
3B4C:  BSF    FF2.7
3B4E:  MOVLB  5
3B50:  MOVWF  x58
....................    delay_ms(10); 
3B52:  MOVLW  0A
3B54:  MOVLB  6
3B56:  MOVWF  x31
3B58:  MOVLB  0
3B5A:  CALL   126A
....................    Tempouvp[3]=read_eeprom(24); 
3B5E:  MOVFF  FF2,630
3B62:  BCF    FF2.7
3B64:  MOVLW  18
3B66:  MOVWF  FA9
3B68:  BCF    FA6.6
3B6A:  BCF    FA6.7
3B6C:  BSF    FA6.0
3B6E:  MOVF   FA8,W
3B70:  MOVLB  6
3B72:  BTFSC  x30.7
3B74:  BSF    FF2.7
3B76:  MOVLB  5
3B78:  MOVWF  x59
....................     
....................    Entero=read_eeprom(25);//Decimal1=read_eeprom(26); 
3B7A:  MOVFF  FF2,630
3B7E:  BCF    FF2.7
3B80:  MOVLW  19
3B82:  MOVWF  FA9
3B84:  BCF    FA6.6
3B86:  BCF    FA6.7
3B88:  BSF    FA6.0
3B8A:  MOVF   FA8,W
3B8C:  MOVLB  6
3B8E:  BTFSC  x30.7
3B90:  BSF    FF2.7
3B92:  MOVLB  5
3B94:  MOVWF  x1A
....................    delay_ms(10); 
3B96:  MOVLW  0A
3B98:  MOVLB  6
3B9A:  MOVWF  x31
3B9C:  MOVLB  0
3B9E:  CALL   126A
....................    Temporal=read_eeprom(26); 
3BA2:  MOVFF  FF2,630
3BA6:  BCF    FF2.7
3BA8:  MOVLW  1A
3BAA:  MOVWF  FA9
3BAC:  BCF    FA6.6
3BAE:  BCF    FA6.7
3BB0:  BSF    FA6.0
3BB2:  MOVF   FA8,W
3BB4:  MOVLB  6
3BB6:  BTFSC  x30.7
3BB8:  BSF    FF2.7
3BBA:  CLRF   x36
3BBC:  MOVWF  x35
3BBE:  MOVLB  0
3BC0:  CALL   1294
3BC4:  MOVFF  03,5A9
3BC8:  MOVFF  02,5A8
3BCC:  MOVFF  01,5A7
3BD0:  MOVFF  00,5A6
....................    delay_ms(10); 
3BD4:  MOVLW  0A
3BD6:  MOVLB  6
3BD8:  MOVWF  x31
3BDA:  MOVLB  0
3BDC:  CALL   126A
....................    Temporal=Temporal/100.0; 
3BE0:  MOVFF  5A9,638
3BE4:  MOVFF  5A8,637
3BE8:  MOVFF  5A7,636
3BEC:  MOVFF  5A6,635
3BF0:  MOVLB  6
3BF2:  CLRF   x3C
3BF4:  CLRF   x3B
3BF6:  MOVLW  48
3BF8:  MOVWF  x3A
3BFA:  MOVLW  85
3BFC:  MOVWF  x39
3BFE:  MOVLB  0
3C00:  CALL   12CA
3C04:  MOVFF  03,5A9
3C08:  MOVFF  02,5A8
3C0C:  MOVFF  01,5A7
3C10:  MOVFF  00,5A6
....................    Ajuste1=Entero+Temporal; 
3C14:  MOVLB  6
3C16:  CLRF   x36
3C18:  MOVFF  51A,635
3C1C:  MOVLB  0
3C1E:  CALL   1294
3C22:  BCF    FD8.1
3C24:  MOVFF  03,63C
3C28:  MOVFF  02,63B
3C2C:  MOVFF  01,63A
3C30:  MOVFF  00,639
3C34:  MOVFF  5A9,640
3C38:  MOVFF  5A8,63F
3C3C:  MOVFF  5A7,63E
3C40:  MOVFF  5A6,63D
3C44:  CALL   1428
3C48:  MOVFF  03,59D
3C4C:  MOVFF  02,59C
3C50:  MOVFF  01,59B
3C54:  MOVFF  00,59A
....................     
....................     
....................    Entero=read_eeprom(27);//Decimal1=read_eeprom(26); 
3C58:  MOVFF  FF2,630
3C5C:  BCF    FF2.7
3C5E:  MOVLW  1B
3C60:  MOVWF  FA9
3C62:  BCF    FA6.6
3C64:  BCF    FA6.7
3C66:  BSF    FA6.0
3C68:  MOVF   FA8,W
3C6A:  MOVLB  6
3C6C:  BTFSC  x30.7
3C6E:  BSF    FF2.7
3C70:  MOVLB  5
3C72:  MOVWF  x1A
....................    delay_ms(10); 
3C74:  MOVLW  0A
3C76:  MOVLB  6
3C78:  MOVWF  x31
3C7A:  MOVLB  0
3C7C:  CALL   126A
....................    Temporal=read_eeprom(28); 
3C80:  MOVFF  FF2,630
3C84:  BCF    FF2.7
3C86:  MOVLW  1C
3C88:  MOVWF  FA9
3C8A:  BCF    FA6.6
3C8C:  BCF    FA6.7
3C8E:  BSF    FA6.0
3C90:  MOVF   FA8,W
3C92:  MOVLB  6
3C94:  BTFSC  x30.7
3C96:  BSF    FF2.7
3C98:  CLRF   x36
3C9A:  MOVWF  x35
3C9C:  MOVLB  0
3C9E:  CALL   1294
3CA2:  MOVFF  03,5A9
3CA6:  MOVFF  02,5A8
3CAA:  MOVFF  01,5A7
3CAE:  MOVFF  00,5A6
....................    delay_ms(10); 
3CB2:  MOVLW  0A
3CB4:  MOVLB  6
3CB6:  MOVWF  x31
3CB8:  MOVLB  0
3CBA:  CALL   126A
....................    Temporal=Temporal/100.0; 
3CBE:  MOVFF  5A9,638
3CC2:  MOVFF  5A8,637
3CC6:  MOVFF  5A7,636
3CCA:  MOVFF  5A6,635
3CCE:  MOVLB  6
3CD0:  CLRF   x3C
3CD2:  CLRF   x3B
3CD4:  MOVLW  48
3CD6:  MOVWF  x3A
3CD8:  MOVLW  85
3CDA:  MOVWF  x39
3CDC:  MOVLB  0
3CDE:  CALL   12CA
3CE2:  MOVFF  03,5A9
3CE6:  MOVFF  02,5A8
3CEA:  MOVFF  01,5A7
3CEE:  MOVFF  00,5A6
....................    Ajuste2=Entero+Temporal; 
3CF2:  MOVLB  6
3CF4:  CLRF   x36
3CF6:  MOVFF  51A,635
3CFA:  MOVLB  0
3CFC:  CALL   1294
3D00:  BCF    FD8.1
3D02:  MOVFF  03,63C
3D06:  MOVFF  02,63B
3D0A:  MOVFF  01,63A
3D0E:  MOVFF  00,639
3D12:  MOVFF  5A9,640
3D16:  MOVFF  5A8,63F
3D1A:  MOVFF  5A7,63E
3D1E:  MOVFF  5A6,63D
3D22:  CALL   1428
3D26:  MOVFF  03,5A1
3D2A:  MOVFF  02,5A0
3D2E:  MOVFF  01,59F
3D32:  MOVFF  00,59E
....................     
....................     
....................    Entero=read_eeprom(29);//Decimal1=read_eeprom(26); 
3D36:  MOVFF  FF2,630
3D3A:  BCF    FF2.7
3D3C:  MOVLW  1D
3D3E:  MOVWF  FA9
3D40:  BCF    FA6.6
3D42:  BCF    FA6.7
3D44:  BSF    FA6.0
3D46:  MOVF   FA8,W
3D48:  MOVLB  6
3D4A:  BTFSC  x30.7
3D4C:  BSF    FF2.7
3D4E:  MOVLB  5
3D50:  MOVWF  x1A
....................    delay_ms(10); 
3D52:  MOVLW  0A
3D54:  MOVLB  6
3D56:  MOVWF  x31
3D58:  MOVLB  0
3D5A:  CALL   126A
....................    Temporal=read_eeprom(30); 
3D5E:  MOVFF  FF2,630
3D62:  BCF    FF2.7
3D64:  MOVLW  1E
3D66:  MOVWF  FA9
3D68:  BCF    FA6.6
3D6A:  BCF    FA6.7
3D6C:  BSF    FA6.0
3D6E:  MOVF   FA8,W
3D70:  MOVLB  6
3D72:  BTFSC  x30.7
3D74:  BSF    FF2.7
3D76:  CLRF   x36
3D78:  MOVWF  x35
3D7A:  MOVLB  0
3D7C:  CALL   1294
3D80:  MOVFF  03,5A9
3D84:  MOVFF  02,5A8
3D88:  MOVFF  01,5A7
3D8C:  MOVFF  00,5A6
....................    delay_ms(10); 
3D90:  MOVLW  0A
3D92:  MOVLB  6
3D94:  MOVWF  x31
3D96:  MOVLB  0
3D98:  CALL   126A
....................    Temporal=Temporal/100.0; 
3D9C:  MOVFF  5A9,638
3DA0:  MOVFF  5A8,637
3DA4:  MOVFF  5A7,636
3DA8:  MOVFF  5A6,635
3DAC:  MOVLB  6
3DAE:  CLRF   x3C
3DB0:  CLRF   x3B
3DB2:  MOVLW  48
3DB4:  MOVWF  x3A
3DB6:  MOVLW  85
3DB8:  MOVWF  x39
3DBA:  MOVLB  0
3DBC:  CALL   12CA
3DC0:  MOVFF  03,5A9
3DC4:  MOVFF  02,5A8
3DC8:  MOVFF  01,5A7
3DCC:  MOVFF  00,5A6
....................    zero_actual=Entero; 
3DD0:  MOVLB  6
3DD2:  CLRF   x36
3DD4:  MOVFF  51A,635
3DD8:  MOVLB  0
3DDA:  CALL   1294
3DDE:  MOVFF  03,609
3DE2:  MOVFF  02,608
3DE6:  MOVFF  01,607
3DEA:  MOVFF  00,606
....................     
....................    Diferencia=make16(read_eeprom(61),read_eeprom(60)); 
3DEE:  MOVFF  FF2,630
3DF2:  BCF    FF2.7
3DF4:  MOVLW  3D
3DF6:  MOVWF  FA9
3DF8:  BCF    FA6.6
3DFA:  BCF    FA6.7
3DFC:  BSF    FA6.0
3DFE:  MOVF   FA8,W
3E00:  MOVLB  6
3E02:  BTFSC  x30.7
3E04:  BSF    FF2.7
3E06:  MOVWF  x31
3E08:  MOVFF  FF2,632
3E0C:  BCF    FF2.7
3E0E:  MOVLW  3C
3E10:  MOVWF  FA9
3E12:  BCF    FA6.6
3E14:  BCF    FA6.7
3E16:  BSF    FA6.0
3E18:  MOVF   FA8,W
3E1A:  BTFSC  x32.7
3E1C:  BSF    FF2.7
3E1E:  MOVWF  x33
3E20:  MOVFF  631,03
3E24:  MOVF   x33,W
3E26:  MOVWF  x35
3E28:  MOVFF  03,636
3E2C:  MOVLB  0
3E2E:  CALL   1294
3E32:  MOVFF  03,575
3E36:  MOVFF  02,574
3E3A:  MOVFF  01,573
3E3E:  MOVFF  00,572
....................    delay_ms(10); 
3E42:  MOVLW  0A
3E44:  MOVLB  6
3E46:  MOVWF  x31
3E48:  MOVLB  0
3E4A:  CALL   126A
....................    G=make16(read_eeprom(63),read_eeprom(62)); 
3E4E:  MOVFF  FF2,630
3E52:  BCF    FF2.7
3E54:  MOVLW  3F
3E56:  MOVWF  FA9
3E58:  BCF    FA6.6
3E5A:  BCF    FA6.7
3E5C:  BSF    FA6.0
3E5E:  MOVF   FA8,W
3E60:  MOVLB  6
3E62:  BTFSC  x30.7
3E64:  BSF    FF2.7
3E66:  MOVWF  x31
3E68:  MOVFF  FF2,632
3E6C:  BCF    FF2.7
3E6E:  MOVLW  3E
3E70:  MOVWF  FA9
3E72:  BCF    FA6.6
3E74:  BCF    FA6.7
3E76:  BSF    FA6.0
3E78:  MOVF   FA8,W
3E7A:  BTFSC  x32.7
3E7C:  BSF    FF2.7
3E7E:  MOVWF  x33
3E80:  MOVFF  631,03
3E84:  MOVF   x33,W
3E86:  MOVWF  x35
3E88:  MOVFF  03,636
3E8C:  MOVLB  0
3E8E:  CALL   1294
3E92:  MOVFF  03,615
3E96:  MOVFF  02,614
3E9A:  MOVFF  01,613
3E9E:  MOVFF  00,612
....................    delay_ms(10); 
3EA2:  MOVLW  0A
3EA4:  MOVLB  6
3EA6:  MOVWF  x31
3EA8:  MOVLB  0
3EAA:  CALL   126A
....................    negativo=read_eeprom(50); 
3EAE:  MOVFF  FF2,630
3EB2:  BCF    FF2.7
3EB4:  MOVLW  32
3EB6:  MOVWF  FA9
3EB8:  BCF    FA6.6
3EBA:  BCF    FA6.7
3EBC:  BSF    FA6.0
3EBE:  MOVF   FA8,W
3EC0:  MOVLB  6
3EC2:  BTFSC  x30.7
3EC4:  BSF    FF2.7
3EC6:  MOVLB  5
3EC8:  MOVWF  x11
....................  
....................    while(true){ 
....................  
....................       Envio_Esclavos(); 
3ECA:  MOVLB  0
3ECC:  CALL   195A
....................     
....................       glcd_update(); 
3ED0:  CALL   19D6
....................     
....................    if(minutos_trabajo>=3600) // Tiempo de Trabajo 
3ED4:  MOVLB  5
3ED6:  MOVF   x3B,W
3ED8:  SUBLW  0D
3EDA:  BC    3F22
3EDC:  XORLW  FF
3EDE:  BNZ   3EE6
3EE0:  MOVF   x3A,W
3EE2:  SUBLW  0F
3EE4:  BC    3F22
....................    { 
....................       minutos_trabajo=0; 
3EE6:  CLRF   x3B
3EE8:  CLRF   x3A
....................       Ttrabajo[0]++; 
3EEA:  INCF   x5A,F
....................       if(Ttrabajo[0]>9) 
3EEC:  BTFSC  x5A.7
3EEE:  BRA    3EFA
3EF0:  MOVF   x5A,W
3EF2:  SUBLW  09
3EF4:  BC    3EFA
....................       { 
....................          Ttrabajo[0]=0; 
3EF6:  CLRF   x5A
....................          Ttrabajo[1]++; 
3EF8:  INCF   x5B,F
....................       } 
....................       if(Ttrabajo[1]>9) 
3EFA:  BTFSC  x5B.7
3EFC:  BRA    3F08
3EFE:  MOVF   x5B,W
3F00:  SUBLW  09
3F02:  BC    3F08
....................       { 
....................          Ttrabajo[1]=0; 
3F04:  CLRF   x5B
....................          Ttrabajo[2]++; 
3F06:  INCF   x5C,F
....................       } 
....................       if(Ttrabajo[2]>9) 
3F08:  BTFSC  x5C.7
3F0A:  BRA    3F16
3F0C:  MOVF   x5C,W
3F0E:  SUBLW  09
3F10:  BC    3F16
....................       { 
....................          Ttrabajo[2]=0; 
3F12:  CLRF   x5C
....................          Ttrabajo[3]++; 
3F14:  INCF   x5D,F
....................       } 
....................       if(Ttrabajo[3]>9) 
3F16:  BTFSC  x5D.7
3F18:  BRA    3F22
3F1A:  MOVF   x5D,W
3F1C:  SUBLW  09
3F1E:  BC    3F22
....................       { 
....................          Ttrabajo[3]=0; 
3F20:  CLRF   x5D
....................       } 
....................    }           
....................     
....................    if(Menu!=2) 
3F22:  MOVF   x0D,W
3F24:  SUBLW  02
3F26:  BZ    3F2C
....................       Alarma=10; 
3F28:  MOVLW  0A
3F2A:  MOVWF  x1F
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==0){ //Menu de Contraseña. 
3F2C:  MOVF   x0D,F
3F2E:  BTFSS  FD8.2
3F30:  BRA    4614
....................       glcd_rect(0, 0, 127, 25, YES, ON);strcpy(Menus.Letra,"Clave");glcd_text57(25, 1, Menus.Letra, 3, OFF);    
3F32:  MOVLB  6
3F34:  CLRF   x47
3F36:  CLRF   x48
3F38:  MOVLW  7F
3F3A:  MOVWF  x49
3F3C:  MOVLW  19
3F3E:  MOVWF  x4A
3F40:  MOVLW  01
3F42:  MOVWF  x4B
3F44:  MOVWF  x4C
3F46:  MOVLB  0
3F48:  CALL   1C88
3F4C:  MOVLW  06
3F4E:  MOVWF  FEA
3F50:  MOVLW  1A
3F52:  MOVWF  FE9
3F54:  MOVFF  FF2,630
3F58:  BCF    FF2.7
3F5A:  MOVLW  00
3F5C:  CALL   0EEE
3F60:  TBLRD*-
3F62:  TBLRD*+
3F64:  MOVF   FF5,W
3F66:  MOVWF  FEE
3F68:  IORLW  00
3F6A:  BNZ   3F62
3F6C:  MOVLB  6
3F6E:  BTFSC  x30.7
3F70:  BSF    FF2.7
3F72:  MOVLW  19
3F74:  MOVWF  x47
3F76:  MOVLW  01
3F78:  MOVWF  x48
3F7A:  MOVLW  06
3F7C:  MOVWF  x4A
3F7E:  MOVLW  1A
3F80:  MOVWF  x49
3F82:  MOVLW  03
3F84:  MOVWF  x4B
3F86:  CLRF   x4C
3F88:  MOVLB  0
3F8A:  CALL   1D4A
....................       flag_latencia=1; 
3F8E:  MOVLB  4
3F90:  BSF    x4E.3
....................        
....................       if(UP)//Si oprime hacia arriba 
3F92:  BSF    F92.0
3F94:  BTFSS  F80.0
3F96:  BRA    407C
....................       { 
....................          flag_latencia=0;t_latencia=0; 
3F98:  BCF    x4E.3
3F9A:  MOVLB  5
3F9C:  CLRF   x37
3F9E:  CLRF   x36
....................          if(Flanco == 0) 
3FA0:  MOVLB  4
3FA2:  BTFSC  x4C.0
3FA4:  BRA    407A
....................          { 
....................             Flanco = 1;delay_ms(30); 
3FA6:  BSF    x4C.0
3FA8:  MOVLW  1E
3FAA:  MOVLB  6
3FAC:  MOVWF  x31
3FAE:  MOVLB  0
3FB0:  CALL   126A
....................             for(i=1;i<=4;i++) 
3FB4:  MOVLW  01
3FB6:  MOVLB  4
3FB8:  MOVWF  x38
3FBA:  MOVF   x38,W
3FBC:  SUBLW  04
3FBE:  BNC   407A
....................             { 
....................                if(unidad==i) 
3FC0:  MOVF   x38,W
3FC2:  MOVLB  5
3FC4:  SUBWF  x0E,W
3FC6:  BNZ   4040
....................                { 
....................                   Contrasena[i-1]++; 
3FC8:  MOVLW  01
3FCA:  MOVLB  4
3FCC:  SUBWF  x38,W
3FCE:  CLRF   03
3FD0:  ADDLW  5E
3FD2:  MOVWF  FE9
3FD4:  MOVLW  05
3FD6:  ADDWFC 03,W
3FD8:  MOVWF  FEA
3FDA:  INCF   FEF,F
....................                   if(Contrasena[i-1]>9) 
3FDC:  MOVLW  01
3FDE:  SUBWF  x38,W
3FE0:  CLRF   03
3FE2:  ADDLW  5E
3FE4:  MOVWF  FE9
3FE6:  MOVLW  05
3FE8:  ADDWFC 03,W
3FEA:  MOVWF  FEA
3FEC:  BTFSC  FEF.7
3FEE:  BRA    4008
3FF0:  MOVF   FEF,W
3FF2:  SUBLW  09
3FF4:  BC    4008
....................                   { 
....................                      Contrasena[i-1]=0; 
3FF6:  MOVLW  01
3FF8:  SUBWF  x38,W
3FFA:  CLRF   03
3FFC:  ADDLW  5E
3FFE:  MOVWF  FE9
4000:  MOVLW  05
4002:  ADDWFC 03,W
4004:  MOVWF  FEA
4006:  CLRF   FEF
....................                   } 
....................                   displayContrasena(Contrasena[i-1],i*20,30,1); 
4008:  MOVLW  01
400A:  SUBWF  x38,W
400C:  CLRF   03
400E:  ADDLW  5E
4010:  MOVWF  FE9
4012:  MOVLW  05
4014:  ADDWFC 03,W
4016:  MOVWF  FEA
4018:  MOVFF  FEF,630
401C:  MOVF   x38,W
401E:  MULLW  14
4020:  MOVFF  FF3,631
4024:  MOVLB  6
4026:  MOVFF  630,632
402A:  MOVFF  631,633
402E:  MOVLW  1E
4030:  MOVWF  x34
4032:  MOVLW  01
4034:  MOVWF  x35
4036:  MOVLB  0
4038:  CALL   202C
....................                } 
....................                else 
403C:  BRA    4074
403E:  MOVLB  5
....................                { 
....................                   displayContrasena(Contrasena[i-1],i*20,30,0); 
4040:  MOVLW  01
4042:  MOVLB  4
4044:  SUBWF  x38,W
4046:  CLRF   03
4048:  ADDLW  5E
404A:  MOVWF  FE9
404C:  MOVLW  05
404E:  ADDWFC 03,W
4050:  MOVWF  FEA
4052:  MOVFF  FEF,630
4056:  MOVF   x38,W
4058:  MULLW  14
405A:  MOVFF  FF3,631
405E:  MOVLB  6
4060:  MOVFF  630,632
4064:  MOVFF  631,633
4068:  MOVLW  1E
406A:  MOVWF  x34
406C:  CLRF   x35
406E:  MOVLB  0
4070:  CALL   202C
....................                } 
....................             } 
4074:  MOVLB  4
4076:  INCF   x38,F
4078:  BRA    3FBA
....................          } 
....................       } 
....................       else 
407A:  BRA    407E
....................       { 
....................          Flanco = 0; 
407C:  BCF    x4C.0
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
407E:  BSF    F92.1
4080:  BTFSS  F80.1
4082:  BRA    4166
....................       { 
....................          flag_latencia=0;t_latencia=0; 
4084:  BCF    x4E.3
4086:  MOVLB  5
4088:  CLRF   x37
408A:  CLRF   x36
....................          if(Flanco2 == 0) 
408C:  MOVLB  4
408E:  BTFSC  x4C.2
4090:  BRA    4164
....................          { 
....................             Flanco2 = 1;delay_ms(30); 
4092:  BSF    x4C.2
4094:  MOVLW  1E
4096:  MOVLB  6
4098:  MOVWF  x31
409A:  MOVLB  0
409C:  CALL   126A
....................             for(i=1;i<=4;i++) 
40A0:  MOVLW  01
40A2:  MOVLB  4
40A4:  MOVWF  x38
40A6:  MOVF   x38,W
40A8:  SUBLW  04
40AA:  BNC   4164
....................             { 
....................                if(unidad==i) 
40AC:  MOVF   x38,W
40AE:  MOVLB  5
40B0:  SUBWF  x0E,W
40B2:  BNZ   412A
....................                { 
....................                   Contrasena[i-1]--; 
40B4:  MOVLW  01
40B6:  MOVLB  4
40B8:  SUBWF  x38,W
40BA:  CLRF   03
40BC:  ADDLW  5E
40BE:  MOVWF  FE9
40C0:  MOVLW  05
40C2:  ADDWFC 03,W
40C4:  MOVWF  FEA
40C6:  DECF   FEF,F
....................                   if(Contrasena[i-1]<0) 
40C8:  MOVLW  01
40CA:  SUBWF  x38,W
40CC:  CLRF   03
40CE:  ADDLW  5E
40D0:  MOVWF  FE9
40D2:  MOVLW  05
40D4:  ADDWFC 03,W
40D6:  MOVWF  FEA
40D8:  BTFSC  FEF.7
40DA:  BRA    40DE
40DC:  BRA    40F2
....................                   { 
....................                      Contrasena[i-1]=9;} 
40DE:  MOVLW  01
40E0:  SUBWF  x38,W
40E2:  CLRF   03
40E4:  ADDLW  5E
40E6:  MOVWF  FE9
40E8:  MOVLW  05
40EA:  ADDWFC 03,W
40EC:  MOVWF  FEA
40EE:  MOVLW  09
40F0:  MOVWF  FEF
....................                      displayContrasena(Contrasena[i-1],i*20,30,1); 
40F2:  MOVLW  01
40F4:  SUBWF  x38,W
40F6:  CLRF   03
40F8:  ADDLW  5E
40FA:  MOVWF  FE9
40FC:  MOVLW  05
40FE:  ADDWFC 03,W
4100:  MOVWF  FEA
4102:  MOVFF  FEF,630
4106:  MOVF   x38,W
4108:  MULLW  14
410A:  MOVFF  FF3,631
410E:  MOVLB  6
4110:  MOVFF  630,632
4114:  MOVFF  631,633
4118:  MOVLW  1E
411A:  MOVWF  x34
411C:  MOVLW  01
411E:  MOVWF  x35
4120:  MOVLB  0
4122:  CALL   202C
....................                } 
....................                else 
4126:  BRA    415E
4128:  MOVLB  5
....................                { 
....................                   displayContrasena(Contrasena[i-1],i*20,30,0); 
412A:  MOVLW  01
412C:  MOVLB  4
412E:  SUBWF  x38,W
4130:  CLRF   03
4132:  ADDLW  5E
4134:  MOVWF  FE9
4136:  MOVLW  05
4138:  ADDWFC 03,W
413A:  MOVWF  FEA
413C:  MOVFF  FEF,630
4140:  MOVF   x38,W
4142:  MULLW  14
4144:  MOVFF  FF3,631
4148:  MOVLB  6
414A:  MOVFF  630,632
414E:  MOVFF  631,633
4152:  MOVLW  1E
4154:  MOVWF  x34
4156:  CLRF   x35
4158:  MOVLB  0
415A:  CALL   202C
....................                } 
....................             }       
415E:  MOVLB  4
4160:  INCF   x38,F
4162:  BRA    40A6
....................          }      
....................       } 
....................       else 
4164:  BRA    4168
....................       { 
....................          Flanco2 = 0; 
4166:  BCF    x4C.2
....................       } 
....................              
....................       if(RIGHT)//Si oprime SET 
4168:  BSF    F92.2
416A:  BTFSS  F80.2
416C:  BRA    4218
....................       { 
....................          flag_latencia=0;t_latencia=0; 
416E:  BCF    x4E.3
4170:  MOVLB  5
4172:  CLRF   x37
4174:  CLRF   x36
....................          if(Flanco1 == 0) 
4176:  MOVLB  4
4178:  BTFSC  x4C.1
417A:  BRA    4216
....................          { 
....................             Flanco1 = 1;delay_ms(30);unidad++; 
417C:  BSF    x4C.1
417E:  MOVLW  1E
4180:  MOVLB  6
4182:  MOVWF  x31
4184:  MOVLB  0
4186:  CALL   126A
418A:  MOVLB  5
418C:  INCF   x0E,F
....................             for(i=1;i<=4;i++) 
418E:  MOVLW  01
4190:  MOVLB  4
4192:  MOVWF  x38
4194:  MOVF   x38,W
4196:  SUBLW  04
4198:  BNC   4216
....................             { 
....................                if(unidad==i) 
419A:  MOVF   x38,W
419C:  MOVLB  5
419E:  SUBWF  x0E,W
41A0:  BNZ   41DC
....................                { 
....................                   displayContrasena(Contrasena[i-1],i*20,30,1); 
41A2:  MOVLW  01
41A4:  MOVLB  4
41A6:  SUBWF  x38,W
41A8:  CLRF   03
41AA:  ADDLW  5E
41AC:  MOVWF  FE9
41AE:  MOVLW  05
41B0:  ADDWFC 03,W
41B2:  MOVWF  FEA
41B4:  MOVFF  FEF,630
41B8:  MOVF   x38,W
41BA:  MULLW  14
41BC:  MOVFF  FF3,631
41C0:  MOVLB  6
41C2:  MOVFF  630,632
41C6:  MOVFF  631,633
41CA:  MOVLW  1E
41CC:  MOVWF  x34
41CE:  MOVLW  01
41D0:  MOVWF  x35
41D2:  MOVLB  0
41D4:  CALL   202C
....................                } 
....................                else 
41D8:  BRA    4210
41DA:  MOVLB  5
....................                { 
....................                   displayContrasena(Contrasena[i-1],i*20,30,0); 
41DC:  MOVLW  01
41DE:  MOVLB  4
41E0:  SUBWF  x38,W
41E2:  CLRF   03
41E4:  ADDLW  5E
41E6:  MOVWF  FE9
41E8:  MOVLW  05
41EA:  ADDWFC 03,W
41EC:  MOVWF  FEA
41EE:  MOVFF  FEF,630
41F2:  MOVF   x38,W
41F4:  MULLW  14
41F6:  MOVFF  FF3,631
41FA:  MOVLB  6
41FC:  MOVFF  630,632
4200:  MOVFF  631,633
4204:  MOVLW  1E
4206:  MOVWF  x34
4208:  CLRF   x35
420A:  MOVLB  0
420C:  CALL   202C
....................                } 
....................             } 
4210:  MOVLB  4
4212:  INCF   x38,F
4214:  BRA    4194
....................          } 
....................       } 
....................       else 
4216:  BRA    421A
....................       { 
....................          Flanco1 = 0; 
4218:  BCF    x4C.1
....................       } 
....................      
....................       if(unidad>4) 
421A:  MOVLB  5
421C:  MOVF   x0E,W
421E:  SUBLW  04
4220:  BTFSC  FD8.0
4222:  BRA    4614
....................       { 
....................          glcd_fillScreen(OFF);unidad=4;flag_latencia=0;t_latencia=0; 
4224:  MOVLB  6
4226:  CLRF   x31
4228:  MOVLB  0
422A:  CALL   20E2
422E:  MOVLW  04
4230:  MOVLB  5
4232:  MOVWF  x0E
4234:  MOVLB  4
4236:  BCF    x4E.3
4238:  MOVLB  5
423A:  CLRF   x37
423C:  CLRF   x36
....................          if(Contrasena[0]==3&&Contrasena[1]==8&&Contrasena[2]==9&&Contrasena[3]==2) // Si Ingresa clave para reset general del sistema. 
423E:  MOVF   x5E,W
4240:  SUBLW  03
4242:  BNZ   4328
4244:  MOVF   x5F,W
4246:  SUBLW  08
4248:  BNZ   4328
424A:  MOVF   x60,W
424C:  SUBLW  09
424E:  BNZ   4328
4250:  MOVF   x61,W
4252:  SUBLW  02
4254:  BNZ   4328
....................          { 
....................             write_eeprom(0,0);delay_ms(20);write_eeprom(1,0);delay_ms(20);// Reestablece a contraseña de Fabrica y reinicia Programa. 
4256:  CLRF   FA9
4258:  CLRF   FA8
425A:  BCF    FA6.6
425C:  BCF    FA6.7
425E:  BSF    FA6.2
4260:  MOVF   FF2,W
4262:  MOVWF  00
4264:  BCF    FF2.7
4266:  MOVLB  F
4268:  MOVLW  55
426A:  MOVWF  FA7
426C:  MOVLW  AA
426E:  MOVWF  FA7
4270:  BSF    FA6.1
4272:  BTFSC  FA6.1
4274:  BRA    4272
4276:  BCF    FA6.2
4278:  MOVF   00,W
427A:  IORWF  FF2,F
427C:  MOVLW  14
427E:  MOVLB  6
4280:  MOVWF  x31
4282:  MOVLB  0
4284:  CALL   126A
4288:  MOVLW  01
428A:  MOVWF  FA9
428C:  CLRF   FA8
428E:  BCF    FA6.6
4290:  BCF    FA6.7
4292:  BSF    FA6.2
4294:  MOVF   FF2,W
4296:  MOVWF  00
4298:  BCF    FF2.7
429A:  MOVLB  F
429C:  MOVLW  55
429E:  MOVWF  FA7
42A0:  MOVLW  AA
42A2:  MOVWF  FA7
42A4:  BSF    FA6.1
42A6:  BTFSC  FA6.1
42A8:  BRA    42A6
42AA:  BCF    FA6.2
42AC:  MOVF   00,W
42AE:  IORWF  FF2,F
42B0:  MOVLW  14
42B2:  MOVLB  6
42B4:  MOVWF  x31
42B6:  MOVLB  0
42B8:  CALL   126A
....................             write_eeprom(2,0);delay_ms(20);write_eeprom(3,0);delay_ms(20); 
42BC:  MOVLW  02
42BE:  MOVWF  FA9
42C0:  CLRF   FA8
42C2:  BCF    FA6.6
42C4:  BCF    FA6.7
42C6:  BSF    FA6.2
42C8:  MOVF   FF2,W
42CA:  MOVWF  00
42CC:  BCF    FF2.7
42CE:  MOVLB  F
42D0:  MOVLW  55
42D2:  MOVWF  FA7
42D4:  MOVLW  AA
42D6:  MOVWF  FA7
42D8:  BSF    FA6.1
42DA:  BTFSC  FA6.1
42DC:  BRA    42DA
42DE:  BCF    FA6.2
42E0:  MOVF   00,W
42E2:  IORWF  FF2,F
42E4:  MOVLW  14
42E6:  MOVLB  6
42E8:  MOVWF  x31
42EA:  MOVLB  0
42EC:  CALL   126A
42F0:  MOVLW  03
42F2:  MOVWF  FA9
42F4:  CLRF   FA8
42F6:  BCF    FA6.6
42F8:  BCF    FA6.7
42FA:  BSF    FA6.2
42FC:  MOVF   FF2,W
42FE:  MOVWF  00
4300:  BCF    FF2.7
4302:  MOVLB  F
4304:  MOVLW  55
4306:  MOVWF  FA7
4308:  MOVLW  AA
430A:  MOVWF  FA7
430C:  BSF    FA6.1
430E:  BTFSC  FA6.1
4310:  BRA    430E
4312:  BCF    FA6.2
4314:  MOVF   00,W
4316:  IORWF  FF2,F
4318:  MOVLW  14
431A:  MOVLB  6
431C:  MOVWF  x31
431E:  MOVLB  0
4320:  CALL   126A
....................             reset_cpu(); 
4324:  RESET
4326:  MOVLB  5
....................          } 
....................        
....................          if((Contrasena[0]==Password[0])&&(Contrasena[1]==Password[1])&&(Contrasena[2]==Password[2])&&(Contrasena[3]==Password[3])) 
4328:  MOVF   x62,W
432A:  SUBWF  x5E,W
432C:  BTFSS  FD8.2
432E:  BRA    449A
4330:  MOVF   x63,W
4332:  SUBWF  x5F,W
4334:  BTFSS  FD8.2
4336:  BRA    449A
4338:  MOVF   x64,W
433A:  SUBWF  x60,W
433C:  BTFSS  FD8.2
433E:  BRA    449A
4340:  MOVF   x65,W
4342:  SUBWF  x61,W
4344:  BTFSS  FD8.2
4346:  BRA    449A
....................          { 
....................             glcd_fillScreen(OFF); 
4348:  MOVLB  6
434A:  CLRF   x31
434C:  MOVLB  0
434E:  CALL   20E2
....................             strcpy(Menus.Letra,"Clave"); 
4352:  MOVLW  06
4354:  MOVWF  FEA
4356:  MOVLW  1A
4358:  MOVWF  FE9
435A:  MOVFF  FF2,630
435E:  BCF    FF2.7
4360:  MOVLW  00
4362:  CALL   0EEE
4366:  TBLRD*-
4368:  TBLRD*+
436A:  MOVF   FF5,W
436C:  MOVWF  FEE
436E:  IORLW  00
4370:  BNZ   4368
4372:  MOVLB  6
4374:  BTFSC  x30.7
4376:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
4378:  MOVLW  06
437A:  MOVWF  x31
437C:  MOVLW  1A
437E:  MOVWF  x30
4380:  MOVLW  1E
4382:  MOVWF  x32
4384:  CLRF   x33
4386:  CLRF   x34
4388:  MOVLW  02
438A:  MOVWF  x35
438C:  MOVLB  0
438E:  CALL   213C
....................             strcpy(Menus.Letra,"Correcta"); 
4392:  MOVLW  06
4394:  MOVWF  FEA
4396:  MOVLW  1A
4398:  MOVWF  FE9
439A:  MOVFF  FF2,630
439E:  BCF    FF2.7
43A0:  MOVLW  00
43A2:  CALL   0F0E
43A6:  TBLRD*-
43A8:  TBLRD*+
43AA:  MOVF   FF5,W
43AC:  MOVWF  FEE
43AE:  IORLW  00
43B0:  BNZ   43A8
43B2:  MOVLB  6
43B4:  BTFSC  x30.7
43B6:  BSF    FF2.7
....................             displayMenu(Menus.Letra,15,30,0,2); 
43B8:  MOVLW  06
43BA:  MOVWF  x31
43BC:  MOVLW  1A
43BE:  MOVWF  x30
43C0:  MOVLW  0F
43C2:  MOVWF  x32
43C4:  MOVLW  1E
43C6:  MOVWF  x33
43C8:  CLRF   x34
43CA:  MOVLW  02
43CC:  MOVWF  x35
43CE:  MOVLB  0
43D0:  CALL   213C
....................             Menu=1;glcd_update();delay_ms(1000);glcd_fillScreen(OFF); 
43D4:  MOVLW  01
43D6:  MOVLB  5
43D8:  MOVWF  x0D
43DA:  MOVLB  0
43DC:  CALL   19D6
43E0:  MOVLW  04
43E2:  MOVLB  6
43E4:  MOVWF  x30
43E6:  MOVLW  FA
43E8:  MOVWF  x31
43EA:  MOVLB  0
43EC:  CALL   126A
43F0:  MOVLB  6
43F2:  DECFSZ x30,F
43F4:  BRA    43E6
43F6:  CLRF   x31
43F8:  MOVLB  0
43FA:  CALL   20E2
....................             Contrasena[0]=0;Contrasena[1]=0;Contrasena[2]=0;Contrasena[3]=0; 
43FE:  MOVLB  5
4400:  CLRF   x5E
4402:  CLRF   x5F
4404:  CLRF   x60
4406:  CLRF   x61
....................             displayTiempo(Tpurga[3],20,20,0,2);displayTiempo(Tpurga[2],40,20,0,2);glcd_text57(60, 22, Dos_puntos, 2, ON); 
4408:  MOVFF  541,630
440C:  MOVLW  14
440E:  MOVLB  6
4410:  MOVWF  x31
4412:  MOVWF  x32
4414:  CLRF   x33
4416:  MOVLW  02
4418:  MOVWF  x34
441A:  MOVLB  0
441C:  CALL   2208
4420:  MOVFF  540,630
4424:  MOVLW  28
4426:  MOVLB  6
4428:  MOVWF  x31
442A:  MOVLW  14
442C:  MOVWF  x32
442E:  CLRF   x33
4430:  MOVLW  02
4432:  MOVWF  x34
4434:  MOVLB  0
4436:  CALL   2208
443A:  MOVLW  3C
443C:  MOVLB  6
443E:  MOVWF  x47
4440:  MOVLW  16
4442:  MOVWF  x48
4444:  MOVLW  04
4446:  MOVWF  x4A
4448:  MOVLW  77
444A:  MOVWF  x49
444C:  MOVLW  02
444E:  MOVWF  x4B
4450:  MOVLW  01
4452:  MOVWF  x4C
4454:  MOVLB  0
4456:  CALL   1D4A
....................             displayTiempo(Tpurga[1],70,20,0,2);displayTiempo(Tpurga[0],90,20,0,2); 
445A:  MOVFF  53F,630
445E:  MOVLW  46
4460:  MOVLB  6
4462:  MOVWF  x31
4464:  MOVLW  14
4466:  MOVWF  x32
4468:  CLRF   x33
446A:  MOVLW  02
446C:  MOVWF  x34
446E:  MOVLB  0
4470:  CALL   2208
4474:  MOVFF  53E,630
4478:  MOVLW  5A
447A:  MOVLB  6
447C:  MOVWF  x31
447E:  MOVLW  14
4480:  MOVWF  x32
4482:  CLRF   x33
4484:  MOVLW  02
4486:  MOVWF  x34
4488:  MOVLB  0
448A:  CALL   2208
....................             enable_interrupts(global);tiempo_purga=1; 
448E:  MOVLW  C0
4490:  IORWF  FF2,F
4492:  MOVLB  4
4494:  BSF    x4D.6
....................          }// Esta parte se puede agregar en el Menu 1 dependiendo de la ubicación del vidrio. 
....................          else 
4496:  BRA    4612
4498:  MOVLB  5
....................          { 
....................             glcd_fillScreen(OFF); 
449A:  MOVLB  6
449C:  CLRF   x31
449E:  MOVLB  0
44A0:  CALL   20E2
....................             strcpy(Menus.Letra,"Clave"); 
44A4:  MOVLW  06
44A6:  MOVWF  FEA
44A8:  MOVLW  1A
44AA:  MOVWF  FE9
44AC:  MOVFF  FF2,630
44B0:  BCF    FF2.7
44B2:  MOVLW  00
44B4:  CALL   0EEE
44B8:  TBLRD*-
44BA:  TBLRD*+
44BC:  MOVF   FF5,W
44BE:  MOVWF  FEE
44C0:  IORLW  00
44C2:  BNZ   44BA
44C4:  MOVLB  6
44C6:  BTFSC  x30.7
44C8:  BSF    FF2.7
....................             displayMenu(Menus.Letra,30,0,0,2); 
44CA:  MOVLW  06
44CC:  MOVWF  x31
44CE:  MOVLW  1A
44D0:  MOVWF  x30
44D2:  MOVLW  1E
44D4:  MOVWF  x32
44D6:  CLRF   x33
44D8:  CLRF   x34
44DA:  MOVLW  02
44DC:  MOVWF  x35
44DE:  MOVLB  0
44E0:  CALL   213C
....................             strcpy(Menus.Letra,"Incorrecta"); 
44E4:  MOVLW  06
44E6:  MOVWF  FEA
44E8:  MOVLW  1A
44EA:  MOVWF  FE9
44EC:  MOVFF  FF2,630
44F0:  BCF    FF2.7
44F2:  MOVLW  00
44F4:  CALL   0F32
44F8:  TBLRD*-
44FA:  TBLRD*+
44FC:  MOVF   FF5,W
44FE:  MOVWF  FEE
4500:  IORLW  00
4502:  BNZ   44FA
4504:  MOVLB  6
4506:  BTFSC  x30.7
4508:  BSF    FF2.7
....................             displayMenu(Menus.Letra,0,30,0,2); 
450A:  MOVLW  06
450C:  MOVWF  x31
450E:  MOVLW  1A
4510:  MOVWF  x30
4512:  CLRF   x32
4514:  MOVLW  1E
4516:  MOVWF  x33
4518:  CLRF   x34
451A:  MOVLW  02
451C:  MOVWF  x35
451E:  MOVLB  0
4520:  CALL   213C
....................             unidad=1;glcd_update();delay_ms(1000);Contrasena[0]=0;Contrasena[1]=0;Contrasena[2]=0;Contrasena[3]=0;glcd_fillScreen(OFF); 
4524:  MOVLW  01
4526:  MOVLB  5
4528:  MOVWF  x0E
452A:  MOVLB  0
452C:  CALL   19D6
4530:  MOVLW  04
4532:  MOVLB  6
4534:  MOVWF  x30
4536:  MOVLW  FA
4538:  MOVWF  x31
453A:  MOVLB  0
453C:  CALL   126A
4540:  MOVLB  6
4542:  DECFSZ x30,F
4544:  BRA    4536
4546:  MOVLB  5
4548:  CLRF   x5E
454A:  CLRF   x5F
454C:  CLRF   x60
454E:  CLRF   x61
4550:  MOVLB  6
4552:  CLRF   x31
4554:  MOVLB  0
4556:  CALL   20E2
....................             glcd_rect(0, 0, 127, 25, YES, ON);strcpy(Menus.Letra,"Clave");glcd_text57(25, 1, Menus.Letra, 3, OFF);displayContrasena(Contrasena[0],20,30,1); 
455A:  MOVLB  6
455C:  CLRF   x47
455E:  CLRF   x48
4560:  MOVLW  7F
4562:  MOVWF  x49
4564:  MOVLW  19
4566:  MOVWF  x4A
4568:  MOVLW  01
456A:  MOVWF  x4B
456C:  MOVWF  x4C
456E:  MOVLB  0
4570:  CALL   1C88
4574:  MOVLW  06
4576:  MOVWF  FEA
4578:  MOVLW  1A
457A:  MOVWF  FE9
457C:  MOVFF  FF2,630
4580:  BCF    FF2.7
4582:  MOVLW  00
4584:  CALL   0EEE
4588:  TBLRD*-
458A:  TBLRD*+
458C:  MOVF   FF5,W
458E:  MOVWF  FEE
4590:  IORLW  00
4592:  BNZ   458A
4594:  MOVLB  6
4596:  BTFSC  x30.7
4598:  BSF    FF2.7
459A:  MOVLW  19
459C:  MOVWF  x47
459E:  MOVLW  01
45A0:  MOVWF  x48
45A2:  MOVLW  06
45A4:  MOVWF  x4A
45A6:  MOVLW  1A
45A8:  MOVWF  x49
45AA:  MOVLW  03
45AC:  MOVWF  x4B
45AE:  CLRF   x4C
45B0:  MOVLB  0
45B2:  CALL   1D4A
45B6:  MOVFF  55E,632
45BA:  MOVLW  14
45BC:  MOVLB  6
45BE:  MOVWF  x33
45C0:  MOVLW  1E
45C2:  MOVWF  x34
45C4:  MOVLW  01
45C6:  MOVWF  x35
45C8:  MOVLB  0
45CA:  CALL   202C
....................             displayContrasena(Contrasena[1],40,30,0);displayContrasena(Contrasena[2],60,30,0);displayContrasena(Contrasena[0],80,30,0); 
45CE:  MOVFF  55F,632
45D2:  MOVLW  28
45D4:  MOVLB  6
45D6:  MOVWF  x33
45D8:  MOVLW  1E
45DA:  MOVWF  x34
45DC:  CLRF   x35
45DE:  MOVLB  0
45E0:  CALL   202C
45E4:  MOVFF  560,632
45E8:  MOVLW  3C
45EA:  MOVLB  6
45EC:  MOVWF  x33
45EE:  MOVLW  1E
45F0:  MOVWF  x34
45F2:  CLRF   x35
45F4:  MOVLB  0
45F6:  CALL   202C
45FA:  MOVFF  55E,632
45FE:  MOVLW  50
4600:  MOVLB  6
4602:  MOVWF  x33
4604:  MOVLW  1E
4606:  MOVWF  x34
4608:  CLRF   x35
460A:  MOVLB  0
460C:  CALL   202C
4610:  MOVLB  4
4612:  MOVLB  5
....................          } 
....................       } 
....................       } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==1)//Menu de Purga. 
4614:  DECFSZ x0D,W
4616:  BRA    478C
....................       {  
....................          glcd_text57(15, 1, Tiempo, 1, ON); 
4618:  MOVLW  0F
461A:  MOVLB  6
461C:  MOVWF  x47
461E:  MOVLW  01
4620:  MOVWF  x48
4622:  MOVLW  04
4624:  MOVWF  x4A
4626:  MOVLW  84
4628:  MOVWF  x49
462A:  MOVLW  01
462C:  MOVWF  x4B
462E:  MOVWF  x4C
4630:  MOVLB  0
4632:  CALL   1D4A
....................          Lectura_Esclavos(); 
4636:  CALL   29BE
....................          // Para que inicie el tiempo de purga se debe tener el vidrio en la altura adecuada. 
....................          // Una vez ubicado el vidrio se debe encender la Luz Blanca y el Ventilador e iniciar el Tiempo de purga. 
....................          //Motor(1); 
....................          tiempo_purga=1;LuzBlanca=10;LuzUV=10;Toma=5;Alarma=10;Motor=5; 
463A:  MOVLB  4
463C:  BSF    x4D.6
463E:  MOVLW  0A
4640:  MOVLB  5
4642:  MOVWF  x1C
4644:  MOVWF  x1D
4646:  MOVLW  05
4648:  MOVWF  x20
464A:  MOVLW  0A
464C:  MOVWF  x1F
464E:  MOVLW  05
4650:  MOVWF  x1E
....................          glcd_rect(9, 54, 120, 64, YES, OFF); 
4652:  MOVLW  09
4654:  MOVLB  6
4656:  MOVWF  x47
4658:  MOVLW  36
465A:  MOVWF  x48
465C:  MOVLW  78
465E:  MOVWF  x49
4660:  MOVLW  40
4662:  MOVWF  x4A
4664:  MOVLW  01
4666:  MOVWF  x4B
4668:  CLRF   x4C
466A:  MOVLB  0
466C:  CALL   1C88
....................           
....................          displayTiempo(Tpurga[3],20,20,0,2);displayTiempo(Tpurga[2],40,20,0,2);glcd_text57(60, 22, Dos_puntos, 2, ON); 
4670:  MOVFF  541,630
4674:  MOVLW  14
4676:  MOVLB  6
4678:  MOVWF  x31
467A:  MOVWF  x32
467C:  CLRF   x33
467E:  MOVLW  02
4680:  MOVWF  x34
4682:  MOVLB  0
4684:  CALL   2208
4688:  MOVFF  540,630
468C:  MOVLW  28
468E:  MOVLB  6
4690:  MOVWF  x31
4692:  MOVLW  14
4694:  MOVWF  x32
4696:  CLRF   x33
4698:  MOVLW  02
469A:  MOVWF  x34
469C:  MOVLB  0
469E:  CALL   2208
46A2:  MOVLW  3C
46A4:  MOVLB  6
46A6:  MOVWF  x47
46A8:  MOVLW  16
46AA:  MOVWF  x48
46AC:  MOVLW  04
46AE:  MOVWF  x4A
46B0:  MOVLW  77
46B2:  MOVWF  x49
46B4:  MOVLW  02
46B6:  MOVWF  x4B
46B8:  MOVLW  01
46BA:  MOVWF  x4C
46BC:  MOVLB  0
46BE:  CALL   1D4A
....................          displayTiempo(Tpurga[1],70,20,0,2);displayTiempo(Tpurga[0],90,20,0,2);         
46C2:  MOVFF  53F,630
46C6:  MOVLW  46
46C8:  MOVLB  6
46CA:  MOVWF  x31
46CC:  MOVLW  14
46CE:  MOVWF  x32
46D0:  CLRF   x33
46D2:  MOVLW  02
46D4:  MOVWF  x34
46D6:  MOVLB  0
46D8:  CALL   2208
46DC:  MOVFF  53E,630
46E0:  MOVLW  5A
46E2:  MOVLB  6
46E4:  MOVWF  x31
46E6:  MOVLW  14
46E8:  MOVWF  x32
46EA:  CLRF   x33
46EC:  MOVLW  02
46EE:  MOVWF  x34
46F0:  MOVLB  0
46F2:  CALL   2208
....................        
....................          if(RIGHT) 
46F6:  BSF    F92.2
46F8:  BTFSS  F80.2
46FA:  BRA    472C
....................          { 
....................             delay_ms(1000); 
46FC:  MOVLW  04
46FE:  MOVLB  6
4700:  MOVWF  x30
4702:  MOVLW  FA
4704:  MOVWF  x31
4706:  MOVLB  0
4708:  CALL   126A
470C:  MOVLB  6
470E:  DECFSZ x30,F
4710:  BRA    4702
....................             if(RIGHT) 
4712:  BSF    F92.2
4714:  BTFSS  F80.2
4716:  BRA    472E
....................             { 
....................                tiempo_purga=0;Menu=2;glcd_fillScreen(OFF); 
4718:  MOVLB  4
471A:  BCF    x4D.6
471C:  MOVLW  02
471E:  MOVLB  5
4720:  MOVWF  x0D
4722:  MOVLB  6
4724:  CLRF   x31
4726:  MOVLB  0
4728:  CALL   20E2
472C:  MOVLB  6
....................             } 
....................          } 
....................         
....................          if((Tpurga[0]>=Tpurgap[0])&&(Tpurga[1]>=Tpurgap[1])&&(Tpurga[2]>=Tpurgap[2])&&(Tpurga[3]>=Tpurgap[3])) 
472E:  MOVLB  5
4730:  MOVF   x42,W
4732:  XORLW  80
4734:  MOVWF  00
4736:  MOVF   x3E,W
4738:  XORLW  80
473A:  SUBWF  00,W
473C:  BZ    4740
473E:  BC    478C
4740:  MOVF   x43,W
4742:  XORLW  80
4744:  MOVWF  00
4746:  MOVF   x3F,W
4748:  XORLW  80
474A:  SUBWF  00,W
474C:  BZ    4750
474E:  BC    478C
4750:  MOVF   x44,W
4752:  XORLW  80
4754:  MOVWF  00
4756:  MOVF   x40,W
4758:  XORLW  80
475A:  SUBWF  00,W
475C:  BZ    4760
475E:  BC    478C
4760:  MOVF   x45,W
4762:  XORLW  80
4764:  MOVWF  00
4766:  MOVF   x41,W
4768:  XORLW  80
476A:  SUBWF  00,W
476C:  BZ    4770
476E:  BC    478C
....................          { 
....................             tiempo_purga=0;Menu=2;glcd_fillScreen(OFF);flag_luz=!flag_luz;flag_blower=1; 
4770:  MOVLB  4
4772:  BCF    x4D.6
4774:  MOVLW  02
4776:  MOVLB  5
4778:  MOVWF  x0D
477A:  MOVLB  6
477C:  CLRF   x31
477E:  MOVLB  0
4780:  CALL   20E2
4784:  MOVLB  4
4786:  BTG    x4D.3
4788:  BSF    x4D.1
478A:  MOVLB  5
....................          }       
....................       } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==2) //Menu General. 
478C:  MOVF   x0D,W
478E:  SUBLW  02
4790:  BTFSS  FD8.2
4792:  GOTO   5248
....................       {          
....................          w=0; 
4796:  MOVLB  4
4798:  BCF    x4D.5
....................          glcd_text57(0, 1, Inflowt, 1, ON); 
479A:  MOVLB  6
479C:  CLRF   x47
479E:  MOVLW  01
47A0:  MOVWF  x48
47A2:  MOVLW  04
47A4:  MOVWF  x4A
47A6:  MOVLW  A9
47A8:  MOVWF  x49
47AA:  MOVLW  01
47AC:  MOVWF  x4B
47AE:  MOVWF  x4C
47B0:  MOVLB  0
47B2:  CALL   1D4A
....................          glcd_text57(0, 15, Downflowt, 1, ON); 
47B6:  MOVLB  6
47B8:  CLRF   x47
47BA:  MOVLW  0F
47BC:  MOVWF  x48
47BE:  MOVLW  04
47C0:  MOVWF  x4A
47C2:  MOVLW  B4
47C4:  MOVWF  x49
47C6:  MOVLW  01
47C8:  MOVWF  x4B
47CA:  MOVWF  x4C
47CC:  MOVLB  0
47CE:  CALL   1D4A
....................          glcd_text57(0, 29, Vida_Filtro, 1, ON); 
47D2:  MOVLB  6
47D4:  CLRF   x47
47D6:  MOVLW  1D
47D8:  MOVWF  x48
47DA:  MOVLW  04
47DC:  MOVWF  x4A
47DE:  MOVLW  E7
47E0:  MOVWF  x49
47E2:  MOVLW  01
47E4:  MOVWF  x4B
47E6:  MOVWF  x4C
47E8:  MOVLB  0
47EA:  CALL   1D4A
....................          //displayTiempo(Ttrabajo[3],60,28,0,1);displayTiempo(Ttrabajo[2],67,28,0,1);displayTiempo(Ttrabajo[1],74,28,0,1);displayTiempo(Ttrabajo[0],82,28,0,1); 
....................          glcd_text57(0, 43, Vida_UV, 1, ON); 
47EE:  MOVLB  6
47F0:  CLRF   x47
47F2:  MOVLW  2B
47F4:  MOVWF  x48
47F6:  MOVLW  04
47F8:  MOVWF  x4A
47FA:  MOVLW  DF
47FC:  MOVWF  x49
47FE:  MOVLW  01
4800:  MOVWF  x4B
4802:  MOVWF  x4C
4804:  MOVLB  0
4806:  CALL   1D4A
....................          //displayTiempo(Tuv[3],60,42,0,1);displayTiempo(Tuv[2],67,42,0,1);displayTiempo(Tuv[1],74,42,0,1);displayTiempo(Tuv[0],82,42,0,1);        
....................          UVTime=Tuv[0]+(Tuv[1]*10)+(Tuv[2]*100)+(Tuv[3]*1000);          
480A:  MOVFF  54F,631
480E:  MOVLW  0A
4810:  MOVLB  6
4812:  MOVWF  x32
4814:  MOVLB  0
4816:  CALL   2AB8
481A:  MOVF   01,W
481C:  MOVLB  5
481E:  ADDWF  x4E,W
4820:  MOVLB  6
4822:  MOVWF  x30
4824:  MOVFF  550,631
4828:  MOVLW  64
482A:  MOVWF  x32
482C:  MOVLB  0
482E:  CALL   2AB8
4832:  MOVF   01,W
4834:  MOVLB  6
4836:  ADDWF  x30,F
4838:  CLRF   03
483A:  MOVLB  5
483C:  MOVF   x51,W
483E:  MOVWF  00
4840:  BTFSC  FE8.7
4842:  DECF   03,F
4844:  MOVLB  6
4846:  MOVWF  x31
4848:  MOVFF  03,632
484C:  MOVFF  03,634
4850:  MOVWF  x33
4852:  MOVLW  03
4854:  MOVWF  x36
4856:  MOVLW  E8
4858:  MOVWF  x35
485A:  MOVLB  0
485C:  GOTO   2B06
4860:  MOVFF  02,03
4864:  MOVF   01,W
4866:  MOVLB  6
4868:  ADDWF  x30,W
486A:  MOVWF  01
486C:  MOVLW  00
486E:  ADDWFC 03,F
4870:  MOVFF  01,630
4874:  MOVFF  03,631
4878:  MOVLB  0
487A:  GOTO   2B5C
487E:  MOVFF  03,619
4882:  MOVFF  02,618
4886:  MOVFF  01,617
488A:  MOVFF  00,616
....................           
....................          if(imprimir==1) 
488E:  MOVLB  4
4890:  BTFSS  x4C.7
4892:  BRA    48D4
....................          { 
....................             Lectura_Esclavos(); 
4894:  MOVLB  0
4896:  CALL   29BE
....................             Downflow=Inflow; 
489A:  MOVFF  569,56D
489E:  MOVFF  568,56C
48A2:  MOVFF  567,56B
48A6:  MOVFF  566,56A
....................             //displayfloat(Inflow,70,1,0,1); 
....................             displayfloat(Downflow,70,15,0,1);   
48AA:  MOVFF  56D,637
48AE:  MOVFF  56C,636
48B2:  MOVFF  56B,635
48B6:  MOVFF  56A,634
48BA:  MOVLW  46
48BC:  MOVLB  6
48BE:  MOVWF  x38
48C0:  MOVLW  0F
48C2:  MOVWF  x39
48C4:  CLRF   x3A
48C6:  MOVLW  01
48C8:  MOVWF  x3B
48CA:  MOVLB  0
48CC:  CALL   2E28
....................             imprimir=0; 
48D0:  MOVLB  4
48D2:  BCF    x4C.7
....................          } 
....................           
....................          if(flag_blower==1) 
48D4:  BTFSS  x4D.1
48D6:  BRA    49C6
....................          { 
....................             glcd_imagen(5);tiempo_trabajo=1;Motor=5;Toma=5; 
48D8:  MOVLW  05
48DA:  MOVLB  6
48DC:  MOVWF  x30
48DE:  MOVLB  0
48E0:  CALL   2F30
48E4:  MOVLB  4
48E6:  BSF    x4E.0
48E8:  MOVLW  05
48EA:  MOVLB  5
48EC:  MOVWF  x1E
48EE:  MOVWF  x20
....................             if(guardatrabajo==1) 
48F0:  MOVLB  4
48F2:  BTFSS  x4E.5
48F4:  BRA    49C4
....................             { 
....................                guardatrabajo=0;write_eeprom(30,minutos_trabajo); 
48F6:  BCF    x4E.5
48F8:  MOVLW  1E
48FA:  MOVWF  FA9
48FC:  MOVFF  53A,FA8
4900:  BCF    FA6.6
4902:  BCF    FA6.7
4904:  BSF    FA6.2
4906:  MOVF   FF2,W
4908:  MOVWF  00
490A:  BCF    FF2.7
490C:  MOVLB  F
490E:  MOVLW  55
4910:  MOVWF  FA7
4912:  MOVLW  AA
4914:  MOVWF  FA7
4916:  BSF    FA6.1
4918:  BTFSC  FA6.1
491A:  BRA    4918
491C:  BCF    FA6.2
491E:  MOVF   00,W
4920:  IORWF  FF2,F
....................                write_eeprom(16,Ttrabajo[0]);write_eeprom(17,Ttrabajo[1]);write_eeprom(18,Ttrabajo[2]);write_eeprom(19,Ttrabajo[3]); 
4922:  MOVLW  10
4924:  MOVWF  FA9
4926:  MOVFF  55A,FA8
492A:  BCF    FA6.6
492C:  BCF    FA6.7
492E:  BSF    FA6.2
4930:  MOVFF  FF2,00
4934:  BCF    FF2.7
4936:  MOVLW  55
4938:  MOVWF  FA7
493A:  MOVLW  AA
493C:  MOVWF  FA7
493E:  BSF    FA6.1
4940:  BTFSC  FA6.1
4942:  BRA    4940
4944:  BCF    FA6.2
4946:  MOVF   00,W
4948:  IORWF  FF2,F
494A:  MOVLW  11
494C:  MOVWF  FA9
494E:  MOVFF  55B,FA8
4952:  BCF    FA6.6
4954:  BCF    FA6.7
4956:  BSF    FA6.2
4958:  MOVFF  FF2,00
495C:  BCF    FF2.7
495E:  MOVLW  55
4960:  MOVWF  FA7
4962:  MOVLW  AA
4964:  MOVWF  FA7
4966:  BSF    FA6.1
4968:  BTFSC  FA6.1
496A:  BRA    4968
496C:  BCF    FA6.2
496E:  MOVF   00,W
4970:  IORWF  FF2,F
4972:  MOVLW  12
4974:  MOVWF  FA9
4976:  MOVFF  55C,FA8
497A:  BCF    FA6.6
497C:  BCF    FA6.7
497E:  BSF    FA6.2
4980:  MOVFF  FF2,00
4984:  BCF    FF2.7
4986:  MOVLW  55
4988:  MOVWF  FA7
498A:  MOVLW  AA
498C:  MOVWF  FA7
498E:  BSF    FA6.1
4990:  BTFSC  FA6.1
4992:  BRA    4990
4994:  BCF    FA6.2
4996:  MOVF   00,W
4998:  IORWF  FF2,F
499A:  MOVLW  13
499C:  MOVWF  FA9
499E:  MOVFF  55D,FA8
49A2:  BCF    FA6.6
49A4:  BCF    FA6.7
49A6:  BSF    FA6.2
49A8:  MOVFF  FF2,00
49AC:  BCF    FF2.7
49AE:  MOVLW  55
49B0:  MOVWF  FA7
49B2:  MOVLW  AA
49B4:  MOVWF  FA7
49B6:  BSF    FA6.1
49B8:  BTFSC  FA6.1
49BA:  BRA    49B8
49BC:  BCF    FA6.2
49BE:  MOVF   00,W
49C0:  IORWF  FF2,F
49C2:  MOVLB  4
....................             } 
....................          } 
....................          else 
49C4:  BRA    4ACE
....................          { 
....................             Filtro_Downflow=0; 
49C6:  MOVLB  5
49C8:  CLRF   x71
49CA:  CLRF   x70
49CC:  CLRF   x6F
49CE:  CLRF   x6E
....................             glcd_rect(102, 45, 127, 64, YES, OFF);tiempo_trabajo=0;Motor=10;Toma=10; 
49D0:  MOVLW  66
49D2:  MOVLB  6
49D4:  MOVWF  x47
49D6:  MOVLW  2D
49D8:  MOVWF  x48
49DA:  MOVLW  7F
49DC:  MOVWF  x49
49DE:  MOVLW  40
49E0:  MOVWF  x4A
49E2:  MOVLW  01
49E4:  MOVWF  x4B
49E6:  CLRF   x4C
49E8:  MOVLB  0
49EA:  CALL   1C88
49EE:  MOVLB  4
49F0:  BCF    x4E.0
49F2:  MOVLW  0A
49F4:  MOVLB  5
49F6:  MOVWF  x1E
49F8:  MOVWF  x20
....................             if(guardatrabajo==0) 
49FA:  MOVLB  4
49FC:  BTFSC  x4E.5
49FE:  BRA    4ACE
....................             { 
....................                guardatrabajo=1;write_eeprom(30,minutos_trabajo); 
4A00:  BSF    x4E.5
4A02:  MOVLW  1E
4A04:  MOVWF  FA9
4A06:  MOVFF  53A,FA8
4A0A:  BCF    FA6.6
4A0C:  BCF    FA6.7
4A0E:  BSF    FA6.2
4A10:  MOVF   FF2,W
4A12:  MOVWF  00
4A14:  BCF    FF2.7
4A16:  MOVLB  F
4A18:  MOVLW  55
4A1A:  MOVWF  FA7
4A1C:  MOVLW  AA
4A1E:  MOVWF  FA7
4A20:  BSF    FA6.1
4A22:  BTFSC  FA6.1
4A24:  BRA    4A22
4A26:  BCF    FA6.2
4A28:  MOVF   00,W
4A2A:  IORWF  FF2,F
....................                write_eeprom(16,Ttrabajo[0]);write_eeprom(17,Ttrabajo[1]);write_eeprom(18,Ttrabajo[2]);write_eeprom(19,Ttrabajo[3]); 
4A2C:  MOVLW  10
4A2E:  MOVWF  FA9
4A30:  MOVFF  55A,FA8
4A34:  BCF    FA6.6
4A36:  BCF    FA6.7
4A38:  BSF    FA6.2
4A3A:  MOVFF  FF2,00
4A3E:  BCF    FF2.7
4A40:  MOVLW  55
4A42:  MOVWF  FA7
4A44:  MOVLW  AA
4A46:  MOVWF  FA7
4A48:  BSF    FA6.1
4A4A:  BTFSC  FA6.1
4A4C:  BRA    4A4A
4A4E:  BCF    FA6.2
4A50:  MOVF   00,W
4A52:  IORWF  FF2,F
4A54:  MOVLW  11
4A56:  MOVWF  FA9
4A58:  MOVFF  55B,FA8
4A5C:  BCF    FA6.6
4A5E:  BCF    FA6.7
4A60:  BSF    FA6.2
4A62:  MOVFF  FF2,00
4A66:  BCF    FF2.7
4A68:  MOVLW  55
4A6A:  MOVWF  FA7
4A6C:  MOVLW  AA
4A6E:  MOVWF  FA7
4A70:  BSF    FA6.1
4A72:  BTFSC  FA6.1
4A74:  BRA    4A72
4A76:  BCF    FA6.2
4A78:  MOVF   00,W
4A7A:  IORWF  FF2,F
4A7C:  MOVLW  12
4A7E:  MOVWF  FA9
4A80:  MOVFF  55C,FA8
4A84:  BCF    FA6.6
4A86:  BCF    FA6.7
4A88:  BSF    FA6.2
4A8A:  MOVFF  FF2,00
4A8E:  BCF    FF2.7
4A90:  MOVLW  55
4A92:  MOVWF  FA7
4A94:  MOVLW  AA
4A96:  MOVWF  FA7
4A98:  BSF    FA6.1
4A9A:  BTFSC  FA6.1
4A9C:  BRA    4A9A
4A9E:  BCF    FA6.2
4AA0:  MOVF   00,W
4AA2:  IORWF  FF2,F
4AA4:  MOVLW  13
4AA6:  MOVWF  FA9
4AA8:  MOVFF  55D,FA8
4AAC:  BCF    FA6.6
4AAE:  BCF    FA6.7
4AB0:  BSF    FA6.2
4AB2:  MOVFF  FF2,00
4AB6:  BCF    FF2.7
4AB8:  MOVLW  55
4ABA:  MOVWF  FA7
4ABC:  MOVLW  AA
4ABE:  MOVWF  FA7
4AC0:  BSF    FA6.1
4AC2:  BTFSC  FA6.1
4AC4:  BRA    4AC2
4AC6:  BCF    FA6.2
4AC8:  MOVF   00,W
4ACA:  IORWF  FF2,F
4ACC:  MOVLB  4
....................             } 
....................          } 
....................           
.................... // Dibujo de barra de estado de filtro                   
....................          barra=100.0*(Filtro_Downflow/2.0); 
4ACE:  MOVFF  571,638
4AD2:  MOVFF  570,637
4AD6:  MOVFF  56F,636
4ADA:  MOVFF  56E,635
4ADE:  MOVLB  6
4AE0:  CLRF   x3C
4AE2:  CLRF   x3B
4AE4:  CLRF   x3A
4AE6:  MOVLW  80
4AE8:  MOVWF  x39
4AEA:  MOVLB  0
4AEC:  CALL   12CA
4AF0:  MOVLB  6
4AF2:  CLRF   x55
4AF4:  CLRF   x54
4AF6:  MOVLW  48
4AF8:  MOVWF  x53
4AFA:  MOVLW  85
4AFC:  MOVWF  x52
4AFE:  MOVFF  03,659
4B02:  MOVFF  02,658
4B06:  MOVFF  01,657
4B0A:  MOVFF  00,656
4B0E:  MOVLB  0
4B10:  CALL   16DC
4B14:  MOVFF  03,579
4B18:  MOVFF  02,578
4B1C:  MOVFF  01,577
4B20:  MOVFF  00,576
....................          if(barra>100.0) 
4B24:  MOVLB  6
4B26:  CLRF   x38
4B28:  CLRF   x37
4B2A:  MOVLW  48
4B2C:  MOVWF  x36
4B2E:  MOVLW  85
4B30:  MOVWF  x35
4B32:  MOVFF  579,63C
4B36:  MOVFF  578,63B
4B3A:  MOVFF  577,63A
4B3E:  MOVFF  576,639
4B42:  MOVLB  0
4B44:  CALL   238E
4B48:  BNC   4B58
....................             barra=100.0; 
4B4A:  MOVLB  5
4B4C:  CLRF   x79
4B4E:  CLRF   x78
4B50:  MOVLW  48
4B52:  MOVWF  x77
4B54:  MOVLW  85
4B56:  MOVWF  x76
....................          barra=barra/2; 
4B58:  MOVFF  579,638
4B5C:  MOVFF  578,637
4B60:  MOVFF  577,636
4B64:  MOVFF  576,635
4B68:  MOVLB  6
4B6A:  CLRF   x3C
4B6C:  CLRF   x3B
4B6E:  CLRF   x3A
4B70:  MOVLW  80
4B72:  MOVWF  x39
4B74:  MOVLB  0
4B76:  CALL   12CA
4B7A:  MOVFF  03,579
4B7E:  MOVFF  02,578
4B82:  MOVFF  01,577
4B86:  MOVFF  00,576
....................          glcd_rect(42, 28, (int8)(barra_old)+42, 35, YES, OFF);  // Clears the old bar 
4B8A:  MOVFF  57D,633
4B8E:  MOVFF  57C,632
4B92:  MOVFF  57B,631
4B96:  MOVFF  57A,630
4B9A:  CALL   16A0
4B9E:  MOVLW  2A
4BA0:  ADDWF  01,W
4BA2:  MOVLB  6
4BA4:  MOVWF  x30
4BA6:  MOVLW  2A
4BA8:  MOVWF  x47
4BAA:  MOVLW  1C
4BAC:  MOVWF  x48
4BAE:  MOVFF  630,649
4BB2:  MOVLW  23
4BB4:  MOVWF  x4A
4BB6:  MOVLW  01
4BB8:  MOVWF  x4B
4BBA:  CLRF   x4C
4BBC:  MOVLB  0
4BBE:  CALL   1C88
....................          glcd_rect(42, 28, (int8)(barra)+42, 35, YES, ON);             // Draws a new bar 
4BC2:  MOVFF  579,633
4BC6:  MOVFF  578,632
4BCA:  MOVFF  577,631
4BCE:  MOVFF  576,630
4BD2:  CALL   16A0
4BD6:  MOVLW  2A
4BD8:  ADDWF  01,W
4BDA:  MOVLB  6
4BDC:  MOVWF  x30
4BDE:  MOVLW  2A
4BE0:  MOVWF  x47
4BE2:  MOVLW  1C
4BE4:  MOVWF  x48
4BE6:  MOVFF  630,649
4BEA:  MOVLW  23
4BEC:  MOVWF  x4A
4BEE:  MOVLW  01
4BF0:  MOVWF  x4B
4BF2:  MOVWF  x4C
4BF4:  MOVLB  0
4BF6:  CALL   1C88
....................          glcd_rect(40, 26, 94, 37, NO, ON);             // Draws a new bar 
4BFA:  MOVLW  28
4BFC:  MOVLB  6
4BFE:  MOVWF  x47
4C00:  MOVLW  1A
4C02:  MOVWF  x48
4C04:  MOVLW  5E
4C06:  MOVWF  x49
4C08:  MOVLW  25
4C0A:  MOVWF  x4A
4C0C:  CLRF   x4B
4C0E:  MOVLW  01
4C10:  MOVWF  x4C
4C12:  MOVLB  0
4C14:  CALL   1C88
....................          barra_old=barra; 
4C18:  MOVFF  579,57D
4C1C:  MOVFF  578,57C
4C20:  MOVFF  577,57B
4C24:  MOVFF  576,57A
.................... // Fin de Dibujo de barra de estado de Filtro 
....................  
.................... // Dibujo de barra de estado de Luz UV 
....................          barra2=100.0*(UVTime/1000.0); 
4C28:  MOVFF  619,638
4C2C:  MOVFF  618,637
4C30:  MOVFF  617,636
4C34:  MOVFF  616,635
4C38:  MOVLB  6
4C3A:  CLRF   x3C
4C3C:  CLRF   x3B
4C3E:  MOVLW  7A
4C40:  MOVWF  x3A
4C42:  MOVLW  88
4C44:  MOVWF  x39
4C46:  MOVLB  0
4C48:  CALL   12CA
4C4C:  MOVLB  6
4C4E:  CLRF   x55
4C50:  CLRF   x54
4C52:  MOVLW  48
4C54:  MOVWF  x53
4C56:  MOVLW  85
4C58:  MOVWF  x52
4C5A:  MOVFF  03,659
4C5E:  MOVFF  02,658
4C62:  MOVFF  01,657
4C66:  MOVFF  00,656
4C6A:  MOVLB  0
4C6C:  CALL   16DC
4C70:  MOVFF  03,581
4C74:  MOVFF  02,580
4C78:  MOVFF  01,57F
4C7C:  MOVFF  00,57E
....................          if(barra2>100.0) 
4C80:  MOVLB  6
4C82:  CLRF   x38
4C84:  CLRF   x37
4C86:  MOVLW  48
4C88:  MOVWF  x36
4C8A:  MOVLW  85
4C8C:  MOVWF  x35
4C8E:  MOVFF  581,63C
4C92:  MOVFF  580,63B
4C96:  MOVFF  57F,63A
4C9A:  MOVFF  57E,639
4C9E:  MOVLB  0
4CA0:  CALL   238E
4CA4:  BNC   4CB4
....................             barra2=100.0; 
4CA6:  MOVLB  5
4CA8:  CLRF   x81
4CAA:  CLRF   x80
4CAC:  MOVLW  48
4CAE:  MOVWF  x7F
4CB0:  MOVLW  85
4CB2:  MOVWF  x7E
....................          barra2=barra2/2; 
4CB4:  MOVFF  581,638
4CB8:  MOVFF  580,637
4CBC:  MOVFF  57F,636
4CC0:  MOVFF  57E,635
4CC4:  MOVLB  6
4CC6:  CLRF   x3C
4CC8:  CLRF   x3B
4CCA:  CLRF   x3A
4CCC:  MOVLW  80
4CCE:  MOVWF  x39
4CD0:  MOVLB  0
4CD2:  CALL   12CA
4CD6:  MOVFF  03,581
4CDA:  MOVFF  02,580
4CDE:  MOVFF  01,57F
4CE2:  MOVFF  00,57E
....................          glcd_rect(42, 42, (int8)(barra_old2)+42, 49, YES, OFF);  // Clears the old bar 
4CE6:  MOVFF  585,633
4CEA:  MOVFF  584,632
4CEE:  MOVFF  583,631
4CF2:  MOVFF  582,630
4CF6:  CALL   16A0
4CFA:  MOVLW  2A
4CFC:  ADDWF  01,W
4CFE:  MOVLB  6
4D00:  MOVWF  x30
4D02:  MOVLW  2A
4D04:  MOVWF  x47
4D06:  MOVWF  x48
4D08:  MOVFF  630,649
4D0C:  MOVLW  31
4D0E:  MOVWF  x4A
4D10:  MOVLW  01
4D12:  MOVWF  x4B
4D14:  CLRF   x4C
4D16:  MOVLB  0
4D18:  CALL   1C88
....................          glcd_rect(42, 42, (int8)(barra2)+42, 49, YES, ON);             // Draws a new bar 
4D1C:  MOVFF  581,633
4D20:  MOVFF  580,632
4D24:  MOVFF  57F,631
4D28:  MOVFF  57E,630
4D2C:  CALL   16A0
4D30:  MOVLW  2A
4D32:  ADDWF  01,W
4D34:  MOVLB  6
4D36:  MOVWF  x30
4D38:  MOVLW  2A
4D3A:  MOVWF  x47
4D3C:  MOVWF  x48
4D3E:  MOVFF  630,649
4D42:  MOVLW  31
4D44:  MOVWF  x4A
4D46:  MOVLW  01
4D48:  MOVWF  x4B
4D4A:  MOVWF  x4C
4D4C:  MOVLB  0
4D4E:  CALL   1C88
....................          glcd_rect(40, 40, 94, 51, NO, ON);             // Draws a new bar 
4D52:  MOVLW  28
4D54:  MOVLB  6
4D56:  MOVWF  x47
4D58:  MOVWF  x48
4D5A:  MOVLW  5E
4D5C:  MOVWF  x49
4D5E:  MOVLW  33
4D60:  MOVWF  x4A
4D62:  CLRF   x4B
4D64:  MOVLW  01
4D66:  MOVWF  x4C
4D68:  MOVLB  0
4D6A:  CALL   1C88
....................          barra_old2=barra2; 
4D6E:  MOVFF  581,585
4D72:  MOVFF  580,584
4D76:  MOVFF  57F,583
4D7A:  MOVFF  57E,582
.................... // Fin de Dibujo de barra de estado de Luz UV 
....................  
....................  
....................          if(Downflow<0.36) 
4D7E:  MOVFF  56D,638
4D82:  MOVFF  56C,637
4D86:  MOVFF  56B,636
4D8A:  MOVFF  56A,635
4D8E:  MOVLW  EC
4D90:  MOVLB  6
4D92:  MOVWF  x3C
4D94:  MOVLW  51
4D96:  MOVWF  x3B
4D98:  MOVLW  38
4D9A:  MOVWF  x3A
4D9C:  MOVLW  7D
4D9E:  MOVWF  x39
4DA0:  MOVLB  0
4DA2:  CALL   238E
4DA6:  BNC   4DE8
....................          { 
....................             flag_latencia=1; 
4DA8:  MOVLB  4
4DAA:  BSF    x4E.3
....................             if(Latencia==1) 
4DAC:  BTFSS  x4E.2
4DAE:  BRA    4DE4
....................             {          
....................                //strcpy(Menus.Letra,"!Perdida Flujo!"); 
....................                //displayMenu(Menus.Letra,0,55,0,1); 
....................                if(Downflow<0.36) 
4DB0:  MOVFF  56D,638
4DB4:  MOVFF  56C,637
4DB8:  MOVFF  56B,636
4DBC:  MOVFF  56A,635
4DC0:  MOVLW  EC
4DC2:  MOVLB  6
4DC4:  MOVWF  x3C
4DC6:  MOVLW  51
4DC8:  MOVWF  x3B
4DCA:  MOVLW  38
4DCC:  MOVWF  x3A
4DCE:  MOVLW  7D
4DD0:  MOVWF  x39
4DD2:  MOVLB  0
4DD4:  CALL   238E
4DD8:  BNC   4DE2
....................                { 
....................                   Alarma=5; 
4DDA:  MOVLW  05
4DDC:  MOVLB  5
4DDE:  MOVWF  x1F
4DE0:  MOVLB  0
4DE2:  MOVLB  4
....................                } 
....................             } 
....................          } 
....................          else 
4DE4:  BRA    4E1A
4DE6:  MOVLB  0
....................          { 
....................             Latencia=0;t_latencia=0;flag_latencia=0; 
4DE8:  MOVLB  4
4DEA:  BCF    x4E.2
4DEC:  MOVLB  5
4DEE:  CLRF   x37
4DF0:  CLRF   x36
4DF2:  MOVLB  4
4DF4:  BCF    x4E.3
....................             glcd_rect(0, 54, 104, 64, YES, OFF);Alarma=10; 
4DF6:  MOVLB  6
4DF8:  CLRF   x47
4DFA:  MOVLW  36
4DFC:  MOVWF  x48
4DFE:  MOVLW  68
4E00:  MOVWF  x49
4E02:  MOVLW  40
4E04:  MOVWF  x4A
4E06:  MOVLW  01
4E08:  MOVWF  x4B
4E0A:  CLRF   x4C
4E0C:  MOVLB  0
4E0E:  CALL   1C88
4E12:  MOVLW  0A
4E14:  MOVLB  5
4E16:  MOVWF  x1F
4E18:  MOVLB  4
....................          } 
....................        
....................          if(flag_luz==1) 
4E1A:  BTFSS  x4D.3
4E1C:  BRA    4E34
....................          { 
....................             glcd_imagen(3);LuzBlanca=5; 
4E1E:  MOVLW  03
4E20:  MOVLB  6
4E22:  MOVWF  x30
4E24:  MOVLB  0
4E26:  CALL   2F30
4E2A:  MOVLW  05
4E2C:  MOVLB  5
4E2E:  MOVWF  x1C
....................          } 
....................          else 
4E30:  BRA    4E58
4E32:  MOVLB  4
....................          { 
....................             glcd_rect(102, 14, 127, 28, YES, OFF);LuzBlanca=10; 
4E34:  MOVLW  66
4E36:  MOVLB  6
4E38:  MOVWF  x47
4E3A:  MOVLW  0E
4E3C:  MOVWF  x48
4E3E:  MOVLW  7F
4E40:  MOVWF  x49
4E42:  MOVLW  1C
4E44:  MOVWF  x4A
4E46:  MOVLW  01
4E48:  MOVWF  x4B
4E4A:  CLRF   x4C
4E4C:  MOVLB  0
4E4E:  CALL   1C88
4E52:  MOVLW  0A
4E54:  MOVLB  5
4E56:  MOVWF  x1C
....................          } 
....................           
....................           
....................          if(UV2==10) 
4E58:  MOVF   x21,W
4E5A:  SUBLW  0A
4E5C:  BTFSS  FD8.2
4E5E:  BRA    4F70
....................          { 
....................             flag_Luz=0;LuzBlanca=10;Toma=10;Motor=10;flag_blower=0; 
4E60:  MOVLB  4
4E62:  BCF    x4D.3
4E64:  MOVLW  0A
4E66:  MOVLB  5
4E68:  MOVWF  x1C
4E6A:  MOVWF  x20
4E6C:  MOVWF  x1E
4E6E:  MOVLB  4
4E70:  BCF    x4D.1
....................             tiempo_uv=1; 
4E72:  BSF    x4D.7
....................             LuzUV=5; 
4E74:  MOVLW  05
4E76:  MOVLB  5
4E78:  MOVWF  x1D
....................             glcd_text57(105, 0, UV, 2, ON); 
4E7A:  MOVLW  69
4E7C:  MOVLB  6
4E7E:  MOVWF  x47
4E80:  CLRF   x48
4E82:  MOVLW  04
4E84:  MOVWF  x4A
4E86:  MOVLW  94
4E88:  MOVWF  x49
4E8A:  MOVLW  02
4E8C:  MOVWF  x4B
4E8E:  MOVLW  01
4E90:  MOVWF  x4C
4E92:  MOVLB  0
4E94:  CALL   1D4A
....................             if(guardauv==1) 
4E98:  MOVLB  4
4E9A:  BTFSS  x4E.4
4E9C:  BRA    4F6C
....................             { 
....................                guardauv=0;write_eeprom(31,minutos_uv); 
4E9E:  BCF    x4E.4
4EA0:  MOVLW  1F
4EA2:  MOVWF  FA9
4EA4:  MOVFF  538,FA8
4EA8:  BCF    FA6.6
4EAA:  BCF    FA6.7
4EAC:  BSF    FA6.2
4EAE:  MOVF   FF2,W
4EB0:  MOVWF  00
4EB2:  BCF    FF2.7
4EB4:  MOVLB  F
4EB6:  MOVLW  55
4EB8:  MOVWF  FA7
4EBA:  MOVLW  AA
4EBC:  MOVWF  FA7
4EBE:  BSF    FA6.1
4EC0:  BTFSC  FA6.1
4EC2:  BRA    4EC0
4EC4:  BCF    FA6.2
4EC6:  MOVF   00,W
4EC8:  IORWF  FF2,F
....................                write_eeprom(12,Tuv[0]);write_eeprom(13,Tuv[1]);write_eeprom(14,Tuv[2]);write_eeprom(15,Tuv[3]); 
4ECA:  MOVLW  0C
4ECC:  MOVWF  FA9
4ECE:  MOVFF  54E,FA8
4ED2:  BCF    FA6.6
4ED4:  BCF    FA6.7
4ED6:  BSF    FA6.2
4ED8:  MOVFF  FF2,00
4EDC:  BCF    FF2.7
4EDE:  MOVLW  55
4EE0:  MOVWF  FA7
4EE2:  MOVLW  AA
4EE4:  MOVWF  FA7
4EE6:  BSF    FA6.1
4EE8:  BTFSC  FA6.1
4EEA:  BRA    4EE8
4EEC:  BCF    FA6.2
4EEE:  MOVF   00,W
4EF0:  IORWF  FF2,F
4EF2:  MOVLW  0D
4EF4:  MOVWF  FA9
4EF6:  MOVFF  54F,FA8
4EFA:  BCF    FA6.6
4EFC:  BCF    FA6.7
4EFE:  BSF    FA6.2
4F00:  MOVFF  FF2,00
4F04:  BCF    FF2.7
4F06:  MOVLW  55
4F08:  MOVWF  FA7
4F0A:  MOVLW  AA
4F0C:  MOVWF  FA7
4F0E:  BSF    FA6.1
4F10:  BTFSC  FA6.1
4F12:  BRA    4F10
4F14:  BCF    FA6.2
4F16:  MOVF   00,W
4F18:  IORWF  FF2,F
4F1A:  MOVLW  0E
4F1C:  MOVWF  FA9
4F1E:  MOVFF  550,FA8
4F22:  BCF    FA6.6
4F24:  BCF    FA6.7
4F26:  BSF    FA6.2
4F28:  MOVFF  FF2,00
4F2C:  BCF    FF2.7
4F2E:  MOVLW  55
4F30:  MOVWF  FA7
4F32:  MOVLW  AA
4F34:  MOVWF  FA7
4F36:  BSF    FA6.1
4F38:  BTFSC  FA6.1
4F3A:  BRA    4F38
4F3C:  BCF    FA6.2
4F3E:  MOVF   00,W
4F40:  IORWF  FF2,F
4F42:  MOVLW  0F
4F44:  MOVWF  FA9
4F46:  MOVFF  551,FA8
4F4A:  BCF    FA6.6
4F4C:  BCF    FA6.7
4F4E:  BSF    FA6.2
4F50:  MOVFF  FF2,00
4F54:  BCF    FF2.7
4F56:  MOVLW  55
4F58:  MOVWF  FA7
4F5A:  MOVLW  AA
4F5C:  MOVWF  FA7
4F5E:  BSF    FA6.1
4F60:  BTFSC  FA6.1
4F62:  BRA    4F60
4F64:  BCF    FA6.2
4F66:  MOVF   00,W
4F68:  IORWF  FF2,F
4F6A:  MOVLB  4
....................             }                
....................          } 
....................          else 
4F6C:  BRA    5068
4F6E:  MOVLB  5
....................          { 
....................             LuzUV=10;tiempo_uv=0; 
4F70:  MOVLW  0A
4F72:  MOVWF  x1D
4F74:  MOVLB  4
4F76:  BCF    x4D.7
....................             glcd_rect(102, 0, 127, 14, YES, OFF); 
4F78:  MOVLW  66
4F7A:  MOVLB  6
4F7C:  MOVWF  x47
4F7E:  CLRF   x48
4F80:  MOVLW  7F
4F82:  MOVWF  x49
4F84:  MOVLW  0E
4F86:  MOVWF  x4A
4F88:  MOVLW  01
4F8A:  MOVWF  x4B
4F8C:  CLRF   x4C
4F8E:  MOVLB  0
4F90:  CALL   1C88
....................             if(guardauv==0) 
4F94:  MOVLB  4
4F96:  BTFSC  x4E.4
4F98:  BRA    5068
....................             { 
....................                guardauv=1;write_eeprom(31,minutos_uv); 
4F9A:  BSF    x4E.4
4F9C:  MOVLW  1F
4F9E:  MOVWF  FA9
4FA0:  MOVFF  538,FA8
4FA4:  BCF    FA6.6
4FA6:  BCF    FA6.7
4FA8:  BSF    FA6.2
4FAA:  MOVF   FF2,W
4FAC:  MOVWF  00
4FAE:  BCF    FF2.7
4FB0:  MOVLB  F
4FB2:  MOVLW  55
4FB4:  MOVWF  FA7
4FB6:  MOVLW  AA
4FB8:  MOVWF  FA7
4FBA:  BSF    FA6.1
4FBC:  BTFSC  FA6.1
4FBE:  BRA    4FBC
4FC0:  BCF    FA6.2
4FC2:  MOVF   00,W
4FC4:  IORWF  FF2,F
....................                write_eeprom(12,Tuv[0]);write_eeprom(13,Tuv[1]);write_eeprom(14,Tuv[2]);write_eeprom(15,Tuv[3]); 
4FC6:  MOVLW  0C
4FC8:  MOVWF  FA9
4FCA:  MOVFF  54E,FA8
4FCE:  BCF    FA6.6
4FD0:  BCF    FA6.7
4FD2:  BSF    FA6.2
4FD4:  MOVFF  FF2,00
4FD8:  BCF    FF2.7
4FDA:  MOVLW  55
4FDC:  MOVWF  FA7
4FDE:  MOVLW  AA
4FE0:  MOVWF  FA7
4FE2:  BSF    FA6.1
4FE4:  BTFSC  FA6.1
4FE6:  BRA    4FE4
4FE8:  BCF    FA6.2
4FEA:  MOVF   00,W
4FEC:  IORWF  FF2,F
4FEE:  MOVLW  0D
4FF0:  MOVWF  FA9
4FF2:  MOVFF  54F,FA8
4FF6:  BCF    FA6.6
4FF8:  BCF    FA6.7
4FFA:  BSF    FA6.2
4FFC:  MOVFF  FF2,00
5000:  BCF    FF2.7
5002:  MOVLW  55
5004:  MOVWF  FA7
5006:  MOVLW  AA
5008:  MOVWF  FA7
500A:  BSF    FA6.1
500C:  BTFSC  FA6.1
500E:  BRA    500C
5010:  BCF    FA6.2
5012:  MOVF   00,W
5014:  IORWF  FF2,F
5016:  MOVLW  0E
5018:  MOVWF  FA9
501A:  MOVFF  550,FA8
501E:  BCF    FA6.6
5020:  BCF    FA6.7
5022:  BSF    FA6.2
5024:  MOVFF  FF2,00
5028:  BCF    FF2.7
502A:  MOVLW  55
502C:  MOVWF  FA7
502E:  MOVLW  AA
5030:  MOVWF  FA7
5032:  BSF    FA6.1
5034:  BTFSC  FA6.1
5036:  BRA    5034
5038:  BCF    FA6.2
503A:  MOVF   00,W
503C:  IORWF  FF2,F
503E:  MOVLW  0F
5040:  MOVWF  FA9
5042:  MOVFF  551,FA8
5046:  BCF    FA6.6
5048:  BCF    FA6.7
504A:  BSF    FA6.2
504C:  MOVFF  FF2,00
5050:  BCF    FF2.7
5052:  MOVLW  55
5054:  MOVWF  FA7
5056:  MOVLW  AA
5058:  MOVWF  FA7
505A:  BSF    FA6.1
505C:  BTFSC  FA6.1
505E:  BRA    505C
5060:  BCF    FA6.2
5062:  MOVF   00,W
5064:  IORWF  FF2,F
5066:  MOVLB  4
....................             } 
....................          } 
....................           
....................          if(Alarma==5) 
5068:  MOVLB  5
506A:  MOVF   x1F,W
506C:  SUBLW  05
506E:  BNZ   50AC
....................          { 
....................             glcd_rect(0, 55, 100, 63, YES, OFF); 
5070:  MOVLB  6
5072:  CLRF   x47
5074:  MOVLW  37
5076:  MOVWF  x48
5078:  MOVLW  64
507A:  MOVWF  x49
507C:  MOVLW  3F
507E:  MOVWF  x4A
5080:  MOVLW  01
5082:  MOVWF  x4B
5084:  CLRF   x4C
5086:  MOVLB  0
5088:  CALL   1C88
....................             glcd_text57(0,55, Perdida, 1, ON); 
508C:  MOVLB  6
508E:  CLRF   x47
5090:  MOVLW  37
5092:  MOVWF  x48
5094:  MOVLW  04
5096:  MOVWF  x4A
5098:  MOVLW  FD
509A:  MOVWF  x49
509C:  MOVLW  01
509E:  MOVWF  x4B
50A0:  MOVWF  x4C
50A2:  MOVLB  0
50A4:  CALL   1D4A
....................          } 
....................          else 
50A8:  BRA    50C8
50AA:  MOVLB  5
....................          {                
....................             glcd_rect(0, 55, 100, 63, YES, OFF);             
50AC:  MOVLB  6
50AE:  CLRF   x47
50B0:  MOVLW  37
50B2:  MOVWF  x48
50B4:  MOVLW  64
50B6:  MOVWF  x49
50B8:  MOVLW  3F
50BA:  MOVWF  x4A
50BC:  MOVLW  01
50BE:  MOVWF  x4B
50C0:  CLRF   x4C
50C2:  MOVLB  0
50C4:  CALL   1C88
....................          } 
....................              
....................          if(RIGHT)//Si oprime boton de Blower. 
50C8:  BSF    F92.2
50CA:  BTFSS  F80.2
50CC:  BRA    50EA
....................          { 
....................             if(Flanco3 == 0) 
50CE:  MOVLB  4
50D0:  BTFSC  x4C.3
50D2:  BRA    50E6
....................             { 
....................                Flanco3 = 1;delay_ms(30);flag_blower=!flag_blower; 
50D4:  BSF    x4C.3
50D6:  MOVLW  1E
50D8:  MOVLB  6
50DA:  MOVWF  x31
50DC:  MOVLB  0
50DE:  CALL   126A
50E2:  MOVLB  4
50E4:  BTG    x4D.1
....................             } 
....................          } 
....................          else 
50E6:  BRA    50EE
50E8:  MOVLB  0
....................          { 
....................             Flanco3 = 0; 
50EA:  MOVLB  4
50EC:  BCF    x4C.3
....................          } 
....................                 
....................          if(LEFT)//Si oprime boton de Luz UV. 
50EE:  BSF    F92.3
50F0:  BTFSS  F80.3
50F2:  BRA    511C
....................          { 
....................             if(Flanco4 == 0) 
50F4:  BTFSC  x4C.4
50F6:  BRA    511A
....................             { 
....................                Flanco4 = 1;delay_ms(30);flag_uv=!flag_uv; 
50F8:  BSF    x4C.4
50FA:  MOVLW  1E
50FC:  MOVLB  6
50FE:  MOVWF  x31
5100:  MOVLB  0
5102:  CALL   126A
5106:  MOVLB  4
5108:  BTG    x4D.0
....................                if(UV2==0) 
510A:  MOVLB  5
510C:  MOVF   x21,F
510E:  BNZ   5116
....................                   UV2=10; 
5110:  MOVLW  0A
5112:  MOVWF  x21
....................                else 
5114:  BRA    5118
....................                   UV2=0; 
5116:  CLRF   x21
5118:  MOVLB  4
....................             } 
....................          } 
....................          else 
511A:  BRA    511E
....................          { 
....................             Flanco4 = 0; 
511C:  BCF    x4C.4
....................          } 
....................                 
....................          if(DOWN)//Si oprime boton de Luz Blanca. 
511E:  BSF    F92.1
5120:  BTFSS  F80.1
5122:  BRA    513C
....................          { 
....................             if(Flanco5 == 0) 
5124:  BTFSC  x4C.5
5126:  BRA    513A
....................             { 
....................                Flanco5 = 1;delay_ms(30);flag_luz=!flag_luz; 
5128:  BSF    x4C.5
512A:  MOVLW  1E
512C:  MOVLB  6
512E:  MOVWF  x31
5130:  MOVLB  0
5132:  CALL   126A
5136:  MOVLB  4
5138:  BTG    x4D.3
....................             } 
....................          } 
....................          else 
513A:  BRA    513E
....................          { 
....................             Flanco5 = 0; 
513C:  BCF    x4C.5
....................          } 
....................                 
....................          if(UP)//Si oprime boton de Toma. 
513E:  BSF    F92.0
5140:  BTFSS  F80.0
5142:  BRA    51B4
....................          { 
....................             delay_ms(500); 
5144:  MOVLW  02
5146:  MOVLB  6
5148:  MOVWF  x30
514A:  MOVLW  FA
514C:  MOVWF  x31
514E:  MOVLB  0
5150:  CALL   126A
5154:  MOVLB  6
5156:  DECFSZ x30,F
5158:  BRA    514A
....................             if(UP)//Si oprime boton de Toma. 
515A:  BSF    F92.0
515C:  BTFSS  F80.0
515E:  BRA    5196
....................             { 
....................                delay_ms(30);Menu=3;//glcd_fillScreen(OFF); 
5160:  MOVLW  1E
5162:  MOVWF  x31
5164:  MOVLB  0
5166:  CALL   126A
516A:  MOVLW  03
516C:  MOVLB  5
516E:  MOVWF  x0D
....................                glcd_init(ON);             //Inicializa la glcd 
5170:  MOVLW  01
5172:  MOVLB  6
5174:  MOVWF  x30
5176:  MOVLB  0
5178:  CALL   312E
....................                glcd_fillScreen(OFF);      //Limpia la pantalla 
517C:  MOVLB  6
517E:  CLRF   x31
5180:  MOVLB  0
5182:  CALL   20E2
....................                glcd_update();   
5186:  CALL   19D6
....................                LuzBlanca=10;LuzUV=10; 
518A:  MOVLW  0A
518C:  MOVLB  5
518E:  MOVWF  x1C
5190:  MOVWF  x1D
....................             } 
....................             else 
5192:  BRA    51B0
5194:  MOVLB  6
....................             { 
....................                if(Flanco6 == 0) 
5196:  MOVLB  4
5198:  BTFSC  x4C.6
519A:  BRA    51AE
....................                { 
....................                   Flanco6 = 1;delay_ms(30);flag_toma=!flag_toma; 
519C:  BSF    x4C.6
519E:  MOVLW  1E
51A0:  MOVLB  6
51A2:  MOVWF  x31
51A4:  MOVLB  0
51A6:  CALL   126A
51AA:  MOVLB  4
51AC:  BTG    x4D.2
51AE:  MOVLB  5
....................                } 
....................             } 
....................          } 
....................          else 
51B0:  BRA    51B8
51B2:  MOVLB  4
....................          { 
....................             Flanco6 = 0; 
51B4:  BCF    x4C.6
51B6:  MOVLB  5
....................          } 
....................                 
....................          if((Tempouv[0]>=Tempouvp[0])&&(Tempouv[1]>=Tempouvp[1])&&(Tempouv[2]>=Tempouvp[2])&&(Tempouv[3]>=Tempouvp[3]))       
51B8:  MOVF   x56,W
51BA:  XORLW  80
51BC:  MOVWF  00
51BE:  MOVF   x52,W
51C0:  XORLW  80
51C2:  SUBWF  00,W
51C4:  BZ    51C8
51C6:  BC    5240
51C8:  MOVF   x57,W
51CA:  XORLW  80
51CC:  MOVWF  00
51CE:  MOVF   x53,W
51D0:  XORLW  80
51D2:  SUBWF  00,W
51D4:  BZ    51D8
51D6:  BC    5240
51D8:  MOVF   x58,W
51DA:  XORLW  80
51DC:  MOVWF  00
51DE:  MOVF   x54,W
51E0:  XORLW  80
51E2:  SUBWF  00,W
51E4:  BZ    51E8
51E6:  BC    5240
51E8:  MOVF   x59,W
51EA:  XORLW  80
51EC:  MOVWF  00
51EE:  MOVF   x55,W
51F0:  XORLW  80
51F2:  SUBWF  00,W
51F4:  BZ    51F8
51F6:  BC    5240
....................          { 
....................             if((Tempouvp[0]==0)&&(Tempouvp[1]==0)&&(Tempouvp[2]==0)&&(Tempouvp[3]==0)) 
51F8:  MOVF   x56,F
51FA:  BNZ   520A
51FC:  MOVF   x57,F
51FE:  BNZ   520A
5200:  MOVF   x58,F
5202:  BNZ   520A
5204:  MOVF   x59,F
5206:  BNZ   520A
....................             {} 
....................             else   
5208:  BRA    5240
....................             { 
....................                tiempo_uv=0;LuzUV=10;flag_uv=!flag_uv;glcd_rect(102, 0, 127, 14, YES, OFF); 
520A:  MOVLB  4
520C:  BCF    x4D.7
520E:  MOVLW  0A
5210:  MOVLB  5
5212:  MOVWF  x1D
5214:  MOVLB  4
5216:  BTG    x4D.0
5218:  MOVLW  66
521A:  MOVLB  6
521C:  MOVWF  x47
521E:  CLRF   x48
5220:  MOVLW  7F
5222:  MOVWF  x49
5224:  MOVLW  0E
5226:  MOVWF  x4A
5228:  MOVLW  01
522A:  MOVWF  x4B
522C:  CLRF   x4C
522E:  MOVLB  0
5230:  CALL   1C88
....................                Tempouv[0]=0;Tempouv[1]=0;Tempouv[2]=0;Tempouv[3]=0;UV2=0; 
5234:  MOVLB  5
5236:  CLRF   x52
5238:  CLRF   x53
523A:  CLRF   x54
523C:  CLRF   x55
523E:  CLRF   x21
....................             } 
....................          } 
....................       Envio_Esclavos(); 
5240:  MOVLB  0
5242:  CALL   195A
5246:  MOVLB  5
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==3){ //Menu Principal. 
5248:  MOVF   x0D,W
524A:  SUBLW  03
524C:  BTFSS  FD8.2
524E:  BRA    552E
....................              
....................       strcpy(Menus.Letra,"Menu"); 
5250:  MOVLW  06
5252:  MOVWF  FEA
5254:  MOVLW  1A
5256:  MOVWF  FE9
5258:  MOVFF  FF2,630
525C:  BCF    FF2.7
525E:  MOVLW  00
5260:  MOVLB  0
5262:  CALL   0F58
5266:  TBLRD*-
5268:  TBLRD*+
526A:  MOVF   FF5,W
526C:  MOVWF  FEE
526E:  IORLW  00
5270:  BNZ   5268
5272:  MOVLB  6
5274:  BTFSC  x30.7
5276:  BSF    FF2.7
....................       displayMenu(Menus.Letra,40,0,1,2); 
5278:  MOVLW  06
527A:  MOVWF  x31
527C:  MOVLW  1A
527E:  MOVWF  x30
5280:  MOVLW  28
5282:  MOVWF  x32
5284:  CLRF   x33
5286:  MOVLW  01
5288:  MOVWF  x34
528A:  MOVLW  02
528C:  MOVWF  x35
528E:  MOVLB  0
5290:  CALL   213C
....................        
....................       if(Opcion==1)    
5294:  MOVLB  5
5296:  DECFSZ x0F,W
5298:  BRA    52E0
....................          {strcpy(Menus.Letra,"Ajustes"); 
529A:  MOVLW  06
529C:  MOVWF  FEA
529E:  MOVLW  1A
52A0:  MOVWF  FE9
52A2:  MOVFF  FF2,630
52A6:  BCF    FF2.7
52A8:  MOVLW  00
52AA:  MOVLB  0
52AC:  CALL   0F78
52B0:  TBLRD*-
52B2:  TBLRD*+
52B4:  MOVF   FF5,W
52B6:  MOVWF  FEE
52B8:  IORLW  00
52BA:  BNZ   52B2
52BC:  MOVLB  6
52BE:  BTFSC  x30.7
52C0:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,19,1,1);} 
52C2:  MOVLW  06
52C4:  MOVWF  x31
52C6:  MOVLW  1A
52C8:  MOVWF  x30
52CA:  CLRF   x32
52CC:  MOVLW  13
52CE:  MOVWF  x33
52D0:  MOVLW  01
52D2:  MOVWF  x34
52D4:  MOVWF  x35
52D6:  MOVLB  0
52D8:  CALL   213C
....................       else 
52DC:  BRA    5322
52DE:  MOVLB  5
....................          {strcpy(Menus.Letra,"Ajustes"); 
52E0:  MOVLW  06
52E2:  MOVWF  FEA
52E4:  MOVLW  1A
52E6:  MOVWF  FE9
52E8:  MOVFF  FF2,630
52EC:  BCF    FF2.7
52EE:  MOVLW  00
52F0:  MOVLB  0
52F2:  CALL   0F78
52F6:  TBLRD*-
52F8:  TBLRD*+
52FA:  MOVF   FF5,W
52FC:  MOVWF  FEE
52FE:  IORLW  00
5300:  BNZ   52F8
5302:  MOVLB  6
5304:  BTFSC  x30.7
5306:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,19,0,1);} 
5308:  MOVLW  06
530A:  MOVWF  x31
530C:  MOVLW  1A
530E:  MOVWF  x30
5310:  CLRF   x32
5312:  MOVLW  13
5314:  MOVWF  x33
5316:  CLRF   x34
5318:  MOVLW  01
531A:  MOVWF  x35
531C:  MOVLB  0
531E:  CALL   213C
....................           
....................       if(Opcion==2)    
5322:  MOVLB  5
5324:  MOVF   x0F,W
5326:  SUBLW  02
5328:  BNZ   5370
....................          {strcpy(Menus.Letra,"Clave"); 
532A:  MOVLW  06
532C:  MOVWF  FEA
532E:  MOVLW  1A
5330:  MOVWF  FE9
5332:  MOVFF  FF2,630
5336:  BCF    FF2.7
5338:  MOVLW  00
533A:  MOVLB  0
533C:  CALL   0EEE
5340:  TBLRD*-
5342:  TBLRD*+
5344:  MOVF   FF5,W
5346:  MOVWF  FEE
5348:  IORLW  00
534A:  BNZ   5342
534C:  MOVLB  6
534E:  BTFSC  x30.7
5350:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,35,1,1);} 
5352:  MOVLW  06
5354:  MOVWF  x31
5356:  MOVLW  1A
5358:  MOVWF  x30
535A:  CLRF   x32
535C:  MOVLW  23
535E:  MOVWF  x33
5360:  MOVLW  01
5362:  MOVWF  x34
5364:  MOVWF  x35
5366:  MOVLB  0
5368:  CALL   213C
....................       else 
536C:  BRA    53B2
536E:  MOVLB  5
....................          {strcpy(Menus.Letra,"Clave"); 
5370:  MOVLW  06
5372:  MOVWF  FEA
5374:  MOVLW  1A
5376:  MOVWF  FE9
5378:  MOVFF  FF2,630
537C:  BCF    FF2.7
537E:  MOVLW  00
5380:  MOVLB  0
5382:  CALL   0EEE
5386:  TBLRD*-
5388:  TBLRD*+
538A:  MOVF   FF5,W
538C:  MOVWF  FEE
538E:  IORLW  00
5390:  BNZ   5388
5392:  MOVLB  6
5394:  BTFSC  x30.7
5396:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,35,0,1);}    
5398:  MOVLW  06
539A:  MOVWF  x31
539C:  MOVLW  1A
539E:  MOVWF  x30
53A0:  CLRF   x32
53A2:  MOVLW  23
53A4:  MOVWF  x33
53A6:  CLRF   x34
53A8:  MOVLW  01
53AA:  MOVWF  x35
53AC:  MOVLB  0
53AE:  CALL   213C
....................           
....................        if(Opcion==3)    
53B2:  MOVLB  5
53B4:  MOVF   x0F,W
53B6:  SUBLW  03
53B8:  BNZ   5400
....................          {strcpy(Menus.Letra,"Modo"); 
53BA:  MOVLW  06
53BC:  MOVWF  FEA
53BE:  MOVLW  1A
53C0:  MOVWF  FE9
53C2:  MOVFF  FF2,630
53C6:  BCF    FF2.7
53C8:  MOVLW  00
53CA:  MOVLB  0
53CC:  CALL   0F9A
53D0:  TBLRD*-
53D2:  TBLRD*+
53D4:  MOVF   FF5,W
53D6:  MOVWF  FEE
53D8:  IORLW  00
53DA:  BNZ   53D2
53DC:  MOVLB  6
53DE:  BTFSC  x30.7
53E0:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,51,1,1);} 
53E2:  MOVLW  06
53E4:  MOVWF  x31
53E6:  MOVLW  1A
53E8:  MOVWF  x30
53EA:  CLRF   x32
53EC:  MOVLW  33
53EE:  MOVWF  x33
53F0:  MOVLW  01
53F2:  MOVWF  x34
53F4:  MOVWF  x35
53F6:  MOVLB  0
53F8:  CALL   213C
....................       else 
53FC:  BRA    5442
53FE:  MOVLB  5
....................          {strcpy(Menus.Letra,"Modo"); 
5400:  MOVLW  06
5402:  MOVWF  FEA
5404:  MOVLW  1A
5406:  MOVWF  FE9
5408:  MOVFF  FF2,630
540C:  BCF    FF2.7
540E:  MOVLW  00
5410:  MOVLB  0
5412:  CALL   0F9A
5416:  TBLRD*-
5418:  TBLRD*+
541A:  MOVF   FF5,W
541C:  MOVWF  FEE
541E:  IORLW  00
5420:  BNZ   5418
5422:  MOVLB  6
5424:  BTFSC  x30.7
5426:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,51,0,1);}      
5428:  MOVLW  06
542A:  MOVWF  x31
542C:  MOVLW  1A
542E:  MOVWF  x30
5430:  CLRF   x32
5432:  MOVLW  33
5434:  MOVWF  x33
5436:  CLRF   x34
5438:  MOVLW  01
543A:  MOVWF  x35
543C:  MOVLB  0
543E:  CALL   213C
....................        glcd_update();  
5442:  CALL   19D6
....................        if(w==0) 
5446:  MOVLB  4
5448:  BTFSC  x4D.5
544A:  BRA    5466
....................        {delay_ms(500);w=1;} 
544C:  MOVLW  02
544E:  MOVLB  6
5450:  MOVWF  x30
5452:  MOVLW  FA
5454:  MOVWF  x31
5456:  MOVLB  0
5458:  CALL   126A
545C:  MOVLB  6
545E:  DECFSZ x30,F
5460:  BRA    5452
5462:  MOVLB  4
5464:  BSF    x4D.5
....................           
....................          
....................       if(UP)//Si oprime hacia arriba 
5466:  BSF    F92.0
5468:  BTFSS  F80.0
546A:  BRA    5486
....................       {  if(Flanco == 0)  
546C:  BTFSC  x4C.0
546E:  BRA    5484
....................             {Flanco = 1;delay_ms(30);Opcion--; 
5470:  BSF    x4C.0
5472:  MOVLW  1E
5474:  MOVLB  6
5476:  MOVWF  x31
5478:  MOVLB  0
547A:  CALL   126A
547E:  MOVLB  5
5480:  DECF   x0F,F
5482:  MOVLB  4
....................             } 
....................       } 
....................          else 
5484:  BRA    5488
....................             {Flanco = 0;} 
5486:  BCF    x4C.0
....................              
....................       if(DOWN)//Si oprime hacia abajo 
5488:  BSF    F92.1
548A:  BTFSS  F80.1
548C:  BRA    54A8
....................       {  if(Flanco2 == 0)  
548E:  BTFSC  x4C.2
5490:  BRA    54A6
....................             {Flanco2 = 1;delay_ms(30);Opcion++; 
5492:  BSF    x4C.2
5494:  MOVLW  1E
5496:  MOVLB  6
5498:  MOVWF  x31
549A:  MOVLB  0
549C:  CALL   126A
54A0:  MOVLB  5
54A2:  INCF   x0F,F
54A4:  MOVLB  4
....................             }      
....................       } 
....................          else 
54A6:  BRA    54AA
....................             {Flanco2 = 0;}   
54A8:  BCF    x4C.2
....................              
....................       if(RIGHT)//Si oprime SET 
54AA:  BSF    F92.2
54AC:  BTFSS  F80.2
54AE:  BRA    54EC
....................       {  if(Flanco1 == 0)  
54B0:  BTFSC  x4C.1
54B2:  BRA    54EA
....................             {Flanco1 = 1;delay_ms(500);Menu=Opcion+3;Opcion=1;glcd_fillscreen(OFF);unidad=1; 
54B4:  BSF    x4C.1
54B6:  MOVLW  02
54B8:  MOVLB  6
54BA:  MOVWF  x30
54BC:  MOVLW  FA
54BE:  MOVWF  x31
54C0:  MOVLB  0
54C2:  CALL   126A
54C6:  MOVLB  6
54C8:  DECFSZ x30,F
54CA:  BRA    54BC
54CC:  MOVLW  03
54CE:  MOVLB  5
54D0:  ADDWF  x0F,W
54D2:  MOVWF  x0D
54D4:  MOVLW  01
54D6:  MOVWF  x0F
54D8:  MOVLB  6
54DA:  CLRF   x31
54DC:  MOVLB  0
54DE:  CALL   20E2
54E2:  MOVLW  01
54E4:  MOVLB  5
54E6:  MOVWF  x0E
54E8:  MOVLB  4
....................             } 
....................       } 
....................          else 
54EA:  BRA    54EE
....................             {Flanco1 = 0;}   
54EC:  BCF    x4C.1
....................              
....................       if(LEFT)//Si oprime boton de Toma. 
54EE:  BSF    F92.3
54F0:  BTFSS  F80.3
54F2:  BRA    551A
....................       {delay_ms(700);Menu=2;glcd_fillscreen(OFF);} 
54F4:  MOVLW  04
54F6:  MOVLB  6
54F8:  MOVWF  x30
54FA:  MOVLW  AF
54FC:  MOVWF  x31
54FE:  MOVLB  0
5500:  CALL   126A
5504:  MOVLB  6
5506:  DECFSZ x30,F
5508:  BRA    54FA
550A:  MOVLW  02
550C:  MOVLB  5
550E:  MOVWF  x0D
5510:  MOVLB  6
5512:  CLRF   x31
5514:  MOVLB  0
5516:  CALL   20E2
....................              
....................       if(Opcion>3) 
551A:  MOVLB  5
551C:  MOVF   x0F,W
551E:  SUBLW  03
5520:  BC    5526
....................       {Opcion=1;} 
5522:  MOVLW  01
5524:  MOVWF  x0F
....................       if(Opcion<1) 
5526:  MOVF   x0F,F
5528:  BNZ   552E
....................       {Opcion=3;} 
552A:  MOVLW  03
552C:  MOVWF  x0F
....................      
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==4){ //Menu de Ajustes. 
552E:  MOVF   x0D,W
5530:  SUBLW  04
5532:  BTFSS  FD8.2
5534:  BRA    5834
....................        
....................       if(Opcion==1)    
5536:  DECFSZ x0F,W
5538:  BRA    5580
....................          {strcpy(Menus.Letra,"Tiempo Purga"); 
553A:  MOVLW  06
553C:  MOVWF  FEA
553E:  MOVLW  1A
5540:  MOVWF  FE9
5542:  MOVFF  FF2,630
5546:  BCF    FF2.7
5548:  MOVLW  00
554A:  MOVLB  0
554C:  CALL   0FBA
5550:  TBLRD*-
5552:  TBLRD*+
5554:  MOVF   FF5,W
5556:  MOVWF  FEE
5558:  IORLW  00
555A:  BNZ   5552
555C:  MOVLB  6
555E:  BTFSC  x30.7
5560:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,4,1,1);} 
5562:  MOVLW  06
5564:  MOVWF  x31
5566:  MOVLW  1A
5568:  MOVWF  x30
556A:  CLRF   x32
556C:  MOVLW  04
556E:  MOVWF  x33
5570:  MOVLW  01
5572:  MOVWF  x34
5574:  MOVWF  x35
5576:  MOVLB  0
5578:  CALL   213C
....................       else 
557C:  BRA    55C2
557E:  MOVLB  5
....................          {strcpy(Menus.Letra,"Tiempo Purga"); 
5580:  MOVLW  06
5582:  MOVWF  FEA
5584:  MOVLW  1A
5586:  MOVWF  FE9
5588:  MOVFF  FF2,630
558C:  BCF    FF2.7
558E:  MOVLW  00
5590:  MOVLB  0
5592:  CALL   0FBA
5596:  TBLRD*-
5598:  TBLRD*+
559A:  MOVF   FF5,W
559C:  MOVWF  FEE
559E:  IORLW  00
55A0:  BNZ   5598
55A2:  MOVLB  6
55A4:  BTFSC  x30.7
55A6:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,4,0,1);} 
55A8:  MOVLW  06
55AA:  MOVWF  x31
55AC:  MOVLW  1A
55AE:  MOVWF  x30
55B0:  CLRF   x32
55B2:  MOVLW  04
55B4:  MOVWF  x33
55B6:  CLRF   x34
55B8:  MOVLW  01
55BA:  MOVWF  x35
55BC:  MOVLB  0
55BE:  CALL   213C
....................                    
....................       if(Opcion==2)    
55C2:  MOVLB  5
55C4:  MOVF   x0F,W
55C6:  SUBLW  02
55C8:  BNZ   5610
....................          {strcpy(Menus.Letra,"Tempo UV"); 
55CA:  MOVLW  06
55CC:  MOVWF  FEA
55CE:  MOVLW  1A
55D0:  MOVWF  FE9
55D2:  MOVFF  FF2,630
55D6:  BCF    FF2.7
55D8:  MOVLW  00
55DA:  MOVLB  0
55DC:  CALL   0FE2
55E0:  TBLRD*-
55E2:  TBLRD*+
55E4:  MOVF   FF5,W
55E6:  MOVWF  FEE
55E8:  IORLW  00
55EA:  BNZ   55E2
55EC:  MOVLB  6
55EE:  BTFSC  x30.7
55F0:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,28,1,1);} 
55F2:  MOVLW  06
55F4:  MOVWF  x31
55F6:  MOVLW  1A
55F8:  MOVWF  x30
55FA:  CLRF   x32
55FC:  MOVLW  1C
55FE:  MOVWF  x33
5600:  MOVLW  01
5602:  MOVWF  x34
5604:  MOVWF  x35
5606:  MOVLB  0
5608:  CALL   213C
....................       else 
560C:  BRA    5652
560E:  MOVLB  5
....................          {strcpy(Menus.Letra,"Tempo UV"); 
5610:  MOVLW  06
5612:  MOVWF  FEA
5614:  MOVLW  1A
5616:  MOVWF  FE9
5618:  MOVFF  FF2,630
561C:  BCF    FF2.7
561E:  MOVLW  00
5620:  MOVLB  0
5622:  CALL   0FE2
5626:  TBLRD*-
5628:  TBLRD*+
562A:  MOVF   FF5,W
562C:  MOVWF  FEE
562E:  IORLW  00
5630:  BNZ   5628
5632:  MOVLB  6
5634:  BTFSC  x30.7
5636:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,28,0,1);}        
5638:  MOVLW  06
563A:  MOVWF  x31
563C:  MOVLW  1A
563E:  MOVWF  x30
5640:  CLRF   x32
5642:  MOVLW  1C
5644:  MOVWF  x33
5646:  CLRF   x34
5648:  MOVLW  01
564A:  MOVWF  x35
564C:  MOVLB  0
564E:  CALL   213C
....................           
....................       if(Opcion==3)    
5652:  MOVLB  5
5654:  MOVF   x0F,W
5656:  SUBLW  03
5658:  BNZ   56A0
....................          {strcpy(Menus.Letra,"Sensor de Flujo"); 
565A:  MOVLW  06
565C:  MOVWF  FEA
565E:  MOVLW  1A
5660:  MOVWF  FE9
5662:  MOVFF  FF2,630
5666:  BCF    FF2.7
5668:  MOVLW  00
566A:  MOVLB  0
566C:  CALL   1006
5670:  TBLRD*-
5672:  TBLRD*+
5674:  MOVF   FF5,W
5676:  MOVWF  FEE
5678:  IORLW  00
567A:  BNZ   5672
567C:  MOVLB  6
567E:  BTFSC  x30.7
5680:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,40,1,1);} 
5682:  MOVLW  06
5684:  MOVWF  x31
5686:  MOVLW  1A
5688:  MOVWF  x30
568A:  CLRF   x32
568C:  MOVLW  28
568E:  MOVWF  x33
5690:  MOVLW  01
5692:  MOVWF  x34
5694:  MOVWF  x35
5696:  MOVLB  0
5698:  CALL   213C
....................       else 
569C:  BRA    56E2
569E:  MOVLB  5
....................          {strcpy(Menus.Letra,"Sensor de Flujo"); 
56A0:  MOVLW  06
56A2:  MOVWF  FEA
56A4:  MOVLW  1A
56A6:  MOVWF  FE9
56A8:  MOVFF  FF2,630
56AC:  BCF    FF2.7
56AE:  MOVLW  00
56B0:  MOVLB  0
56B2:  CALL   1006
56B6:  TBLRD*-
56B8:  TBLRD*+
56BA:  MOVF   FF5,W
56BC:  MOVWF  FEE
56BE:  IORLW  00
56C0:  BNZ   56B8
56C2:  MOVLB  6
56C4:  BTFSC  x30.7
56C6:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,40,0,1);}  
56C8:  MOVLW  06
56CA:  MOVWF  x31
56CC:  MOVLW  1A
56CE:  MOVWF  x30
56D0:  CLRF   x32
56D2:  MOVLW  28
56D4:  MOVWF  x33
56D6:  CLRF   x34
56D8:  MOVLW  01
56DA:  MOVWF  x35
56DC:  MOVLB  0
56DE:  CALL   213C
....................           
....................       if(Opcion==4)    
56E2:  MOVLB  5
56E4:  MOVF   x0F,W
56E6:  SUBLW  04
56E8:  BNZ   5730
....................          {strcpy(Menus.Letra,"Sensor de Presion"); 
56EA:  MOVLW  06
56EC:  MOVWF  FEA
56EE:  MOVLW  1A
56F0:  MOVWF  FE9
56F2:  MOVFF  FF2,630
56F6:  BCF    FF2.7
56F8:  MOVLW  00
56FA:  MOVLB  0
56FC:  CALL   1030
5700:  TBLRD*-
5702:  TBLRD*+
5704:  MOVF   FF5,W
5706:  MOVWF  FEE
5708:  IORLW  00
570A:  BNZ   5702
570C:  MOVLB  6
570E:  BTFSC  x30.7
5710:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,52,1,1);} 
5712:  MOVLW  06
5714:  MOVWF  x31
5716:  MOVLW  1A
5718:  MOVWF  x30
571A:  CLRF   x32
571C:  MOVLW  34
571E:  MOVWF  x33
5720:  MOVLW  01
5722:  MOVWF  x34
5724:  MOVWF  x35
5726:  MOVLB  0
5728:  CALL   213C
....................       else 
572C:  BRA    5772
572E:  MOVLB  5
....................          {strcpy(Menus.Letra,"Sensor de Presion"); 
5730:  MOVLW  06
5732:  MOVWF  FEA
5734:  MOVLW  1A
5736:  MOVWF  FE9
5738:  MOVFF  FF2,630
573C:  BCF    FF2.7
573E:  MOVLW  00
5740:  MOVLB  0
5742:  CALL   1030
5746:  TBLRD*-
5748:  TBLRD*+
574A:  MOVF   FF5,W
574C:  MOVWF  FEE
574E:  IORLW  00
5750:  BNZ   5748
5752:  MOVLB  6
5754:  BTFSC  x30.7
5756:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,52,0,1);}           
5758:  MOVLW  06
575A:  MOVWF  x31
575C:  MOVLW  1A
575E:  MOVWF  x30
5760:  CLRF   x32
5762:  MOVLW  34
5764:  MOVWF  x33
5766:  CLRF   x34
5768:  MOVLW  01
576A:  MOVWF  x35
576C:  MOVLB  0
576E:  CALL   213C
....................           
....................          
....................       if(UP)//Si oprime hacia arriba 
5772:  BSF    F92.0
5774:  BTFSS  F80.0
5776:  BRA    5794
....................       {  if(Flanco == 0)  
5778:  MOVLB  4
577A:  BTFSC  x4C.0
577C:  BRA    5792
....................             {Flanco = 1;delay_ms(30);Opcion--; 
577E:  BSF    x4C.0
5780:  MOVLW  1E
5782:  MOVLB  6
5784:  MOVWF  x31
5786:  MOVLB  0
5788:  CALL   126A
578C:  MOVLB  5
578E:  DECF   x0F,F
5790:  MOVLB  4
....................             } 
....................       } 
....................          else 
5792:  BRA    5798
....................             {Flanco = 0;} 
5794:  MOVLB  4
5796:  BCF    x4C.0
....................              
....................       if(DOWN)//Si oprime hacia abajo 
5798:  BSF    F92.1
579A:  BTFSS  F80.1
579C:  BRA    57B8
....................       {  if(Flanco2 == 0)  
579E:  BTFSC  x4C.2
57A0:  BRA    57B6
....................             {Flanco2 = 1;delay_ms(30);Opcion++; 
57A2:  BSF    x4C.2
57A4:  MOVLW  1E
57A6:  MOVLB  6
57A8:  MOVWF  x31
57AA:  MOVLB  0
57AC:  CALL   126A
57B0:  MOVLB  5
57B2:  INCF   x0F,F
57B4:  MOVLB  4
....................             }      
....................       } 
....................          else 
57B6:  BRA    57BA
....................             {Flanco2 = 0;}   
57B8:  BCF    x4C.2
....................              
....................       if(RIGHT)//Si oprime SET 
57BA:  BSF    F92.2
57BC:  BTFSS  F80.2
57BE:  BRA    57F2
....................       {  if(Flanco1 == 0)  
57C0:  BTFSC  x4C.1
57C2:  BRA    57F0
....................             {Flanco1 = 1;delay_ms(500);Menu=Opcion+10;glcd_fillScreen(OFF); 
57C4:  BSF    x4C.1
57C6:  MOVLW  02
57C8:  MOVLB  6
57CA:  MOVWF  x30
57CC:  MOVLW  FA
57CE:  MOVWF  x31
57D0:  MOVLB  0
57D2:  CALL   126A
57D6:  MOVLB  6
57D8:  DECFSZ x30,F
57DA:  BRA    57CC
57DC:  MOVLW  0A
57DE:  MOVLB  5
57E0:  ADDWF  x0F,W
57E2:  MOVWF  x0D
57E4:  MOVLB  6
57E6:  CLRF   x31
57E8:  MOVLB  0
57EA:  CALL   20E2
57EE:  MOVLB  4
....................             } 
....................       } 
....................          else 
57F0:  BRA    57F4
....................             {Flanco1 = 0;}   
57F2:  BCF    x4C.1
....................              
....................       if(LEFT)//Si oprime boton de Toma. 
57F4:  BSF    F92.3
57F6:  BTFSS  F80.3
57F8:  BRA    5820
....................         {delay_ms(700);Menu=3;glcd_fillscreen(OFF);} 
57FA:  MOVLW  04
57FC:  MOVLB  6
57FE:  MOVWF  x30
5800:  MOVLW  AF
5802:  MOVWF  x31
5804:  MOVLB  0
5806:  CALL   126A
580A:  MOVLB  6
580C:  DECFSZ x30,F
580E:  BRA    5800
5810:  MOVLW  03
5812:  MOVLB  5
5814:  MOVWF  x0D
5816:  MOVLB  6
5818:  CLRF   x31
581A:  MOVLB  0
581C:  CALL   20E2
....................        
....................       if(Opcion>4) 
5820:  MOVLB  5
5822:  MOVF   x0F,W
5824:  SUBLW  04
5826:  BC    582C
....................       {Opcion=1;} 
5828:  MOVLW  01
582A:  MOVWF  x0F
....................       if(Opcion<1) 
582C:  MOVF   x0F,F
582E:  BNZ   5834
....................       {Opcion=4;} 
5830:  MOVLW  04
5832:  MOVWF  x0F
....................      
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==6){ //Menu de Modo. 
5834:  MOVF   x0D,W
5836:  SUBLW  06
5838:  BTFSS  FD8.2
583A:  BRA    5992
....................           
....................       if(Opcion==1)    
583C:  DECFSZ x0F,W
583E:  BRA    5886
....................          {strcpy(Menus.Letra,"Mantenimiento"); 
5840:  MOVLW  06
5842:  MOVWF  FEA
5844:  MOVLW  1A
5846:  MOVWF  FE9
5848:  MOVFF  FF2,630
584C:  BCF    FF2.7
584E:  MOVLW  00
5850:  MOVLB  0
5852:  CALL   105C
5856:  TBLRD*-
5858:  TBLRD*+
585A:  MOVF   FF5,W
585C:  MOVWF  FEE
585E:  IORLW  00
5860:  BNZ   5858
5862:  MOVLB  6
5864:  BTFSC  x30.7
5866:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,10,1,1);} 
5868:  MOVLW  06
586A:  MOVWF  x31
586C:  MOVLW  1A
586E:  MOVWF  x30
5870:  CLRF   x32
5872:  MOVLW  0A
5874:  MOVWF  x33
5876:  MOVLW  01
5878:  MOVWF  x34
587A:  MOVWF  x35
587C:  MOVLB  0
587E:  CALL   213C
....................       else 
5882:  BRA    58C8
5884:  MOVLB  5
....................          {strcpy(Menus.Letra,"Mantenimiento"); 
5886:  MOVLW  06
5888:  MOVWF  FEA
588A:  MOVLW  1A
588C:  MOVWF  FE9
588E:  MOVFF  FF2,630
5892:  BCF    FF2.7
5894:  MOVLW  00
5896:  MOVLB  0
5898:  CALL   105C
589C:  TBLRD*-
589E:  TBLRD*+
58A0:  MOVF   FF5,W
58A2:  MOVWF  FEE
58A4:  IORLW  00
58A6:  BNZ   589E
58A8:  MOVLB  6
58AA:  BTFSC  x30.7
58AC:  BSF    FF2.7
....................          displayMenu(Menus.Letra,0,10,0,1);}    
58AE:  MOVLW  06
58B0:  MOVWF  x31
58B2:  MOVLW  1A
58B4:  MOVWF  x30
58B6:  CLRF   x32
58B8:  MOVLW  0A
58BA:  MOVWF  x33
58BC:  CLRF   x34
58BE:  MOVLW  01
58C0:  MOVWF  x35
58C2:  MOVLB  0
58C4:  CALL   213C
....................           
....................           
....................          
....................       if(UP)//Si oprime hacia arriba 
58C8:  BSF    F92.0
58CA:  BTFSS  F80.0
58CC:  BRA    58EA
....................       {  if(Flanco == 0)  
58CE:  MOVLB  4
58D0:  BTFSC  x4C.0
58D2:  BRA    58E8
....................             {Flanco = 1;delay_ms(30);Opcion--; 
58D4:  BSF    x4C.0
58D6:  MOVLW  1E
58D8:  MOVLB  6
58DA:  MOVWF  x31
58DC:  MOVLB  0
58DE:  CALL   126A
58E2:  MOVLB  5
58E4:  DECF   x0F,F
58E6:  MOVLB  4
....................             } 
....................       } 
....................          else 
58E8:  BRA    58EE
....................             {Flanco = 0;} 
58EA:  MOVLB  4
58EC:  BCF    x4C.0
....................              
....................       if(DOWN)//Si oprime hacia abajo 
58EE:  BSF    F92.1
58F0:  BTFSS  F80.1
58F2:  BRA    590E
....................       {  if(Flanco2 == 0)  
58F4:  BTFSC  x4C.2
58F6:  BRA    590C
....................             {Flanco2 = 1;delay_ms(30);Opcion++; 
58F8:  BSF    x4C.2
58FA:  MOVLW  1E
58FC:  MOVLB  6
58FE:  MOVWF  x31
5900:  MOVLB  0
5902:  CALL   126A
5906:  MOVLB  5
5908:  INCF   x0F,F
590A:  MOVLB  4
....................             }      
....................       } 
....................          else 
590C:  BRA    5910
....................             {Flanco2 = 0;}   
590E:  BCF    x4C.2
....................              
....................       if(RIGHT)//Si oprime SET 
5910:  BSF    F92.2
5912:  BTFSS  F80.2
5914:  BRA    5950
....................       {  if(Flanco1 == 0)  
5916:  BTFSC  x4C.1
5918:  BRA    594E
....................             {Flanco1 = 1;delay_ms(500);Menu=Opcion+30;glcd_fillScreen(OFF);Opcion=1;unidad=1; 
591A:  BSF    x4C.1
591C:  MOVLW  02
591E:  MOVLB  6
5920:  MOVWF  x30
5922:  MOVLW  FA
5924:  MOVWF  x31
5926:  MOVLB  0
5928:  CALL   126A
592C:  MOVLB  6
592E:  DECFSZ x30,F
5930:  BRA    5922
5932:  MOVLW  1E
5934:  MOVLB  5
5936:  ADDWF  x0F,W
5938:  MOVWF  x0D
593A:  MOVLB  6
593C:  CLRF   x31
593E:  MOVLB  0
5940:  CALL   20E2
5944:  MOVLW  01
5946:  MOVLB  5
5948:  MOVWF  x0F
594A:  MOVWF  x0E
594C:  MOVLB  4
....................             } 
....................       } 
....................          else 
594E:  BRA    5952
....................             {Flanco1 = 0;}   
5950:  BCF    x4C.1
....................              
....................       if(LEFT)//Si oprime boton de Toma. 
5952:  BSF    F92.3
5954:  BTFSS  F80.3
5956:  BRA    597E
....................         {delay_ms(700);Menu=3;glcd_fillscreen(OFF);} 
5958:  MOVLW  04
595A:  MOVLB  6
595C:  MOVWF  x30
595E:  MOVLW  AF
5960:  MOVWF  x31
5962:  MOVLB  0
5964:  CALL   126A
5968:  MOVLB  6
596A:  DECFSZ x30,F
596C:  BRA    595E
596E:  MOVLW  03
5970:  MOVLB  5
5972:  MOVWF  x0D
5974:  MOVLB  6
5976:  CLRF   x31
5978:  MOVLB  0
597A:  CALL   20E2
....................       if(Opcion>1) 
597E:  MOVLB  5
5980:  MOVF   x0F,W
5982:  SUBLW  01
5984:  BC    598A
....................       {Opcion=1;} 
5986:  MOVLW  01
5988:  MOVWF  x0F
....................       if(Opcion<1) 
598A:  MOVF   x0F,F
598C:  BNZ   5992
....................       {Opcion=1;} 
598E:  MOVLW  01
5990:  MOVWF  x0F
....................      
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==11){ //Menu de Purga. 
5992:  MOVF   x0D,W
5994:  SUBLW  0B
5996:  BTFSS  FD8.2
5998:  BRA    5D22
....................        
....................       strcpy(Menus.Letra,"T. Purga"); 
599A:  MOVLW  06
599C:  MOVWF  FEA
599E:  MOVLW  1A
59A0:  MOVWF  FE9
59A2:  MOVFF  FF2,630
59A6:  BCF    FF2.7
59A8:  MOVLW  00
59AA:  MOVLB  0
59AC:  CALL   1084
59B0:  TBLRD*-
59B2:  TBLRD*+
59B4:  MOVF   FF5,W
59B6:  MOVWF  FEE
59B8:  IORLW  00
59BA:  BNZ   59B2
59BC:  MOVLB  6
59BE:  BTFSC  x30.7
59C0:  BSF    FF2.7
....................       displayMenu(Menus.Letra,10,0,1,2); 
59C2:  MOVLW  06
59C4:  MOVWF  x31
59C6:  MOVLW  1A
59C8:  MOVWF  x30
59CA:  MOVLW  0A
59CC:  MOVWF  x32
59CE:  CLRF   x33
59D0:  MOVLW  01
59D2:  MOVWF  x34
59D4:  MOVLW  02
59D6:  MOVWF  x35
59D8:  MOVLB  0
59DA:  CALL   213C
....................        
....................       if(unidad==4) 
59DE:  MOVLB  5
59E0:  MOVF   x0E,W
59E2:  SUBLW  04
59E4:  BNZ   5A04
....................       {displayTiempo(Tpurgap[3],20,40,1,2);} 
59E6:  MOVFF  545,630
59EA:  MOVLW  14
59EC:  MOVLB  6
59EE:  MOVWF  x31
59F0:  MOVLW  28
59F2:  MOVWF  x32
59F4:  MOVLW  01
59F6:  MOVWF  x33
59F8:  MOVLW  02
59FA:  MOVWF  x34
59FC:  MOVLB  0
59FE:  CALL   2208
....................       else 
5A02:  BRA    5A1E
....................       {displayTiempo(Tpurgap[3],20,40,0,2);} 
5A04:  MOVFF  545,630
5A08:  MOVLW  14
5A0A:  MOVLB  6
5A0C:  MOVWF  x31
5A0E:  MOVLW  28
5A10:  MOVWF  x32
5A12:  CLRF   x33
5A14:  MOVLW  02
5A16:  MOVWF  x34
5A18:  MOVLB  0
5A1A:  CALL   2208
....................        
....................       if(unidad==3) 
5A1E:  MOVLB  5
5A20:  MOVF   x0E,W
5A22:  SUBLW  03
5A24:  BNZ   5A42
....................       {displayTiempo(Tpurgap[2],40,40,1,2);} 
5A26:  MOVFF  544,630
5A2A:  MOVLW  28
5A2C:  MOVLB  6
5A2E:  MOVWF  x31
5A30:  MOVWF  x32
5A32:  MOVLW  01
5A34:  MOVWF  x33
5A36:  MOVLW  02
5A38:  MOVWF  x34
5A3A:  MOVLB  0
5A3C:  CALL   2208
....................       else 
5A40:  BRA    5A5A
....................       {displayTiempo(Tpurgap[2],40,40,0,2);} 
5A42:  MOVFF  544,630
5A46:  MOVLW  28
5A48:  MOVLB  6
5A4A:  MOVWF  x31
5A4C:  MOVWF  x32
5A4E:  CLRF   x33
5A50:  MOVLW  02
5A52:  MOVWF  x34
5A54:  MOVLB  0
5A56:  CALL   2208
....................        
....................       if(unidad==2) 
5A5A:  MOVLB  5
5A5C:  MOVF   x0E,W
5A5E:  SUBLW  02
5A60:  BNZ   5A80
....................       {displayTiempo(Tpurgap[1],70,40,1,2);} 
5A62:  MOVFF  543,630
5A66:  MOVLW  46
5A68:  MOVLB  6
5A6A:  MOVWF  x31
5A6C:  MOVLW  28
5A6E:  MOVWF  x32
5A70:  MOVLW  01
5A72:  MOVWF  x33
5A74:  MOVLW  02
5A76:  MOVWF  x34
5A78:  MOVLB  0
5A7A:  CALL   2208
....................       else 
5A7E:  BRA    5A9A
....................       {displayTiempo(Tpurgap[1],70,40,0,2);} 
5A80:  MOVFF  543,630
5A84:  MOVLW  46
5A86:  MOVLB  6
5A88:  MOVWF  x31
5A8A:  MOVLW  28
5A8C:  MOVWF  x32
5A8E:  CLRF   x33
5A90:  MOVLW  02
5A92:  MOVWF  x34
5A94:  MOVLB  0
5A96:  CALL   2208
....................        
....................       if(unidad==1) 
5A9A:  MOVLB  5
5A9C:  DECFSZ x0E,W
5A9E:  BRA    5ABE
....................       {displayTiempo(Tpurgap[0],90,40,1,2);} 
5AA0:  MOVFF  542,630
5AA4:  MOVLW  5A
5AA6:  MOVLB  6
5AA8:  MOVWF  x31
5AAA:  MOVLW  28
5AAC:  MOVWF  x32
5AAE:  MOVLW  01
5AB0:  MOVWF  x33
5AB2:  MOVLW  02
5AB4:  MOVWF  x34
5AB6:  MOVLB  0
5AB8:  CALL   2208
....................       else 
5ABC:  BRA    5AD8
....................       {displayTiempo(Tpurgap[0],90,40,0,2);} 
5ABE:  MOVFF  542,630
5AC2:  MOVLW  5A
5AC4:  MOVLB  6
5AC6:  MOVWF  x31
5AC8:  MOVLW  28
5ACA:  MOVWF  x32
5ACC:  CLRF   x33
5ACE:  MOVLW  02
5AD0:  MOVWF  x34
5AD2:  MOVLB  0
5AD4:  CALL   2208
....................        
....................       glcd_text57(60, 42, Dos_puntos, 2, ON); 
5AD8:  MOVLW  3C
5ADA:  MOVLB  6
5ADC:  MOVWF  x47
5ADE:  MOVLW  2A
5AE0:  MOVWF  x48
5AE2:  MOVLW  04
5AE4:  MOVWF  x4A
5AE6:  MOVLW  77
5AE8:  MOVWF  x49
5AEA:  MOVLW  02
5AEC:  MOVWF  x4B
5AEE:  MOVLW  01
5AF0:  MOVWF  x4C
5AF2:  MOVLB  0
5AF4:  CALL   1D4A
....................           
....................          
....................       if(UP)//Si oprime hacia arriba 
5AF8:  BSF    F92.0
5AFA:  BTFSS  F80.0
5AFC:  BRA    5B2A
....................       {  if(Flanco == 0)  
5AFE:  MOVLB  4
5B00:  BTFSC  x4C.0
5B02:  BRA    5B28
....................             {Flanco = 1;delay_ms(30);Tpurgap[unidad-1]++; 
5B04:  BSF    x4C.0
5B06:  MOVLW  1E
5B08:  MOVLB  6
5B0A:  MOVWF  x31
5B0C:  MOVLB  0
5B0E:  CALL   126A
5B12:  MOVLW  01
5B14:  MOVLB  5
5B16:  SUBWF  x0E,W
5B18:  CLRF   03
5B1A:  ADDLW  42
5B1C:  MOVWF  FE9
5B1E:  MOVLW  05
5B20:  ADDWFC 03,W
5B22:  MOVWF  FEA
5B24:  INCF   FEF,F
5B26:  MOVLB  4
....................             } 
....................       } 
....................          else 
5B28:  BRA    5B2E
....................             {Flanco = 0;} 
5B2A:  MOVLB  4
5B2C:  BCF    x4C.0
....................              
....................       if(DOWN)//Si oprime hacia abajo 
5B2E:  BSF    F92.1
5B30:  BTFSS  F80.1
5B32:  BRA    5B5E
....................       {  if(Flanco2 == 0)  
5B34:  BTFSC  x4C.2
5B36:  BRA    5B5C
....................             {Flanco2 = 1;delay_ms(30);Tpurgap[unidad-1]--; 
5B38:  BSF    x4C.2
5B3A:  MOVLW  1E
5B3C:  MOVLB  6
5B3E:  MOVWF  x31
5B40:  MOVLB  0
5B42:  CALL   126A
5B46:  MOVLW  01
5B48:  MOVLB  5
5B4A:  SUBWF  x0E,W
5B4C:  CLRF   03
5B4E:  ADDLW  42
5B50:  MOVWF  FE9
5B52:  MOVLW  05
5B54:  ADDWFC 03,W
5B56:  MOVWF  FEA
5B58:  DECF   FEF,F
5B5A:  MOVLB  4
....................             }      
....................       } 
....................          else 
5B5C:  BRA    5B60
....................             {Flanco2 = 0;}   
5B5E:  BCF    x4C.2
....................              
....................       if(RIGHT)//Si oprime SET 
5B60:  BSF    F92.2
5B62:  BTFSS  F80.2
5B64:  BRA    5B80
....................       {  if(Flanco1 == 0)  
5B66:  BTFSC  x4C.1
5B68:  BRA    5B7E
....................             {Flanco1 = 1;delay_ms(30);unidad--; 
5B6A:  BSF    x4C.1
5B6C:  MOVLW  1E
5B6E:  MOVLB  6
5B70:  MOVWF  x31
5B72:  MOVLB  0
5B74:  CALL   126A
5B78:  MOVLB  5
5B7A:  DECF   x0E,F
5B7C:  MOVLB  4
....................             } 
....................       } 
....................          else 
5B7E:  BRA    5B82
....................             {Flanco1 = 0;}   
5B80:  BCF    x4C.1
....................              
....................       if(LEFT)//Si oprime boton de Toma. 
5B82:  BSF    F92.3
5B84:  BTFSS  F80.3
5B86:  BRA    5C58
....................         {delay_ms(700);Menu=3;glcd_fillscreen(OFF);Opcion=1; 
5B88:  MOVLW  04
5B8A:  MOVLB  6
5B8C:  MOVWF  x30
5B8E:  MOVLW  AF
5B90:  MOVWF  x31
5B92:  MOVLB  0
5B94:  CALL   126A
5B98:  MOVLB  6
5B9A:  DECFSZ x30,F
5B9C:  BRA    5B8E
5B9E:  MOVLW  03
5BA0:  MOVLB  5
5BA2:  MOVWF  x0D
5BA4:  MOVLB  6
5BA6:  CLRF   x31
5BA8:  MOVLB  0
5BAA:  CALL   20E2
5BAE:  MOVLW  01
5BB0:  MOVLB  5
5BB2:  MOVWF  x0F
....................          write_eeprom(4,Tpurgap[0]);write_eeprom(5,Tpurgap[1]);write_eeprom(6,Tpurgap[2]);write_eeprom(7,Tpurgap[3]);} 
5BB4:  MOVLW  04
5BB6:  MOVWF  FA9
5BB8:  MOVFF  542,FA8
5BBC:  BCF    FA6.6
5BBE:  BCF    FA6.7
5BC0:  BSF    FA6.2
5BC2:  MOVF   FF2,W
5BC4:  MOVWF  00
5BC6:  BCF    FF2.7
5BC8:  MOVLB  F
5BCA:  MOVLW  55
5BCC:  MOVWF  FA7
5BCE:  MOVLW  AA
5BD0:  MOVWF  FA7
5BD2:  BSF    FA6.1
5BD4:  BTFSC  FA6.1
5BD6:  BRA    5BD4
5BD8:  BCF    FA6.2
5BDA:  MOVF   00,W
5BDC:  IORWF  FF2,F
5BDE:  MOVLW  05
5BE0:  MOVWF  FA9
5BE2:  MOVFF  543,FA8
5BE6:  BCF    FA6.6
5BE8:  BCF    FA6.7
5BEA:  BSF    FA6.2
5BEC:  MOVF   FF2,W
5BEE:  MOVWF  00
5BF0:  BCF    FF2.7
5BF2:  MOVLW  55
5BF4:  MOVWF  FA7
5BF6:  MOVLW  AA
5BF8:  MOVWF  FA7
5BFA:  BSF    FA6.1
5BFC:  BTFSC  FA6.1
5BFE:  BRA    5BFC
5C00:  BCF    FA6.2
5C02:  MOVF   00,W
5C04:  IORWF  FF2,F
5C06:  MOVLW  06
5C08:  MOVWF  FA9
5C0A:  MOVFF  544,FA8
5C0E:  BCF    FA6.6
5C10:  BCF    FA6.7
5C12:  BSF    FA6.2
5C14:  MOVF   FF2,W
5C16:  MOVWF  00
5C18:  BCF    FF2.7
5C1A:  MOVLW  55
5C1C:  MOVWF  FA7
5C1E:  MOVLW  AA
5C20:  MOVWF  FA7
5C22:  BSF    FA6.1
5C24:  BTFSC  FA6.1
5C26:  BRA    5C24
5C28:  BCF    FA6.2
5C2A:  MOVF   00,W
5C2C:  IORWF  FF2,F
5C2E:  MOVLW  07
5C30:  MOVWF  FA9
5C32:  MOVFF  545,FA8
5C36:  BCF    FA6.6
5C38:  BCF    FA6.7
5C3A:  BSF    FA6.2
5C3C:  MOVF   FF2,W
5C3E:  MOVWF  00
5C40:  BCF    FF2.7
5C42:  MOVLW  55
5C44:  MOVWF  FA7
5C46:  MOVLW  AA
5C48:  MOVWF  FA7
5C4A:  BSF    FA6.1
5C4C:  BTFSC  FA6.1
5C4E:  BRA    5C4C
5C50:  BCF    FA6.2
5C52:  MOVF   00,W
5C54:  IORWF  FF2,F
5C56:  MOVLB  4
....................        
....................       for(i=0;i<4;i++) 
5C58:  CLRF   x38
5C5A:  MOVF   x38,W
5C5C:  SUBLW  03
5C5E:  BNC   5CB2
....................       { 
....................          if(Tpurgap[i]>9) 
5C60:  CLRF   03
5C62:  MOVF   x38,W
5C64:  ADDLW  42
5C66:  MOVWF  FE9
5C68:  MOVLW  05
5C6A:  ADDWFC 03,W
5C6C:  MOVWF  FEA
5C6E:  BTFSC  FEF.7
5C70:  BRA    5C88
5C72:  MOVF   FEF,W
5C74:  SUBLW  09
5C76:  BC    5C88
....................          {Tpurgap[i]=0;} 
5C78:  CLRF   03
5C7A:  MOVF   x38,W
5C7C:  ADDLW  42
5C7E:  MOVWF  FE9
5C80:  MOVLW  05
5C82:  ADDWFC 03,W
5C84:  MOVWF  FEA
5C86:  CLRF   FEF
....................           
....................          if(Tpurgap[i]<0) 
5C88:  CLRF   03
5C8A:  MOVF   x38,W
5C8C:  ADDLW  42
5C8E:  MOVWF  FE9
5C90:  MOVLW  05
5C92:  ADDWFC 03,W
5C94:  MOVWF  FEA
5C96:  BTFSC  FEF.7
5C98:  BRA    5C9C
5C9A:  BRA    5CAE
....................          {Tpurgap[i]=9;} 
5C9C:  CLRF   03
5C9E:  MOVF   x38,W
5CA0:  ADDLW  42
5CA2:  MOVWF  FE9
5CA4:  MOVLW  05
5CA6:  ADDWFC 03,W
5CA8:  MOVWF  FEA
5CAA:  MOVLW  09
5CAC:  MOVWF  FEF
....................       }       
5CAE:  INCF   x38,F
5CB0:  BRA    5C5A
....................       for(i=1;i<4;i++) 
5CB2:  MOVLW  01
5CB4:  MOVWF  x38
5CB6:  MOVF   x38,W
5CB8:  SUBLW  03
5CBA:  BNC   5D10
....................       { 
....................          if(Tpurgap[i]>5) 
5CBC:  CLRF   03
5CBE:  MOVF   x38,W
5CC0:  ADDLW  42
5CC2:  MOVWF  FE9
5CC4:  MOVLW  05
5CC6:  ADDWFC 03,W
5CC8:  MOVWF  FEA
5CCA:  BTFSC  FEF.7
5CCC:  BRA    5CE4
5CCE:  MOVF   FEF,W
5CD0:  SUBLW  05
5CD2:  BC    5CE4
....................          {Tpurgap[i]=0;} 
5CD4:  CLRF   03
5CD6:  MOVF   x38,W
5CD8:  ADDLW  42
5CDA:  MOVWF  FE9
5CDC:  MOVLW  05
5CDE:  ADDWFC 03,W
5CE0:  MOVWF  FEA
5CE2:  CLRF   FEF
....................           
....................          if(Tpurgap[i]<0) 
5CE4:  CLRF   03
5CE6:  MOVF   x38,W
5CE8:  ADDLW  42
5CEA:  MOVWF  FE9
5CEC:  MOVLW  05
5CEE:  ADDWFC 03,W
5CF0:  MOVWF  FEA
5CF2:  BTFSC  FEF.7
5CF4:  BRA    5CF8
5CF6:  BRA    5D0A
....................          {Tpurgap[i]=5;} 
5CF8:  CLRF   03
5CFA:  MOVF   x38,W
5CFC:  ADDLW  42
5CFE:  MOVWF  FE9
5D00:  MOVLW  05
5D02:  ADDWFC 03,W
5D04:  MOVWF  FEA
5D06:  MOVLW  05
5D08:  MOVWF  FEF
....................         i++;  
5D0A:  INCF   x38,F
....................       } 
5D0C:  INCF   x38,F
5D0E:  BRA    5CB6
....................       if(unidad<1) 
5D10:  MOVLB  5
5D12:  MOVF   x0E,F
5D14:  BNZ   5D1A
....................       {unidad=4;} 
5D16:  MOVLW  04
5D18:  MOVWF  x0E
....................       if(Opcion<1) 
5D1A:  MOVF   x0F,F
5D1C:  BNZ   5D22
....................       {Opcion=4;} 
5D1E:  MOVLW  04
5D20:  MOVWF  x0F
....................      
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==12){ //Menu de Tempo UV. 
5D22:  MOVF   x0D,W
5D24:  SUBLW  0C
5D26:  BTFSS  FD8.2
5D28:  BRA    60BE
....................        
....................       strcpy(Menus.Letra,"T. UV"); 
5D2A:  MOVLW  06
5D2C:  MOVWF  FEA
5D2E:  MOVLW  1A
5D30:  MOVWF  FE9
5D32:  MOVFF  FF2,630
5D36:  BCF    FF2.7
5D38:  MOVLW  00
5D3A:  MOVLB  0
5D3C:  CALL   10A8
5D40:  TBLRD*-
5D42:  TBLRD*+
5D44:  MOVF   FF5,W
5D46:  MOVWF  FEE
5D48:  IORLW  00
5D4A:  BNZ   5D42
5D4C:  MOVLB  6
5D4E:  BTFSC  x30.7
5D50:  BSF    FF2.7
....................       displayMenu(Menus.Letra,30,0,1,2); 
5D52:  MOVLW  06
5D54:  MOVWF  x31
5D56:  MOVLW  1A
5D58:  MOVWF  x30
5D5A:  MOVLW  1E
5D5C:  MOVWF  x32
5D5E:  CLRF   x33
5D60:  MOVLW  01
5D62:  MOVWF  x34
5D64:  MOVLW  02
5D66:  MOVWF  x35
5D68:  MOVLB  0
5D6A:  CALL   213C
....................        
....................       if(unidad==4) 
5D6E:  MOVLB  5
5D70:  MOVF   x0E,W
5D72:  SUBLW  04
5D74:  BNZ   5D94
....................       {displayTiempo(Tempouvp[3],20,40,1,2);} 
5D76:  MOVFF  559,630
5D7A:  MOVLW  14
5D7C:  MOVLB  6
5D7E:  MOVWF  x31
5D80:  MOVLW  28
5D82:  MOVWF  x32
5D84:  MOVLW  01
5D86:  MOVWF  x33
5D88:  MOVLW  02
5D8A:  MOVWF  x34
5D8C:  MOVLB  0
5D8E:  CALL   2208
....................       else 
5D92:  BRA    5DAE
....................       {displayTiempo(Tempouvp[3],20,40,0,2);} 
5D94:  MOVFF  559,630
5D98:  MOVLW  14
5D9A:  MOVLB  6
5D9C:  MOVWF  x31
5D9E:  MOVLW  28
5DA0:  MOVWF  x32
5DA2:  CLRF   x33
5DA4:  MOVLW  02
5DA6:  MOVWF  x34
5DA8:  MOVLB  0
5DAA:  CALL   2208
....................        
....................       if(unidad==3) 
5DAE:  MOVLB  5
5DB0:  MOVF   x0E,W
5DB2:  SUBLW  03
5DB4:  BNZ   5DD2
....................       {displayTiempo(Tempouvp[2],40,40,1,2);} 
5DB6:  MOVFF  558,630
5DBA:  MOVLW  28
5DBC:  MOVLB  6
5DBE:  MOVWF  x31
5DC0:  MOVWF  x32
5DC2:  MOVLW  01
5DC4:  MOVWF  x33
5DC6:  MOVLW  02
5DC8:  MOVWF  x34
5DCA:  MOVLB  0
5DCC:  CALL   2208
....................       else 
5DD0:  BRA    5DEA
....................       {displayTiempo(Tempouvp[2],40,40,0,2);} 
5DD2:  MOVFF  558,630
5DD6:  MOVLW  28
5DD8:  MOVLB  6
5DDA:  MOVWF  x31
5DDC:  MOVWF  x32
5DDE:  CLRF   x33
5DE0:  MOVLW  02
5DE2:  MOVWF  x34
5DE4:  MOVLB  0
5DE6:  CALL   2208
....................        
....................       if(unidad==2) 
5DEA:  MOVLB  5
5DEC:  MOVF   x0E,W
5DEE:  SUBLW  02
5DF0:  BNZ   5E10
....................       {displayTiempo(Tempouvp[1],70,40,1,2);} 
5DF2:  MOVFF  557,630
5DF6:  MOVLW  46
5DF8:  MOVLB  6
5DFA:  MOVWF  x31
5DFC:  MOVLW  28
5DFE:  MOVWF  x32
5E00:  MOVLW  01
5E02:  MOVWF  x33
5E04:  MOVLW  02
5E06:  MOVWF  x34
5E08:  MOVLB  0
5E0A:  CALL   2208
....................       else 
5E0E:  BRA    5E2A
....................       {displayTiempo(Tempouvp[1],70,40,0,2);} 
5E10:  MOVFF  557,630
5E14:  MOVLW  46
5E16:  MOVLB  6
5E18:  MOVWF  x31
5E1A:  MOVLW  28
5E1C:  MOVWF  x32
5E1E:  CLRF   x33
5E20:  MOVLW  02
5E22:  MOVWF  x34
5E24:  MOVLB  0
5E26:  CALL   2208
....................        
....................       if(unidad==1) 
5E2A:  MOVLB  5
5E2C:  DECFSZ x0E,W
5E2E:  BRA    5E4E
....................       {displayTiempo(Tempouvp[0],90,40,1,2);} 
5E30:  MOVFF  556,630
5E34:  MOVLW  5A
5E36:  MOVLB  6
5E38:  MOVWF  x31
5E3A:  MOVLW  28
5E3C:  MOVWF  x32
5E3E:  MOVLW  01
5E40:  MOVWF  x33
5E42:  MOVLW  02
5E44:  MOVWF  x34
5E46:  MOVLB  0
5E48:  CALL   2208
....................       else 
5E4C:  BRA    5E68
....................       {displayTiempo(Tempouvp[0],90,40,0,2);} 
5E4E:  MOVFF  556,630
5E52:  MOVLW  5A
5E54:  MOVLB  6
5E56:  MOVWF  x31
5E58:  MOVLW  28
5E5A:  MOVWF  x32
5E5C:  CLRF   x33
5E5E:  MOVLW  02
5E60:  MOVWF  x34
5E62:  MOVLB  0
5E64:  CALL   2208
....................        
....................       glcd_text57(60, 42, Dos_puntos, 2, ON); 
5E68:  MOVLW  3C
5E6A:  MOVLB  6
5E6C:  MOVWF  x47
5E6E:  MOVLW  2A
5E70:  MOVWF  x48
5E72:  MOVLW  04
5E74:  MOVWF  x4A
5E76:  MOVLW  77
5E78:  MOVWF  x49
5E7A:  MOVLW  02
5E7C:  MOVWF  x4B
5E7E:  MOVLW  01
5E80:  MOVWF  x4C
5E82:  MOVLB  0
5E84:  CALL   1D4A
....................           
....................          
....................       if(UP)//Si oprime hacia arriba 
5E88:  BSF    F92.0
5E8A:  BTFSS  F80.0
5E8C:  BRA    5EBA
....................       {  if(Flanco == 0)  
5E8E:  MOVLB  4
5E90:  BTFSC  x4C.0
5E92:  BRA    5EB8
....................             {Flanco = 1;delay_ms(30);Tempouvp[unidad-1]++; 
5E94:  BSF    x4C.0
5E96:  MOVLW  1E
5E98:  MOVLB  6
5E9A:  MOVWF  x31
5E9C:  MOVLB  0
5E9E:  CALL   126A
5EA2:  MOVLW  01
5EA4:  MOVLB  5
5EA6:  SUBWF  x0E,W
5EA8:  CLRF   03
5EAA:  ADDLW  56
5EAC:  MOVWF  FE9
5EAE:  MOVLW  05
5EB0:  ADDWFC 03,W
5EB2:  MOVWF  FEA
5EB4:  INCF   FEF,F
5EB6:  MOVLB  4
....................             } 
....................       } 
....................          else 
5EB8:  BRA    5EBE
....................             {Flanco = 0;} 
5EBA:  MOVLB  4
5EBC:  BCF    x4C.0
....................              
....................       if(DOWN)//Si oprime hacia abajo 
5EBE:  BSF    F92.1
5EC0:  BTFSS  F80.1
5EC2:  BRA    5EEE
....................       {  if(Flanco2 == 0)  
5EC4:  BTFSC  x4C.2
5EC6:  BRA    5EEC
....................             {Flanco2 = 1;delay_ms(30);Tempouvp[unidad-1]--; 
5EC8:  BSF    x4C.2
5ECA:  MOVLW  1E
5ECC:  MOVLB  6
5ECE:  MOVWF  x31
5ED0:  MOVLB  0
5ED2:  CALL   126A
5ED6:  MOVLW  01
5ED8:  MOVLB  5
5EDA:  SUBWF  x0E,W
5EDC:  CLRF   03
5EDE:  ADDLW  56
5EE0:  MOVWF  FE9
5EE2:  MOVLW  05
5EE4:  ADDWFC 03,W
5EE6:  MOVWF  FEA
5EE8:  DECF   FEF,F
5EEA:  MOVLB  4
....................             }      
....................       } 
....................          else 
5EEC:  BRA    5EF0
....................             {Flanco2 = 0;}   
5EEE:  BCF    x4C.2
....................              
....................       if(RIGHT)//Si oprime SET 
5EF0:  BSF    F92.2
5EF2:  BTFSS  F80.2
5EF4:  BRA    5F10
....................       {  if(Flanco1 == 0)  
5EF6:  BTFSC  x4C.1
5EF8:  BRA    5F0E
....................             {Flanco1 = 1;delay_ms(30);unidad--; 
5EFA:  BSF    x4C.1
5EFC:  MOVLW  1E
5EFE:  MOVLB  6
5F00:  MOVWF  x31
5F02:  MOVLB  0
5F04:  CALL   126A
5F08:  MOVLB  5
5F0A:  DECF   x0E,F
5F0C:  MOVLB  4
....................             } 
....................       } 
....................          else 
5F0E:  BRA    5F12
....................             {Flanco1 = 0;}   
5F10:  BCF    x4C.1
....................              
....................       if(LEFT)//Si oprime boton de Toma. 
5F12:  BSF    F92.3
5F14:  BTFSS  F80.3
5F16:  BRA    5FF2
....................         {delay_ms(700);Menu=3;glcd_fillscreen(OFF);Opcion=1; 
5F18:  MOVLW  04
5F1A:  MOVLB  6
5F1C:  MOVWF  x30
5F1E:  MOVLW  AF
5F20:  MOVWF  x31
5F22:  MOVLB  0
5F24:  CALL   126A
5F28:  MOVLB  6
5F2A:  DECFSZ x30,F
5F2C:  BRA    5F1E
5F2E:  MOVLW  03
5F30:  MOVLB  5
5F32:  MOVWF  x0D
5F34:  MOVLB  6
5F36:  CLRF   x31
5F38:  MOVLB  0
5F3A:  CALL   20E2
5F3E:  MOVLW  01
5F40:  MOVLB  5
5F42:  MOVWF  x0F
....................       write_eeprom(21,Tempouvp[0]);write_eeprom(22,Tempouvp[1]);write_eeprom(23,Tempouvp[2]);write_eeprom(24,Tempouvp[3]); 
5F44:  MOVLW  15
5F46:  MOVWF  FA9
5F48:  MOVFF  556,FA8
5F4C:  BCF    FA6.6
5F4E:  BCF    FA6.7
5F50:  BSF    FA6.2
5F52:  MOVF   FF2,W
5F54:  MOVWF  00
5F56:  BCF    FF2.7
5F58:  MOVLB  F
5F5A:  MOVLW  55
5F5C:  MOVWF  FA7
5F5E:  MOVLW  AA
5F60:  MOVWF  FA7
5F62:  BSF    FA6.1
5F64:  BTFSC  FA6.1
5F66:  BRA    5F64
5F68:  BCF    FA6.2
5F6A:  MOVF   00,W
5F6C:  IORWF  FF2,F
5F6E:  MOVLW  16
5F70:  MOVWF  FA9
5F72:  MOVFF  557,FA8
5F76:  BCF    FA6.6
5F78:  BCF    FA6.7
5F7A:  BSF    FA6.2
5F7C:  MOVF   FF2,W
5F7E:  MOVWF  00
5F80:  BCF    FF2.7
5F82:  MOVLW  55
5F84:  MOVWF  FA7
5F86:  MOVLW  AA
5F88:  MOVWF  FA7
5F8A:  BSF    FA6.1
5F8C:  BTFSC  FA6.1
5F8E:  BRA    5F8C
5F90:  BCF    FA6.2
5F92:  MOVF   00,W
5F94:  IORWF  FF2,F
5F96:  MOVLW  17
5F98:  MOVWF  FA9
5F9A:  MOVFF  558,FA8
5F9E:  BCF    FA6.6
5FA0:  BCF    FA6.7
5FA2:  BSF    FA6.2
5FA4:  MOVF   FF2,W
5FA6:  MOVWF  00
5FA8:  BCF    FF2.7
5FAA:  MOVLW  55
5FAC:  MOVWF  FA7
5FAE:  MOVLW  AA
5FB0:  MOVWF  FA7
5FB2:  BSF    FA6.1
5FB4:  BTFSC  FA6.1
5FB6:  BRA    5FB4
5FB8:  BCF    FA6.2
5FBA:  MOVF   00,W
5FBC:  IORWF  FF2,F
5FBE:  MOVLW  18
5FC0:  MOVWF  FA9
5FC2:  MOVFF  559,FA8
5FC6:  BCF    FA6.6
5FC8:  BCF    FA6.7
5FCA:  BSF    FA6.2
5FCC:  MOVF   FF2,W
5FCE:  MOVWF  00
5FD0:  BCF    FF2.7
5FD2:  MOVLW  55
5FD4:  MOVWF  FA7
5FD6:  MOVLW  AA
5FD8:  MOVWF  FA7
5FDA:  BSF    FA6.1
5FDC:  BTFSC  FA6.1
5FDE:  BRA    5FDC
5FE0:  BCF    FA6.2
5FE2:  MOVF   00,W
5FE4:  IORWF  FF2,F
....................       Tempouv[0]=0;Tempouv[1]=0;Tempouv[2]=0;Tempouv[3]=0;} 
5FE6:  MOVLB  5
5FE8:  CLRF   x52
5FEA:  CLRF   x53
5FEC:  CLRF   x54
5FEE:  CLRF   x55
5FF0:  MOVLB  4
....................              
....................       for(i=0;i<3;i++) 
5FF2:  CLRF   x38
5FF4:  MOVF   x38,W
5FF6:  SUBLW  02
5FF8:  BNC   604E
....................       { 
....................          if(Tempouvp[i]>9) 
5FFA:  CLRF   03
5FFC:  MOVF   x38,W
5FFE:  ADDLW  56
6000:  MOVWF  FE9
6002:  MOVLW  05
6004:  ADDWFC 03,W
6006:  MOVWF  FEA
6008:  BTFSC  FEF.7
600A:  BRA    6022
600C:  MOVF   FEF,W
600E:  SUBLW  09
6010:  BC    6022
....................          {Tempouvp[i]=0;} 
6012:  CLRF   03
6014:  MOVF   x38,W
6016:  ADDLW  56
6018:  MOVWF  FE9
601A:  MOVLW  05
601C:  ADDWFC 03,W
601E:  MOVWF  FEA
6020:  CLRF   FEF
....................           
....................          if(Tempouvp[i]<0) 
6022:  CLRF   03
6024:  MOVF   x38,W
6026:  ADDLW  56
6028:  MOVWF  FE9
602A:  MOVLW  05
602C:  ADDWFC 03,W
602E:  MOVWF  FEA
6030:  BTFSC  FEF.7
6032:  BRA    6036
6034:  BRA    6048
....................          {Tempouvp[i]=9;} 
6036:  CLRF   03
6038:  MOVF   x38,W
603A:  ADDLW  56
603C:  MOVWF  FE9
603E:  MOVLW  05
6040:  ADDWFC 03,W
6042:  MOVWF  FEA
6044:  MOVLW  09
6046:  MOVWF  FEF
....................          i++; 
6048:  INCF   x38,F
....................       }       
604A:  INCF   x38,F
604C:  BRA    5FF4
....................       for(i=1;i<4;i++) 
604E:  MOVLW  01
6050:  MOVWF  x38
6052:  MOVF   x38,W
6054:  SUBLW  03
6056:  BNC   60AC
....................       { 
....................          if(Tempouvp[i]>5) 
6058:  CLRF   03
605A:  MOVF   x38,W
605C:  ADDLW  56
605E:  MOVWF  FE9
6060:  MOVLW  05
6062:  ADDWFC 03,W
6064:  MOVWF  FEA
6066:  BTFSC  FEF.7
6068:  BRA    6080
606A:  MOVF   FEF,W
606C:  SUBLW  05
606E:  BC    6080
....................          {Tempouvp[i]=0;} 
6070:  CLRF   03
6072:  MOVF   x38,W
6074:  ADDLW  56
6076:  MOVWF  FE9
6078:  MOVLW  05
607A:  ADDWFC 03,W
607C:  MOVWF  FEA
607E:  CLRF   FEF
....................           
....................          if(Tempouvp[i]<0) 
6080:  CLRF   03
6082:  MOVF   x38,W
6084:  ADDLW  56
6086:  MOVWF  FE9
6088:  MOVLW  05
608A:  ADDWFC 03,W
608C:  MOVWF  FEA
608E:  BTFSC  FEF.7
6090:  BRA    6094
6092:  BRA    60A6
....................          {Tempouvp[i]=5;} 
6094:  CLRF   03
6096:  MOVF   x38,W
6098:  ADDLW  56
609A:  MOVWF  FE9
609C:  MOVLW  05
609E:  ADDWFC 03,W
60A0:  MOVWF  FEA
60A2:  MOVLW  05
60A4:  MOVWF  FEF
....................         i++;  
60A6:  INCF   x38,F
....................       }       
60A8:  INCF   x38,F
60AA:  BRA    6052
....................       if(unidad<1) 
60AC:  MOVLB  5
60AE:  MOVF   x0E,F
60B0:  BNZ   60B6
....................       {unidad=4;} 
60B2:  MOVLW  04
60B4:  MOVWF  x0E
....................       if(Opcion<1) 
60B6:  MOVF   x0F,F
60B8:  BNZ   60BE
....................       {Opcion=4;} 
60BA:  MOVLW  04
60BC:  MOVWF  x0F
....................      
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==13){ //Menu de Sensor de Flujo. 
60BE:  MOVF   x0D,W
60C0:  SUBLW  0D
60C2:  BTFSS  FD8.2
60C4:  BRA    66D2
....................        
....................       if(Ajuste1>10.0) 
60C6:  MOVLB  6
60C8:  CLRF   x38
60CA:  CLRF   x37
60CC:  MOVLW  20
60CE:  MOVWF  x36
60D0:  MOVLW  82
60D2:  MOVWF  x35
60D4:  MOVFF  59D,63C
60D8:  MOVFF  59C,63B
60DC:  MOVFF  59B,63A
60E0:  MOVFF  59A,639
60E4:  MOVLB  0
60E6:  CALL   238E
60EA:  BNC   60F8
....................          Ajuste1=0.0; 
60EC:  MOVLB  5
60EE:  CLRF   x9D
60F0:  CLRF   x9C
60F2:  CLRF   x9B
60F4:  CLRF   x9A
60F6:  MOVLB  0
....................        
....................       strcpy(Menus.Letra,"Sensor de Flujo"); 
60F8:  MOVLW  06
60FA:  MOVWF  FEA
60FC:  MOVLW  1A
60FE:  MOVWF  FE9
6100:  MOVFF  FF2,630
6104:  BCF    FF2.7
6106:  MOVLW  00
6108:  CALL   1006
610C:  TBLRD*-
610E:  TBLRD*+
6110:  MOVF   FF5,W
6112:  MOVWF  FEE
6114:  IORLW  00
6116:  BNZ   610E
6118:  MOVLB  6
611A:  BTFSC  x30.7
611C:  BSF    FF2.7
....................       displayMenu(Menus.Letra,10,0,1,1); 
611E:  MOVLW  06
6120:  MOVWF  x31
6122:  MOVLW  1A
6124:  MOVWF  x30
6126:  MOVLW  0A
6128:  MOVWF  x32
612A:  CLRF   x33
612C:  MOVLW  01
612E:  MOVWF  x34
6130:  MOVWF  x35
6132:  MOVLB  0
6134:  CALL   213C
....................        
....................       glcd_text57(0, 12, ZF, 1, ON); 
6138:  MOVLB  6
613A:  CLRF   x47
613C:  MOVLW  0C
613E:  MOVWF  x48
6140:  MOVLW  04
6142:  MOVWF  x4A
6144:  MOVLW  C1
6146:  MOVWF  x49
6148:  MOVLW  01
614A:  MOVWF  x4B
614C:  MOVWF  x4C
614E:  MOVLB  0
6150:  CALL   1D4A
....................        
....................       glcd_text57(0, 20, ZA, 1, ON); 
6154:  MOVLB  6
6156:  CLRF   x47
6158:  MOVLW  14
615A:  MOVWF  x48
615C:  MOVLW  04
615E:  MOVWF  x4A
6160:  MOVLW  CF
6162:  MOVWF  x49
6164:  MOVLW  01
6166:  MOVWF  x4B
6168:  MOVWF  x4C
616A:  MOVLB  0
616C:  CALL   1D4A
....................        
....................       glcd_text57(0, 30, AJ, 1, ON);            
6170:  MOVLB  6
6172:  CLRF   x47
6174:  MOVLW  1E
6176:  MOVWF  x48
6178:  MOVLW  04
617A:  MOVWF  x4A
617C:  MOVLW  D7
617E:  MOVWF  x49
6180:  MOVLW  01
6182:  MOVWF  x4B
6184:  MOVWF  x4C
6186:  MOVLB  0
6188:  CALL   1D4A
....................        
....................       displayfloat(zero_actual,44,20,0,1); 
618C:  MOVFF  609,637
6190:  MOVFF  608,636
6194:  MOVFF  607,635
6198:  MOVFF  606,634
619C:  MOVLW  2C
619E:  MOVLB  6
61A0:  MOVWF  x38
61A2:  MOVLW  14
61A4:  MOVWF  x39
61A6:  CLRF   x3A
61A8:  MOVLW  01
61AA:  MOVWF  x3B
61AC:  MOVLB  0
61AE:  CALL   2E28
....................       displayfloat(Ajuste1,44,30,0,1); 
61B2:  MOVFF  59D,637
61B6:  MOVFF  59C,636
61BA:  MOVFF  59B,635
61BE:  MOVFF  59A,634
61C2:  MOVLW  2C
61C4:  MOVLB  6
61C6:  MOVWF  x38
61C8:  MOVLW  1E
61CA:  MOVWF  x39
61CC:  CLRF   x3A
61CE:  MOVLW  01
61D0:  MOVWF  x3B
61D2:  MOVLB  0
61D4:  CALL   2E28
....................       displayfloat(Inflow_adc,0,40,0,1); 
61D8:  MOVFF  52D,636
61DC:  MOVFF  52C,635
61E0:  CALL   1294
61E4:  MOVFF  00,630
61E8:  MOVFF  01,631
61EC:  MOVFF  02,632
61F0:  MOVFF  03,633
61F4:  MOVFF  03,637
61F8:  MOVFF  02,636
61FC:  MOVFF  01,635
6200:  MOVFF  00,634
6204:  MOVLB  6
6206:  CLRF   x38
6208:  MOVLW  28
620A:  MOVWF  x39
620C:  CLRF   x3A
620E:  MOVLW  01
6210:  MOVWF  x3B
6212:  MOVLB  0
6214:  CALL   2E28
....................       displayfloat(Diferencia,0,50,0,1); 
6218:  MOVFF  575,637
621C:  MOVFF  574,636
6220:  MOVFF  573,635
6224:  MOVFF  572,634
6228:  MOVLB  6
622A:  CLRF   x38
622C:  MOVLW  32
622E:  MOVWF  x39
6230:  CLRF   x3A
6232:  MOVLW  01
6234:  MOVWF  x3B
6236:  MOVLB  0
6238:  CALL   2E28
....................        
....................       if(UP)//Si oprime hacia arriba 
623C:  BSF    F92.0
623E:  BTFSS  F80.0
6240:  BRA    6288
....................       {   
....................          delay_ms(30);Ajuste1+=0.01; 
6242:  MOVLW  1E
6244:  MOVLB  6
6246:  MOVWF  x31
6248:  MOVLB  0
624A:  CALL   126A
624E:  BCF    FD8.1
6250:  MOVFF  59D,63C
6254:  MOVFF  59C,63B
6258:  MOVFF  59B,63A
625C:  MOVFF  59A,639
6260:  MOVLW  0A
6262:  MOVLB  6
6264:  MOVWF  x40
6266:  MOVLW  D7
6268:  MOVWF  x3F
626A:  MOVLW  23
626C:  MOVWF  x3E
626E:  MOVLW  78
6270:  MOVWF  x3D
6272:  MOVLB  0
6274:  CALL   1428
6278:  MOVFF  03,59D
627C:  MOVFF  02,59C
6280:  MOVFF  01,59B
6284:  MOVFF  00,59A
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
6288:  BSF    F92.1
628A:  BTFSS  F80.1
628C:  BRA    62D4
....................       {    
....................          delay_ms(30);Ajuste1-=0.01;                
628E:  MOVLW  1E
6290:  MOVLB  6
6292:  MOVWF  x31
6294:  MOVLB  0
6296:  CALL   126A
629A:  BSF    FD8.1
629C:  MOVFF  59D,63C
62A0:  MOVFF  59C,63B
62A4:  MOVFF  59B,63A
62A8:  MOVFF  59A,639
62AC:  MOVLW  0A
62AE:  MOVLB  6
62B0:  MOVWF  x40
62B2:  MOVLW  D7
62B4:  MOVWF  x3F
62B6:  MOVLW  23
62B8:  MOVWF  x3E
62BA:  MOVLW  78
62BC:  MOVWF  x3D
62BE:  MOVLB  0
62C0:  CALL   1428
62C4:  MOVFF  03,59D
62C8:  MOVFF  02,59C
62CC:  MOVFF  01,59B
62D0:  MOVFF  00,59A
....................       } 
....................              
....................       if(RIGHT)//Si oprime SET 
62D4:  BSF    F92.2
62D6:  BTFSS  F80.2
62D8:  BRA    6586
....................       {   
....................          zero_actual=Inflow_adc; 
62DA:  MOVFF  52D,636
62DE:  MOVFF  52C,635
62E2:  CALL   1294
62E6:  MOVFF  03,609
62EA:  MOVFF  02,608
62EE:  MOVFF  01,607
62F2:  MOVFF  00,606
....................          Diferencia=zero_fabrica-Inflow_adc; 
62F6:  MOVFF  52D,636
62FA:  MOVFF  52C,635
62FE:  CALL   1294
6302:  BSF    FD8.1
6304:  MOVFF  605,63C
6308:  MOVFF  604,63B
630C:  MOVFF  603,63A
6310:  MOVFF  602,639
6314:  MOVFF  03,640
6318:  MOVFF  02,63F
631C:  MOVFF  01,63E
6320:  MOVFF  00,63D
6324:  CALL   1428
6328:  MOVFF  03,575
632C:  MOVFF  02,574
6330:  MOVFF  01,573
6334:  MOVFF  00,572
....................              
....................          if(Diferencia>=0) 
6338:  MOVLB  6
633A:  CLRF   x38
633C:  CLRF   x37
633E:  CLRF   x36
6340:  CLRF   x35
6342:  MOVFF  575,63C
6346:  MOVFF  574,63B
634A:  MOVFF  573,63A
634E:  MOVFF  572,639
6352:  MOVLB  0
6354:  CALL   238E
6358:  BC    635C
635A:  BNZ   638C
....................          { 
....................             negativo=10;write_eeprom(50,negativo); 
635C:  MOVLW  0A
635E:  MOVLB  5
6360:  MOVWF  x11
6362:  MOVLW  32
6364:  MOVWF  FA9
6366:  MOVFF  511,FA8
636A:  BCF    FA6.6
636C:  BCF    FA6.7
636E:  BSF    FA6.2
6370:  MOVF   FF2,W
6372:  MOVWF  00
6374:  BCF    FF2.7
6376:  MOVLB  F
6378:  MOVLW  55
637A:  MOVWF  FA7
637C:  MOVLW  AA
637E:  MOVWF  FA7
6380:  BSF    FA6.1
6382:  BTFSC  FA6.1
6384:  BRA    6382
6386:  BCF    FA6.2
6388:  MOVF   00,W
638A:  IORWF  FF2,F
....................          } 
....................          if(Diferencia<0) 
638C:  MOVFF  575,638
6390:  MOVFF  574,637
6394:  MOVFF  573,636
6398:  MOVFF  572,635
639C:  MOVLB  6
639E:  CLRF   x3C
63A0:  CLRF   x3B
63A2:  CLRF   x3A
63A4:  CLRF   x39
63A6:  MOVLB  0
63A8:  CALL   238E
63AC:  BNC   63E0
....................          { 
....................             negativo=20;write_eeprom(50,negativo); 
63AE:  MOVLW  14
63B0:  MOVLB  5
63B2:  MOVWF  x11
63B4:  MOVLW  32
63B6:  MOVWF  FA9
63B8:  MOVFF  511,FA8
63BC:  BCF    FA6.6
63BE:  BCF    FA6.7
63C0:  BSF    FA6.2
63C2:  MOVF   FF2,W
63C4:  MOVWF  00
63C6:  BCF    FF2.7
63C8:  MOVLB  F
63CA:  MOVLW  55
63CC:  MOVWF  FA7
63CE:  MOVLW  AA
63D0:  MOVWF  FA7
63D2:  BSF    FA6.1
63D4:  BTFSC  FA6.1
63D6:  BRA    63D4
63D8:  BCF    FA6.2
63DA:  MOVF   00,W
63DC:  IORWF  FF2,F
63DE:  MOVLB  0
....................          } 
....................          Diferencia=abs(Diferencia); 
63E0:  MOVFF  572,00
63E4:  MOVFF  573,01
63E8:  MOVFF  574,02
63EC:  MOVFF  575,03
63F0:  BCF    01.7
63F2:  MOVFF  575,575
63F6:  MOVFF  574,574
63FA:  MOVFF  01,573
63FE:  MOVFF  572,572
....................          Temporal1=(int16)Diferencia; 
6402:  MOVFF  575,633
6406:  MOVFF  574,632
640A:  MOVFF  573,631
640E:  MOVFF  572,630
6412:  CALL   16A0
6416:  MOVFF  02,535
641A:  MOVFF  01,534
....................          write_eeprom(60,make8(Temporal1,0)); 
641E:  MOVFF  534,630
6422:  MOVLW  3C
6424:  MOVWF  FA9
6426:  MOVFF  630,FA8
642A:  BCF    FA6.6
642C:  BCF    FA6.7
642E:  BSF    FA6.2
6430:  MOVF   FF2,W
6432:  MOVWF  00
6434:  BCF    FF2.7
6436:  MOVLB  F
6438:  MOVLW  55
643A:  MOVWF  FA7
643C:  MOVLW  AA
643E:  MOVWF  FA7
6440:  BSF    FA6.1
6442:  BTFSC  FA6.1
6444:  BRA    6442
6446:  BCF    FA6.2
6448:  MOVF   00,W
644A:  IORWF  FF2,F
....................          write_eeprom(61,make8(Temporal1,1));//Guardar valor de Setpoint en eeprom 
644C:  MOVFF  535,630
6450:  MOVLW  3D
6452:  MOVWF  FA9
6454:  MOVFF  535,FA8
6458:  BCF    FA6.6
645A:  BCF    FA6.7
645C:  BSF    FA6.2
645E:  MOVFF  FF2,00
6462:  BCF    FF2.7
6464:  MOVLW  55
6466:  MOVWF  FA7
6468:  MOVLW  AA
646A:  MOVWF  FA7
646C:  BSF    FA6.1
646E:  BTFSC  FA6.1
6470:  BRA    646E
6472:  BCF    FA6.2
6474:  MOVF   00,W
6476:  IORWF  FF2,F
....................           
....................          Temporal=zero_actual; 
6478:  MOVFF  609,5A9
647C:  MOVFF  608,5A8
6480:  MOVFF  607,5A7
6484:  MOVFF  606,5A6
....................          Entero=(int)zero_actual; 
6488:  MOVFF  609,633
648C:  MOVFF  608,632
6490:  MOVFF  607,631
6494:  MOVFF  606,630
6498:  MOVLB  0
649A:  CALL   16A0
649E:  MOVFF  01,51A
....................          Temporal=Temporal-Entero; 
64A2:  MOVLB  6
64A4:  CLRF   x36
64A6:  MOVFF  51A,635
64AA:  MOVLB  0
64AC:  CALL   1294
64B0:  BSF    FD8.1
64B2:  MOVFF  5A9,63C
64B6:  MOVFF  5A8,63B
64BA:  MOVFF  5A7,63A
64BE:  MOVFF  5A6,639
64C2:  MOVFF  03,640
64C6:  MOVFF  02,63F
64CA:  MOVFF  01,63E
64CE:  MOVFF  00,63D
64D2:  CALL   1428
64D6:  MOVFF  03,5A9
64DA:  MOVFF  02,5A8
64DE:  MOVFF  01,5A7
64E2:  MOVFF  00,5A6
....................          Temporal2=Temporal*100.0; 
64E6:  MOVFF  5A9,655
64EA:  MOVFF  5A8,654
64EE:  MOVFF  5A7,653
64F2:  MOVFF  5A6,652
64F6:  MOVLB  6
64F8:  CLRF   x59
64FA:  CLRF   x58
64FC:  MOVLW  48
64FE:  MOVWF  x57
6500:  MOVLW  85
6502:  MOVWF  x56
6504:  MOVLB  0
6506:  CALL   16DC
650A:  MOVFF  03,5AD
650E:  MOVFF  02,5AC
6512:  MOVFF  01,5AB
6516:  MOVFF  00,5AA
....................          Decimal1=(int8)Temporal2; 
651A:  MOVFF  5AD,633
651E:  MOVFF  5AC,632
6522:  MOVFF  5AB,631
6526:  MOVFF  5AA,630
652A:  CALL   16A0
652E:  MOVFF  01,51B
....................          write_eeprom(29,Entero);write_eeprom(30,Decimal1); 
6532:  MOVLW  1D
6534:  MOVWF  FA9
6536:  MOVFF  51A,FA8
653A:  BCF    FA6.6
653C:  BCF    FA6.7
653E:  BSF    FA6.2
6540:  MOVF   FF2,W
6542:  MOVWF  00
6544:  BCF    FF2.7
6546:  MOVLB  F
6548:  MOVLW  55
654A:  MOVWF  FA7
654C:  MOVLW  AA
654E:  MOVWF  FA7
6550:  BSF    FA6.1
6552:  BTFSC  FA6.1
6554:  BRA    6552
6556:  BCF    FA6.2
6558:  MOVF   00,W
655A:  IORWF  FF2,F
655C:  MOVLW  1E
655E:  MOVWF  FA9
6560:  MOVFF  51B,FA8
6564:  BCF    FA6.6
6566:  BCF    FA6.7
6568:  BSF    FA6.2
656A:  MOVF   FF2,W
656C:  MOVWF  00
656E:  BCF    FF2.7
6570:  MOVLW  55
6572:  MOVWF  FA7
6574:  MOVLW  AA
6576:  MOVWF  FA7
6578:  BSF    FA6.1
657A:  BTFSC  FA6.1
657C:  BRA    657A
657E:  BCF    FA6.2
6580:  MOVF   00,W
6582:  IORWF  FF2,F
....................       } 
....................          else 
6584:  BRA    658C
....................             {Flanco1 = 0;}   
6586:  MOVLB  4
6588:  BCF    x4C.1
658A:  MOVLB  F
....................              
....................       if(LEFT)//Si oprime boton de Toma. 
658C:  BSF    F92.3
658E:  BTFSS  F80.3
6590:  BRA    66CA
....................       { 
....................          delay_ms(700);Menu=3;glcd_fillscreen(OFF);Opcion=1; 
6592:  MOVLW  04
6594:  MOVLB  6
6596:  MOVWF  x30
6598:  MOVLW  AF
659A:  MOVWF  x31
659C:  MOVLB  0
659E:  CALL   126A
65A2:  MOVLB  6
65A4:  DECFSZ x30,F
65A6:  BRA    6598
65A8:  MOVLW  03
65AA:  MOVLB  5
65AC:  MOVWF  x0D
65AE:  MOVLB  6
65B0:  CLRF   x31
65B2:  MOVLB  0
65B4:  CALL   20E2
65B8:  MOVLW  01
65BA:  MOVLB  5
65BC:  MOVWF  x0F
....................          Temporal=Ajuste1; 
65BE:  MOVFF  59D,5A9
65C2:  MOVFF  59C,5A8
65C6:  MOVFF  59B,5A7
65CA:  MOVFF  59A,5A6
....................          Entero=(int)Ajuste1; 
65CE:  MOVFF  59D,633
65D2:  MOVFF  59C,632
65D6:  MOVFF  59B,631
65DA:  MOVFF  59A,630
65DE:  MOVLB  0
65E0:  CALL   16A0
65E4:  MOVFF  01,51A
....................          Temporal=Temporal-Entero; 
65E8:  MOVLB  6
65EA:  CLRF   x36
65EC:  MOVFF  51A,635
65F0:  MOVLB  0
65F2:  CALL   1294
65F6:  BSF    FD8.1
65F8:  MOVFF  5A9,63C
65FC:  MOVFF  5A8,63B
6600:  MOVFF  5A7,63A
6604:  MOVFF  5A6,639
6608:  MOVFF  03,640
660C:  MOVFF  02,63F
6610:  MOVFF  01,63E
6614:  MOVFF  00,63D
6618:  CALL   1428
661C:  MOVFF  03,5A9
6620:  MOVFF  02,5A8
6624:  MOVFF  01,5A7
6628:  MOVFF  00,5A6
....................          Temporal2=Temporal*100.0; 
662C:  MOVFF  5A9,655
6630:  MOVFF  5A8,654
6634:  MOVFF  5A7,653
6638:  MOVFF  5A6,652
663C:  MOVLB  6
663E:  CLRF   x59
6640:  CLRF   x58
6642:  MOVLW  48
6644:  MOVWF  x57
6646:  MOVLW  85
6648:  MOVWF  x56
664A:  MOVLB  0
664C:  CALL   16DC
6650:  MOVFF  03,5AD
6654:  MOVFF  02,5AC
6658:  MOVFF  01,5AB
665C:  MOVFF  00,5AA
....................          Decimal1=(int8)Temporal2; 
6660:  MOVFF  5AD,633
6664:  MOVFF  5AC,632
6668:  MOVFF  5AB,631
666C:  MOVFF  5AA,630
6670:  CALL   16A0
6674:  MOVFF  01,51B
....................          write_eeprom(25,Entero);write_eeprom(26,Decimal1); 
6678:  MOVLW  19
667A:  MOVWF  FA9
667C:  MOVFF  51A,FA8
6680:  BCF    FA6.6
6682:  BCF    FA6.7
6684:  BSF    FA6.2
6686:  MOVF   FF2,W
6688:  MOVWF  00
668A:  BCF    FF2.7
668C:  MOVLB  F
668E:  MOVLW  55
6690:  MOVWF  FA7
6692:  MOVLW  AA
6694:  MOVWF  FA7
6696:  BSF    FA6.1
6698:  BTFSC  FA6.1
669A:  BRA    6698
669C:  BCF    FA6.2
669E:  MOVF   00,W
66A0:  IORWF  FF2,F
66A2:  MOVLW  1A
66A4:  MOVWF  FA9
66A6:  MOVFF  51B,FA8
66AA:  BCF    FA6.6
66AC:  BCF    FA6.7
66AE:  BSF    FA6.2
66B0:  MOVF   FF2,W
66B2:  MOVWF  00
66B4:  BCF    FF2.7
66B6:  MOVLW  55
66B8:  MOVWF  FA7
66BA:  MOVLW  AA
66BC:  MOVWF  FA7
66BE:  BSF    FA6.1
66C0:  BTFSC  FA6.1
66C2:  BRA    66C0
66C4:  BCF    FA6.2
66C6:  MOVF   00,W
66C8:  IORWF  FF2,F
....................       } 
....................        
....................       Lectura_Esclavos(); 
66CA:  MOVLB  0
66CC:  CALL   29BE
66D0:  MOVLB  5
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==14){ //Menu de Sensor de Presión. 
66D2:  MOVF   x0D,W
66D4:  SUBLW  0E
66D6:  BTFSS  FD8.2
66D8:  BRA    6ACE
....................        
....................       if(Ajuste2>10.0) 
66DA:  MOVLB  6
66DC:  CLRF   x38
66DE:  CLRF   x37
66E0:  MOVLW  20
66E2:  MOVWF  x36
66E4:  MOVLW  82
66E6:  MOVWF  x35
66E8:  MOVFF  5A1,63C
66EC:  MOVFF  5A0,63B
66F0:  MOVFF  59F,63A
66F4:  MOVFF  59E,639
66F8:  MOVLB  0
66FA:  CALL   238E
66FE:  BNC   670C
....................          Ajuste2=0.0; 
6700:  MOVLB  5
6702:  CLRF   xA1
6704:  CLRF   xA0
6706:  CLRF   x9F
6708:  CLRF   x9E
670A:  MOVLB  0
....................        
....................       strcpy(Menus.Letra,"Sensor de Presion"); 
670C:  MOVLW  06
670E:  MOVWF  FEA
6710:  MOVLW  1A
6712:  MOVWF  FE9
6714:  MOVFF  FF2,630
6718:  BCF    FF2.7
671A:  MOVLW  00
671C:  CALL   1030
6720:  TBLRD*-
6722:  TBLRD*+
6724:  MOVF   FF5,W
6726:  MOVWF  FEE
6728:  IORLW  00
672A:  BNZ   6722
672C:  MOVLB  6
672E:  BTFSC  x30.7
6730:  BSF    FF2.7
....................       displayMenu(Menus.Letra,10,0,1,1); 
6732:  MOVLW  06
6734:  MOVWF  x31
6736:  MOVLW  1A
6738:  MOVWF  x30
673A:  MOVLW  0A
673C:  MOVWF  x32
673E:  CLRF   x33
6740:  MOVLW  01
6742:  MOVWF  x34
6744:  MOVWF  x35
6746:  MOVLB  0
6748:  CALL   213C
....................        
....................       glcd_text57(0, 12, ZFP, 1, ON); 
674C:  MOVLB  6
674E:  CLRF   x47
6750:  MOVLW  0C
6752:  MOVWF  x48
6754:  MOVLW  04
6756:  MOVWF  x4A
6758:  MOVLW  EF
675A:  MOVWF  x49
675C:  MOVLW  01
675E:  MOVWF  x4B
6760:  MOVWF  x4C
6762:  MOVLB  0
6764:  CALL   1D4A
....................        
....................       glcd_text57(0, 20, ZA, 1, ON); 
6768:  MOVLB  6
676A:  CLRF   x47
676C:  MOVLW  14
676E:  MOVWF  x48
6770:  MOVLW  04
6772:  MOVWF  x4A
6774:  MOVLW  CF
6776:  MOVWF  x49
6778:  MOVLW  01
677A:  MOVWF  x4B
677C:  MOVWF  x4C
677E:  MOVLB  0
6780:  CALL   1D4A
....................        
....................       glcd_text57(0, 30, AJ, 1, ON);            
6784:  MOVLB  6
6786:  CLRF   x47
6788:  MOVLW  1E
678A:  MOVWF  x48
678C:  MOVLW  04
678E:  MOVWF  x4A
6790:  MOVLW  D7
6792:  MOVWF  x49
6794:  MOVLW  01
6796:  MOVWF  x4B
6798:  MOVWF  x4C
679A:  MOVLB  0
679C:  CALL   1D4A
....................        
....................       displayfloat(G,44,20,0,1); 
67A0:  MOVFF  615,637
67A4:  MOVFF  614,636
67A8:  MOVFF  613,635
67AC:  MOVFF  612,634
67B0:  MOVLW  2C
67B2:  MOVLB  6
67B4:  MOVWF  x38
67B6:  MOVLW  14
67B8:  MOVWF  x39
67BA:  CLRF   x3A
67BC:  MOVLW  01
67BE:  MOVWF  x3B
67C0:  MOVLB  0
67C2:  CALL   2E28
....................       displayfloat(Ajuste2,44,30,0,1); 
67C6:  MOVFF  5A1,637
67CA:  MOVFF  5A0,636
67CE:  MOVFF  59F,635
67D2:  MOVFF  59E,634
67D6:  MOVLW  2C
67D8:  MOVLB  6
67DA:  MOVWF  x38
67DC:  MOVLW  1E
67DE:  MOVWF  x39
67E0:  CLRF   x3A
67E2:  MOVLW  01
67E4:  MOVWF  x3B
67E6:  MOVLB  0
67E8:  CALL   2E28
....................       displayfloat(Filtro_DownFlow_adc,0,40,0,1); 
67EC:  MOVFF  533,636
67F0:  MOVFF  532,635
67F4:  CALL   1294
67F8:  MOVFF  00,630
67FC:  MOVFF  01,631
6800:  MOVFF  02,632
6804:  MOVFF  03,633
6808:  MOVFF  03,637
680C:  MOVFF  02,636
6810:  MOVFF  01,635
6814:  MOVFF  00,634
6818:  MOVLB  6
681A:  CLRF   x38
681C:  MOVLW  28
681E:  MOVWF  x39
6820:  CLRF   x3A
6822:  MOVLW  01
6824:  MOVWF  x3B
6826:  MOVLB  0
6828:  CALL   2E28
....................       displayfloat(Filtro_DownFlow,0,50,0,1); 
682C:  MOVFF  571,637
6830:  MOVFF  570,636
6834:  MOVFF  56F,635
6838:  MOVFF  56E,634
683C:  MOVLB  6
683E:  CLRF   x38
6840:  MOVLW  32
6842:  MOVWF  x39
6844:  CLRF   x3A
6846:  MOVLW  01
6848:  MOVWF  x3B
684A:  MOVLB  0
684C:  CALL   2E28
....................        
....................       if(UP)//Si oprime hacia arriba 
6850:  BSF    F92.0
6852:  BTFSS  F80.0
6854:  BRA    689C
....................       {   
....................          delay_ms(30);Ajuste2+=0.01; 
6856:  MOVLW  1E
6858:  MOVLB  6
685A:  MOVWF  x31
685C:  MOVLB  0
685E:  CALL   126A
6862:  BCF    FD8.1
6864:  MOVFF  5A1,63C
6868:  MOVFF  5A0,63B
686C:  MOVFF  59F,63A
6870:  MOVFF  59E,639
6874:  MOVLW  0A
6876:  MOVLB  6
6878:  MOVWF  x40
687A:  MOVLW  D7
687C:  MOVWF  x3F
687E:  MOVLW  23
6880:  MOVWF  x3E
6882:  MOVLW  78
6884:  MOVWF  x3D
6886:  MOVLB  0
6888:  CALL   1428
688C:  MOVFF  03,5A1
6890:  MOVFF  02,5A0
6894:  MOVFF  01,59F
6898:  MOVFF  00,59E
....................       } 
....................              
....................       if(DOWN)//Si oprime hacia abajo 
689C:  BSF    F92.1
689E:  BTFSS  F80.1
68A0:  BRA    68E8
....................       {   
....................          delay_ms(30);Ajuste2-=0.01; 
68A2:  MOVLW  1E
68A4:  MOVLB  6
68A6:  MOVWF  x31
68A8:  MOVLB  0
68AA:  CALL   126A
68AE:  BSF    FD8.1
68B0:  MOVFF  5A1,63C
68B4:  MOVFF  5A0,63B
68B8:  MOVFF  59F,63A
68BC:  MOVFF  59E,639
68C0:  MOVLW  0A
68C2:  MOVLB  6
68C4:  MOVWF  x40
68C6:  MOVLW  D7
68C8:  MOVWF  x3F
68CA:  MOVLW  23
68CC:  MOVWF  x3E
68CE:  MOVLW  78
68D0:  MOVWF  x3D
68D2:  MOVLB  0
68D4:  CALL   1428
68D8:  MOVFF  03,5A1
68DC:  MOVFF  02,5A0
68E0:  MOVFF  01,59F
68E4:  MOVFF  00,59E
....................       } 
....................              
....................       if(RIGHT)//Si oprime SET 
68E8:  BSF    F92.2
68EA:  BTFSS  F80.2
68EC:  BRA    6982
....................       {   
....................          G=Filtro_Downflow_adc; 
68EE:  MOVFF  533,636
68F2:  MOVFF  532,635
68F6:  CALL   1294
68FA:  MOVFF  03,615
68FE:  MOVFF  02,614
6902:  MOVFF  01,613
6906:  MOVFF  00,612
....................          G16=(int16)G; 
690A:  MOVFF  615,633
690E:  MOVFF  614,632
6912:  MOVFF  613,631
6916:  MOVFF  612,630
691A:  CALL   16A0
691E:  MOVFF  02,53D
6922:  MOVFF  01,53C
....................          G_l=G16; G_h=(G16>>8); 
6926:  MOVFF  53C,513
692A:  MOVFF  53D,514
....................              
....................          write_eeprom(62,G_l);write_eeprom(63,G_h);//Guardar valor de Setpoint en eeprom 
692E:  MOVLW  3E
6930:  MOVWF  FA9
6932:  MOVFF  513,FA8
6936:  BCF    FA6.6
6938:  BCF    FA6.7
693A:  BSF    FA6.2
693C:  MOVF   FF2,W
693E:  MOVWF  00
6940:  BCF    FF2.7
6942:  MOVLB  F
6944:  MOVLW  55
6946:  MOVWF  FA7
6948:  MOVLW  AA
694A:  MOVWF  FA7
694C:  BSF    FA6.1
694E:  BTFSC  FA6.1
6950:  BRA    694E
6952:  BCF    FA6.2
6954:  MOVF   00,W
6956:  IORWF  FF2,F
6958:  MOVLW  3F
695A:  MOVWF  FA9
695C:  MOVFF  514,FA8
6960:  BCF    FA6.6
6962:  BCF    FA6.7
6964:  BSF    FA6.2
6966:  MOVF   FF2,W
6968:  MOVWF  00
696A:  BCF    FF2.7
696C:  MOVLW  55
696E:  MOVWF  FA7
6970:  MOVLW  AA
6972:  MOVWF  FA7
6974:  BSF    FA6.1
6976:  BTFSC  FA6.1
6978:  BRA    6976
697A:  BCF    FA6.2
697C:  MOVF   00,W
697E:  IORWF  FF2,F
....................       } 
....................          else 
6980:  BRA    6988
....................             {Flanco1 = 0;}   
6982:  MOVLB  4
6984:  BCF    x4C.1
6986:  MOVLB  F
....................              
....................       if(LEFT)//Si oprime boton de Toma. 
6988:  BSF    F92.3
698A:  BTFSS  F80.3
698C:  BRA    6AC6
....................       {          
....................          delay_ms(700);Menu=3;glcd_fillscreen(OFF);Opcion=1; 
698E:  MOVLW  04
6990:  MOVLB  6
6992:  MOVWF  x30
6994:  MOVLW  AF
6996:  MOVWF  x31
6998:  MOVLB  0
699A:  CALL   126A
699E:  MOVLB  6
69A0:  DECFSZ x30,F
69A2:  BRA    6994
69A4:  MOVLW  03
69A6:  MOVLB  5
69A8:  MOVWF  x0D
69AA:  MOVLB  6
69AC:  CLRF   x31
69AE:  MOVLB  0
69B0:  CALL   20E2
69B4:  MOVLW  01
69B6:  MOVLB  5
69B8:  MOVWF  x0F
....................          Temporal=Ajuste2; 
69BA:  MOVFF  5A1,5A9
69BE:  MOVFF  5A0,5A8
69C2:  MOVFF  59F,5A7
69C6:  MOVFF  59E,5A6
....................          Entero=(int)Ajuste2; 
69CA:  MOVFF  5A1,633
69CE:  MOVFF  5A0,632
69D2:  MOVFF  59F,631
69D6:  MOVFF  59E,630
69DA:  MOVLB  0
69DC:  CALL   16A0
69E0:  MOVFF  01,51A
....................          Temporal=Temporal-Entero; 
69E4:  MOVLB  6
69E6:  CLRF   x36
69E8:  MOVFF  51A,635
69EC:  MOVLB  0
69EE:  CALL   1294
69F2:  BSF    FD8.1
69F4:  MOVFF  5A9,63C
69F8:  MOVFF  5A8,63B
69FC:  MOVFF  5A7,63A
6A00:  MOVFF  5A6,639
6A04:  MOVFF  03,640
6A08:  MOVFF  02,63F
6A0C:  MOVFF  01,63E
6A10:  MOVFF  00,63D
6A14:  CALL   1428
6A18:  MOVFF  03,5A9
6A1C:  MOVFF  02,5A8
6A20:  MOVFF  01,5A7
6A24:  MOVFF  00,5A6
....................          Temporal2=Temporal*100.0; 
6A28:  MOVFF  5A9,655
6A2C:  MOVFF  5A8,654
6A30:  MOVFF  5A7,653
6A34:  MOVFF  5A6,652
6A38:  MOVLB  6
6A3A:  CLRF   x59
6A3C:  CLRF   x58
6A3E:  MOVLW  48
6A40:  MOVWF  x57
6A42:  MOVLW  85
6A44:  MOVWF  x56
6A46:  MOVLB  0
6A48:  CALL   16DC
6A4C:  MOVFF  03,5AD
6A50:  MOVFF  02,5AC
6A54:  MOVFF  01,5AB
6A58:  MOVFF  00,5AA
....................          Decimal1=(int8)Temporal2; 
6A5C:  MOVFF  5AD,633
6A60:  MOVFF  5AC,632
6A64:  MOVFF  5AB,631
6A68:  MOVFF  5AA,630
6A6C:  CALL   16A0
6A70:  MOVFF  01,51B
....................          write_eeprom(27,Entero);write_eeprom(28,Decimal1); 
6A74:  MOVLW  1B
6A76:  MOVWF  FA9
6A78:  MOVFF  51A,FA8
6A7C:  BCF    FA6.6
6A7E:  BCF    FA6.7
6A80:  BSF    FA6.2
6A82:  MOVF   FF2,W
6A84:  MOVWF  00
6A86:  BCF    FF2.7
6A88:  MOVLB  F
6A8A:  MOVLW  55
6A8C:  MOVWF  FA7
6A8E:  MOVLW  AA
6A90:  MOVWF  FA7
6A92:  BSF    FA6.1
6A94:  BTFSC  FA6.1
6A96:  BRA    6A94
6A98:  BCF    FA6.2
6A9A:  MOVF   00,W
6A9C:  IORWF  FF2,F
6A9E:  MOVLW  1C
6AA0:  MOVWF  FA9
6AA2:  MOVFF  51B,FA8
6AA6:  BCF    FA6.6
6AA8:  BCF    FA6.7
6AAA:  BSF    FA6.2
6AAC:  MOVF   FF2,W
6AAE:  MOVWF  00
6AB0:  BCF    FF2.7
6AB2:  MOVLW  55
6AB4:  MOVWF  FA7
6AB6:  MOVLW  AA
6AB8:  MOVWF  FA7
6ABA:  BSF    FA6.1
6ABC:  BTFSC  FA6.1
6ABE:  BRA    6ABC
6AC0:  BCF    FA6.2
6AC2:  MOVF   00,W
6AC4:  IORWF  FF2,F
....................       } 
....................        
....................       Lectura_Esclavos(); 
6AC6:  MOVLB  0
6AC8:  CALL   29BE
6ACC:  MOVLB  5
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==5){ //Menu de Clave. 
6ACE:  MOVF   x0D,W
6AD0:  SUBLW  05
6AD2:  BTFSS  FD8.2
6AD4:  BRA    6ED8
....................        
....................        
....................       displayContrasena(Contrasena[0],20,30,1);displayContrasena(Contrasena[1],40,30,0); 
6AD6:  MOVFF  55E,632
6ADA:  MOVLW  14
6ADC:  MOVLB  6
6ADE:  MOVWF  x33
6AE0:  MOVLW  1E
6AE2:  MOVWF  x34
6AE4:  MOVLW  01
6AE6:  MOVWF  x35
6AE8:  MOVLB  0
6AEA:  CALL   202C
6AEE:  MOVFF  55F,632
6AF2:  MOVLW  28
6AF4:  MOVLB  6
6AF6:  MOVWF  x33
6AF8:  MOVLW  1E
6AFA:  MOVWF  x34
6AFC:  CLRF   x35
6AFE:  MOVLB  0
6B00:  CALL   202C
....................       displayContrasena(Contrasena[2],60,30,0);displayContrasena(Contrasena[0],80,30,0); 
6B04:  MOVFF  560,632
6B08:  MOVLW  3C
6B0A:  MOVLB  6
6B0C:  MOVWF  x33
6B0E:  MOVLW  1E
6B10:  MOVWF  x34
6B12:  CLRF   x35
6B14:  MOVLB  0
6B16:  CALL   202C
6B1A:  MOVFF  55E,632
6B1E:  MOVLW  50
6B20:  MOVLB  6
6B22:  MOVWF  x33
6B24:  MOVLW  1E
6B26:  MOVWF  x34
6B28:  CLRF   x35
6B2A:  MOVLB  0
6B2C:  CALL   202C
....................       strcpy(Menus.Letra,"Clave"); 
6B30:  MOVLW  06
6B32:  MOVWF  FEA
6B34:  MOVLW  1A
6B36:  MOVWF  FE9
6B38:  MOVFF  FF2,630
6B3C:  BCF    FF2.7
6B3E:  MOVLW  00
6B40:  CALL   0EEE
6B44:  TBLRD*-
6B46:  TBLRD*+
6B48:  MOVF   FF5,W
6B4A:  MOVWF  FEE
6B4C:  IORLW  00
6B4E:  BNZ   6B46
6B50:  MOVLB  6
6B52:  BTFSC  x30.7
6B54:  BSF    FF2.7
....................       displayMenu(Menus.Letra,20,0,1,3); 
6B56:  MOVLW  06
6B58:  MOVWF  x31
6B5A:  MOVLW  1A
6B5C:  MOVWF  x30
6B5E:  MOVLW  14
6B60:  MOVWF  x32
6B62:  CLRF   x33
6B64:  MOVLW  01
6B66:  MOVWF  x34
6B68:  MOVLW  03
6B6A:  MOVWF  x35
6B6C:  MOVLB  0
6B6E:  CALL   213C
....................          
....................       if(UP)//Si oprime hacia arriba 
6B72:  BSF    F92.0
6B74:  BTFSS  F80.0
6B76:  BRA    6C52
....................       {  if(Flanco == 0)  
6B78:  MOVLB  4
6B7A:  BTFSC  x4C.0
6B7C:  BRA    6C50
....................             {Flanco = 1;delay_ms(30); 
6B7E:  BSF    x4C.0
6B80:  MOVLW  1E
6B82:  MOVLB  6
6B84:  MOVWF  x31
6B86:  MOVLB  0
6B88:  CALL   126A
....................             for(i=1;i<=4;i++) 
6B8C:  MOVLW  01
6B8E:  MOVLB  4
6B90:  MOVWF  x38
6B92:  MOVF   x38,W
6B94:  SUBLW  04
6B96:  BNC   6C50
....................                { 
....................                   if(unidad==i) 
6B98:  MOVF   x38,W
6B9A:  MOVLB  5
6B9C:  SUBWF  x0E,W
6B9E:  BNZ   6C16
....................                   {Contrasena[i-1]++; 
6BA0:  MOVLW  01
6BA2:  MOVLB  4
6BA4:  SUBWF  x38,W
6BA6:  CLRF   03
6BA8:  ADDLW  5E
6BAA:  MOVWF  FE9
6BAC:  MOVLW  05
6BAE:  ADDWFC 03,W
6BB0:  MOVWF  FEA
6BB2:  INCF   FEF,F
....................                   if(Contrasena[i-1]>9) 
6BB4:  MOVLW  01
6BB6:  SUBWF  x38,W
6BB8:  CLRF   03
6BBA:  ADDLW  5E
6BBC:  MOVWF  FE9
6BBE:  MOVLW  05
6BC0:  ADDWFC 03,W
6BC2:  MOVWF  FEA
6BC4:  BTFSC  FEF.7
6BC6:  BRA    6BE0
6BC8:  MOVF   FEF,W
6BCA:  SUBLW  09
6BCC:  BC    6BE0
....................                         {Contrasena[i-1]=0;} 
6BCE:  MOVLW  01
6BD0:  SUBWF  x38,W
6BD2:  CLRF   03
6BD4:  ADDLW  5E
6BD6:  MOVWF  FE9
6BD8:  MOVLW  05
6BDA:  ADDWFC 03,W
6BDC:  MOVWF  FEA
6BDE:  CLRF   FEF
....................                   displayContrasena(Contrasena[i-1],i*20,30,1);} 
6BE0:  MOVLW  01
6BE2:  SUBWF  x38,W
6BE4:  CLRF   03
6BE6:  ADDLW  5E
6BE8:  MOVWF  FE9
6BEA:  MOVLW  05
6BEC:  ADDWFC 03,W
6BEE:  MOVWF  FEA
6BF0:  MOVFF  FEF,630
6BF4:  MOVF   x38,W
6BF6:  MULLW  14
6BF8:  MOVFF  FF3,631
6BFC:  MOVLB  6
6BFE:  MOVFF  630,632
6C02:  MOVFF  631,633
6C06:  MOVLW  1E
6C08:  MOVWF  x34
6C0A:  MOVLW  01
6C0C:  MOVWF  x35
6C0E:  MOVLB  0
6C10:  CALL   202C
....................                   else 
6C14:  BRA    6C4A
....................                   {displayContrasena(Contrasena[i-1],i*20,30,0);} 
6C16:  MOVLW  01
6C18:  MOVLB  4
6C1A:  SUBWF  x38,W
6C1C:  CLRF   03
6C1E:  ADDLW  5E
6C20:  MOVWF  FE9
6C22:  MOVLW  05
6C24:  ADDWFC 03,W
6C26:  MOVWF  FEA
6C28:  MOVFF  FEF,630
6C2C:  MOVF   x38,W
6C2E:  MULLW  14
6C30:  MOVFF  FF3,631
6C34:  MOVLB  6
6C36:  MOVFF  630,632
6C3A:  MOVFF  631,633
6C3E:  MOVLW  1E
6C40:  MOVWF  x34
6C42:  CLRF   x35
6C44:  MOVLB  0
6C46:  CALL   202C
....................                } 
6C4A:  MOVLB  4
6C4C:  INCF   x38,F
6C4E:  BRA    6B92
....................             } 
....................       } 
....................          else 
6C50:  BRA    6C56
....................             {Flanco = 0;} 
6C52:  MOVLB  4
6C54:  BCF    x4C.0
....................              
....................       if(DOWN)//Si oprime hacia abajo 
6C56:  BSF    F92.1
6C58:  BTFSS  F80.1
6C5A:  BRA    6D32
....................       {  if(Flanco2 == 0)  
6C5C:  BTFSC  x4C.2
6C5E:  BRA    6D30
....................             {Flanco2 = 1;delay_ms(30); 
6C60:  BSF    x4C.2
6C62:  MOVLW  1E
6C64:  MOVLB  6
6C66:  MOVWF  x31
6C68:  MOVLB  0
6C6A:  CALL   126A
....................                for(i=1;i<=4;i++) 
6C6E:  MOVLW  01
6C70:  MOVLB  4
6C72:  MOVWF  x38
6C74:  MOVF   x38,W
6C76:  SUBLW  04
6C78:  BNC   6D30
....................                { 
....................                   if(unidad==i) 
6C7A:  MOVF   x38,W
6C7C:  MOVLB  5
6C7E:  SUBWF  x0E,W
6C80:  BNZ   6CF6
....................                   {Contrasena[i-1]--;  
6C82:  MOVLW  01
6C84:  MOVLB  4
6C86:  SUBWF  x38,W
6C88:  CLRF   03
6C8A:  ADDLW  5E
6C8C:  MOVWF  FE9
6C8E:  MOVLW  05
6C90:  ADDWFC 03,W
6C92:  MOVWF  FEA
6C94:  DECF   FEF,F
....................                      if(Contrasena[i-1]<0) 
6C96:  MOVLW  01
6C98:  SUBWF  x38,W
6C9A:  CLRF   03
6C9C:  ADDLW  5E
6C9E:  MOVWF  FE9
6CA0:  MOVLW  05
6CA2:  ADDWFC 03,W
6CA4:  MOVWF  FEA
6CA6:  BTFSC  FEF.7
6CA8:  BRA    6CAC
6CAA:  BRA    6CC0
....................                         {Contrasena[i-1]=9;} 
6CAC:  MOVLW  01
6CAE:  SUBWF  x38,W
6CB0:  CLRF   03
6CB2:  ADDLW  5E
6CB4:  MOVWF  FE9
6CB6:  MOVLW  05
6CB8:  ADDWFC 03,W
6CBA:  MOVWF  FEA
6CBC:  MOVLW  09
6CBE:  MOVWF  FEF
....................                    displayContrasena(Contrasena[i-1],i*20,30,1);} 
6CC0:  MOVLW  01
6CC2:  SUBWF  x38,W
6CC4:  CLRF   03
6CC6:  ADDLW  5E
6CC8:  MOVWF  FE9
6CCA:  MOVLW  05
6CCC:  ADDWFC 03,W
6CCE:  MOVWF  FEA
6CD0:  MOVFF  FEF,630
6CD4:  MOVF   x38,W
6CD6:  MULLW  14
6CD8:  MOVFF  FF3,631
6CDC:  MOVLB  6
6CDE:  MOVFF  630,632
6CE2:  MOVFF  631,633
6CE6:  MOVLW  1E
6CE8:  MOVWF  x34
6CEA:  MOVLW  01
6CEC:  MOVWF  x35
6CEE:  MOVLB  0
6CF0:  CALL   202C
....................                   else 
6CF4:  BRA    6D2A
....................                   {displayContrasena(Contrasena[i-1],i*20,30,0);} 
6CF6:  MOVLW  01
6CF8:  MOVLB  4
6CFA:  SUBWF  x38,W
6CFC:  CLRF   03
6CFE:  ADDLW  5E
6D00:  MOVWF  FE9
6D02:  MOVLW  05
6D04:  ADDWFC 03,W
6D06:  MOVWF  FEA
6D08:  MOVFF  FEF,630
6D0C:  MOVF   x38,W
6D0E:  MULLW  14
6D10:  MOVFF  FF3,631
6D14:  MOVLB  6
6D16:  MOVFF  630,632
6D1A:  MOVFF  631,633
6D1E:  MOVLW  1E
6D20:  MOVWF  x34
6D22:  CLRF   x35
6D24:  MOVLB  0
6D26:  CALL   202C
....................                }       
6D2A:  MOVLB  4
6D2C:  INCF   x38,F
6D2E:  BRA    6C74
....................             }      
....................       } 
....................          else 
6D30:  BRA    6D34
....................             {Flanco2 = 0;}   
6D32:  BCF    x4C.2
....................              
....................       if(RIGHT)//Si oprime SET 
6D34:  BSF    F92.2
6D36:  BTFSS  F80.2
6D38:  BRA    6DD8
....................       {  if(Flanco1 == 0)  
6D3A:  BTFSC  x4C.1
6D3C:  BRA    6DD6
....................             {Flanco1 = 1;delay_ms(30);unidad++; 
6D3E:  BSF    x4C.1
6D40:  MOVLW  1E
6D42:  MOVLB  6
6D44:  MOVWF  x31
6D46:  MOVLB  0
6D48:  CALL   126A
6D4C:  MOVLB  5
6D4E:  INCF   x0E,F
....................                for(i=1;i<=4;i++) 
6D50:  MOVLW  01
6D52:  MOVLB  4
6D54:  MOVWF  x38
6D56:  MOVF   x38,W
6D58:  SUBLW  04
6D5A:  BNC   6DD6
....................                { 
....................                   if(unidad==i) 
6D5C:  MOVF   x38,W
6D5E:  MOVLB  5
6D60:  SUBWF  x0E,W
6D62:  BNZ   6D9C
....................                   {displayContrasena(Contrasena[i-1],i*20,30,1);} 
6D64:  MOVLW  01
6D66:  MOVLB  4
6D68:  SUBWF  x38,W
6D6A:  CLRF   03
6D6C:  ADDLW  5E
6D6E:  MOVWF  FE9
6D70:  MOVLW  05
6D72:  ADDWFC 03,W
6D74:  MOVWF  FEA
6D76:  MOVFF  FEF,630
6D7A:  MOVF   x38,W
6D7C:  MULLW  14
6D7E:  MOVFF  FF3,631
6D82:  MOVLB  6
6D84:  MOVFF  630,632
6D88:  MOVFF  631,633
6D8C:  MOVLW  1E
6D8E:  MOVWF  x34
6D90:  MOVLW  01
6D92:  MOVWF  x35
6D94:  MOVLB  0
6D96:  CALL   202C
....................                   else 
6D9A:  BRA    6DD0
....................                   {displayContrasena(Contrasena[i-1],i*20,30,0);} 
6D9C:  MOVLW  01
6D9E:  MOVLB  4
6DA0:  SUBWF  x38,W
6DA2:  CLRF   03
6DA4:  ADDLW  5E
6DA6:  MOVWF  FE9
6DA8:  MOVLW  05
6DAA:  ADDWFC 03,W
6DAC:  MOVWF  FEA
6DAE:  MOVFF  FEF,630
6DB2:  MOVF   x38,W
6DB4:  MULLW  14
6DB6:  MOVFF  FF3,631
6DBA:  MOVLB  6
6DBC:  MOVFF  630,632
6DC0:  MOVFF  631,633
6DC4:  MOVLW  1E
6DC6:  MOVWF  x34
6DC8:  CLRF   x35
6DCA:  MOVLB  0
6DCC:  CALL   202C
....................                } 
6DD0:  MOVLB  4
6DD2:  INCF   x38,F
6DD4:  BRA    6D56
....................             } 
....................       } 
....................          else 
6DD6:  BRA    6DDA
....................             {Flanco1 = 0;}   
6DD8:  BCF    x4C.1
....................              
....................       if(LEFT)//Si oprime boton de Toma. 
6DDA:  BSF    F92.3
6DDC:  BTFSS  F80.3
6DDE:  BRA    6E1C
....................       { 
....................          delay_ms(700); 
6DE0:  MOVLW  04
6DE2:  MOVLB  6
6DE4:  MOVWF  x30
6DE6:  MOVLW  AF
6DE8:  MOVWF  x31
6DEA:  MOVLB  0
6DEC:  CALL   126A
6DF0:  MOVLB  6
6DF2:  DECFSZ x30,F
6DF4:  BRA    6DE6
....................          if(unidad==1) 
6DF6:  MOVLB  5
6DF8:  DECFSZ x0E,W
6DFA:  BRA    6E0E
....................          { 
....................             Menu=3;glcd_fillscreen(OFF); 
6DFC:  MOVLW  03
6DFE:  MOVWF  x0D
6E00:  MOVLB  6
6E02:  CLRF   x31
6E04:  MOVLB  0
6E06:  CALL   20E2
....................          } 
....................          else 
6E0A:  BRA    6E1C
6E0C:  MOVLB  5
....................          { 
....................             Menu=3;glcd_fillscreen(OFF); 
6E0E:  MOVLW  03
6E10:  MOVWF  x0D
6E12:  MOVLB  6
6E14:  CLRF   x31
6E16:  MOVLB  0
6E18:  CALL   20E2
....................          } 
....................       } 
....................              
....................       if(unidad>4) 
6E1C:  MOVLB  5
6E1E:  MOVF   x0E,W
6E20:  SUBLW  04
6E22:  BC    6ED8
....................       {Opcion=1;glcd_fillscreen(OFF);unidad=1;n=0; 
6E24:  MOVLW  01
6E26:  MOVWF  x0F
6E28:  MOVLB  6
6E2A:  CLRF   x31
6E2C:  MOVLB  0
6E2E:  CALL   20E2
6E32:  MOVLW  01
6E34:  MOVLB  5
6E36:  MOVWF  x0E
6E38:  MOVLB  4
6E3A:  BCF    x4E.7
....................          if((Contrasena[0]==Password[0])&&(Contrasena[1]==Password[1])&&(Contrasena[2]==Password[2])&&(Contrasena[3]==Password[3])) 
6E3C:  MOVLB  5
6E3E:  MOVF   x62,W
6E40:  SUBWF  x5E,W
6E42:  BNZ   6E96
6E44:  MOVF   x63,W
6E46:  SUBWF  x5F,W
6E48:  BNZ   6E96
6E4A:  MOVF   x64,W
6E4C:  SUBWF  x60,W
6E4E:  BNZ   6E96
6E50:  MOVF   x65,W
6E52:  SUBWF  x61,W
6E54:  BNZ   6E96
....................          {glcd_imagen(1);glcd_update();Menu=211;delay_ms(1000);glcd_fillScreen(OFF);Password[0]=0;Password[1]=0;Password[2]=0;Password[3]=0;} 
6E56:  MOVLW  01
6E58:  MOVLB  6
6E5A:  MOVWF  x30
6E5C:  MOVLB  0
6E5E:  CALL   2F30
6E62:  CALL   19D6
6E66:  MOVLW  D3
6E68:  MOVLB  5
6E6A:  MOVWF  x0D
6E6C:  MOVLW  04
6E6E:  MOVLB  6
6E70:  MOVWF  x30
6E72:  MOVLW  FA
6E74:  MOVWF  x31
6E76:  MOVLB  0
6E78:  CALL   126A
6E7C:  MOVLB  6
6E7E:  DECFSZ x30,F
6E80:  BRA    6E72
6E82:  CLRF   x31
6E84:  MOVLB  0
6E86:  CALL   20E2
6E8A:  MOVLB  5
6E8C:  CLRF   x62
6E8E:  CLRF   x63
6E90:  CLRF   x64
6E92:  CLRF   x65
....................          else 
6E94:  BRA    6ED8
....................          {glcd_imagen(2);glcd_update();Menu=3;delay_ms(1000);Contrasena[0]=0;Contrasena[1]=0;Contrasena[2]=0;Contrasena[3]=0;glcd_fillScreen(OFF);}   
6E96:  MOVLW  02
6E98:  MOVLB  6
6E9A:  MOVWF  x30
6E9C:  MOVLB  0
6E9E:  CALL   2F30
6EA2:  CALL   19D6
6EA6:  MOVLW  03
6EA8:  MOVLB  5
6EAA:  MOVWF  x0D
6EAC:  MOVLW  04
6EAE:  MOVLB  6
6EB0:  MOVWF  x30
6EB2:  MOVLW  FA
6EB4:  MOVWF  x31
6EB6:  MOVLB  0
6EB8:  CALL   126A
6EBC:  MOVLB  6
6EBE:  DECFSZ x30,F
6EC0:  BRA    6EB2
6EC2:  MOVLB  5
6EC4:  CLRF   x5E
6EC6:  CLRF   x5F
6EC8:  CLRF   x60
6ECA:  CLRF   x61
6ECC:  MOVLB  6
6ECE:  CLRF   x31
6ED0:  MOVLB  0
6ED2:  CALL   20E2
6ED6:  MOVLB  5
....................       } 
....................      
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==211){ //Menu de Cambio Clave. 
6ED8:  MOVF   x0D,W
6EDA:  SUBLW  D3
6EDC:  BTFSS  FD8.2
6EDE:  BRA    72E8
....................        
....................       if(n==0) 
6EE0:  MOVLB  4
6EE2:  BTFSC  x4E.7
6EE4:  BRA    6F44
....................       {displayContrasena(Password[0],20,30,1);displayContrasena(Password[1],40,30,0); 
6EE6:  MOVFF  562,632
6EEA:  MOVLW  14
6EEC:  MOVLB  6
6EEE:  MOVWF  x33
6EF0:  MOVLW  1E
6EF2:  MOVWF  x34
6EF4:  MOVLW  01
6EF6:  MOVWF  x35
6EF8:  MOVLB  0
6EFA:  CALL   202C
6EFE:  MOVFF  563,632
6F02:  MOVLW  28
6F04:  MOVLB  6
6F06:  MOVWF  x33
6F08:  MOVLW  1E
6F0A:  MOVWF  x34
6F0C:  CLRF   x35
6F0E:  MOVLB  0
6F10:  CALL   202C
....................       displayContrasena(Password[2],60,30,0);displayContrasena(Password[3],80,30,0);n++;} 
6F14:  MOVFF  564,632
6F18:  MOVLW  3C
6F1A:  MOVLB  6
6F1C:  MOVWF  x33
6F1E:  MOVLW  1E
6F20:  MOVWF  x34
6F22:  CLRF   x35
6F24:  MOVLB  0
6F26:  CALL   202C
6F2A:  MOVFF  565,632
6F2E:  MOVLW  50
6F30:  MOVLB  6
6F32:  MOVWF  x33
6F34:  MOVLW  1E
6F36:  MOVWF  x34
6F38:  CLRF   x35
6F3A:  MOVLB  0
6F3C:  CALL   202C
6F40:  MOVLB  4
6F42:  BTG    x4E.7
....................       strcpy(Menus.Letra,"Clave Nueva"); 
6F44:  MOVLW  06
6F46:  MOVWF  FEA
6F48:  MOVLW  1A
6F4A:  MOVWF  FE9
6F4C:  MOVFF  FF2,630
6F50:  BCF    FF2.7
6F52:  MOVLW  00
6F54:  MOVLB  0
6F56:  CALL   10C8
6F5A:  TBLRD*-
6F5C:  TBLRD*+
6F5E:  MOVF   FF5,W
6F60:  MOVWF  FEE
6F62:  IORLW  00
6F64:  BNZ   6F5C
6F66:  MOVLB  6
6F68:  BTFSC  x30.7
6F6A:  BSF    FF2.7
....................       displayMenu(Menus.Letra,0,0,1,2); 
6F6C:  MOVLW  06
6F6E:  MOVWF  x31
6F70:  MOVLW  1A
6F72:  MOVWF  x30
6F74:  CLRF   x32
6F76:  CLRF   x33
6F78:  MOVLW  01
6F7A:  MOVWF  x34
6F7C:  MOVLW  02
6F7E:  MOVWF  x35
6F80:  MOVLB  0
6F82:  CALL   213C
....................          
....................       if(UP)//Si oprime hacia arriba 
6F86:  BSF    F92.0
6F88:  BTFSS  F80.0
6F8A:  BRA    7066
....................       {  if(Flanco == 0)  
6F8C:  MOVLB  4
6F8E:  BTFSC  x4C.0
6F90:  BRA    7064
....................             {Flanco = 1;delay_ms(30); 
6F92:  BSF    x4C.0
6F94:  MOVLW  1E
6F96:  MOVLB  6
6F98:  MOVWF  x31
6F9A:  MOVLB  0
6F9C:  CALL   126A
....................             for(i=1;i<=4;i++) 
6FA0:  MOVLW  01
6FA2:  MOVLB  4
6FA4:  MOVWF  x38
6FA6:  MOVF   x38,W
6FA8:  SUBLW  04
6FAA:  BNC   7064
....................                { 
....................                   if(unidad==i) 
6FAC:  MOVF   x38,W
6FAE:  MOVLB  5
6FB0:  SUBWF  x0E,W
6FB2:  BNZ   702A
....................                   {Password[i-1]++; 
6FB4:  MOVLW  01
6FB6:  MOVLB  4
6FB8:  SUBWF  x38,W
6FBA:  CLRF   03
6FBC:  ADDLW  62
6FBE:  MOVWF  FE9
6FC0:  MOVLW  05
6FC2:  ADDWFC 03,W
6FC4:  MOVWF  FEA
6FC6:  INCF   FEF,F
....................                   if(Password[i-1]>9) 
6FC8:  MOVLW  01
6FCA:  SUBWF  x38,W
6FCC:  CLRF   03
6FCE:  ADDLW  62
6FD0:  MOVWF  FE9
6FD2:  MOVLW  05
6FD4:  ADDWFC 03,W
6FD6:  MOVWF  FEA
6FD8:  BTFSC  FEF.7
6FDA:  BRA    6FF4
6FDC:  MOVF   FEF,W
6FDE:  SUBLW  09
6FE0:  BC    6FF4
....................                         {Password[i-1]=0;} 
6FE2:  MOVLW  01
6FE4:  SUBWF  x38,W
6FE6:  CLRF   03
6FE8:  ADDLW  62
6FEA:  MOVWF  FE9
6FEC:  MOVLW  05
6FEE:  ADDWFC 03,W
6FF0:  MOVWF  FEA
6FF2:  CLRF   FEF
....................                   displayContrasena(Password[i-1],i*20,30,1);} 
6FF4:  MOVLW  01
6FF6:  SUBWF  x38,W
6FF8:  CLRF   03
6FFA:  ADDLW  62
6FFC:  MOVWF  FE9
6FFE:  MOVLW  05
7000:  ADDWFC 03,W
7002:  MOVWF  FEA
7004:  MOVFF  FEF,630
7008:  MOVF   x38,W
700A:  MULLW  14
700C:  MOVFF  FF3,631
7010:  MOVLB  6
7012:  MOVFF  630,632
7016:  MOVFF  631,633
701A:  MOVLW  1E
701C:  MOVWF  x34
701E:  MOVLW  01
7020:  MOVWF  x35
7022:  MOVLB  0
7024:  CALL   202C
....................                   else 
7028:  BRA    705E
....................                   {displayContrasena(Password[i-1],i*20,30,0);} 
702A:  MOVLW  01
702C:  MOVLB  4
702E:  SUBWF  x38,W
7030:  CLRF   03
7032:  ADDLW  62
7034:  MOVWF  FE9
7036:  MOVLW  05
7038:  ADDWFC 03,W
703A:  MOVWF  FEA
703C:  MOVFF  FEF,630
7040:  MOVF   x38,W
7042:  MULLW  14
7044:  MOVFF  FF3,631
7048:  MOVLB  6
704A:  MOVFF  630,632
704E:  MOVFF  631,633
7052:  MOVLW  1E
7054:  MOVWF  x34
7056:  CLRF   x35
7058:  MOVLB  0
705A:  CALL   202C
....................                } 
705E:  MOVLB  4
7060:  INCF   x38,F
7062:  BRA    6FA6
....................             } 
....................       } 
....................          else 
7064:  BRA    706A
....................             {Flanco = 0;} 
7066:  MOVLB  4
7068:  BCF    x4C.0
....................              
....................       if(DOWN)//Si oprime hacia abajo 
706A:  BSF    F92.1
706C:  BTFSS  F80.1
706E:  BRA    7146
....................       {  if(Flanco2 == 0)  
7070:  BTFSC  x4C.2
7072:  BRA    7144
....................             {Flanco2 = 1;delay_ms(30); 
7074:  BSF    x4C.2
7076:  MOVLW  1E
7078:  MOVLB  6
707A:  MOVWF  x31
707C:  MOVLB  0
707E:  CALL   126A
....................                for(i=1;i<=4;i++) 
7082:  MOVLW  01
7084:  MOVLB  4
7086:  MOVWF  x38
7088:  MOVF   x38,W
708A:  SUBLW  04
708C:  BNC   7144
....................                { 
....................                   if(unidad==i) 
708E:  MOVF   x38,W
7090:  MOVLB  5
7092:  SUBWF  x0E,W
7094:  BNZ   710A
....................                   {Password[i-1]--;  
7096:  MOVLW  01
7098:  MOVLB  4
709A:  SUBWF  x38,W
709C:  CLRF   03
709E:  ADDLW  62
70A0:  MOVWF  FE9
70A2:  MOVLW  05
70A4:  ADDWFC 03,W
70A6:  MOVWF  FEA
70A8:  DECF   FEF,F
....................                      if(Password[i-1]<0) 
70AA:  MOVLW  01
70AC:  SUBWF  x38,W
70AE:  CLRF   03
70B0:  ADDLW  62
70B2:  MOVWF  FE9
70B4:  MOVLW  05
70B6:  ADDWFC 03,W
70B8:  MOVWF  FEA
70BA:  BTFSC  FEF.7
70BC:  BRA    70C0
70BE:  BRA    70D4
....................                         {Password[i-1]=9;} 
70C0:  MOVLW  01
70C2:  SUBWF  x38,W
70C4:  CLRF   03
70C6:  ADDLW  62
70C8:  MOVWF  FE9
70CA:  MOVLW  05
70CC:  ADDWFC 03,W
70CE:  MOVWF  FEA
70D0:  MOVLW  09
70D2:  MOVWF  FEF
....................                    displayContrasena(Password[i-1],i*20,30,1);} 
70D4:  MOVLW  01
70D6:  SUBWF  x38,W
70D8:  CLRF   03
70DA:  ADDLW  62
70DC:  MOVWF  FE9
70DE:  MOVLW  05
70E0:  ADDWFC 03,W
70E2:  MOVWF  FEA
70E4:  MOVFF  FEF,630
70E8:  MOVF   x38,W
70EA:  MULLW  14
70EC:  MOVFF  FF3,631
70F0:  MOVLB  6
70F2:  MOVFF  630,632
70F6:  MOVFF  631,633
70FA:  MOVLW  1E
70FC:  MOVWF  x34
70FE:  MOVLW  01
7100:  MOVWF  x35
7102:  MOVLB  0
7104:  CALL   202C
....................                   else 
7108:  BRA    713E
....................                   {displayContrasena(Password[i-1],i*20,30,0);} 
710A:  MOVLW  01
710C:  MOVLB  4
710E:  SUBWF  x38,W
7110:  CLRF   03
7112:  ADDLW  62
7114:  MOVWF  FE9
7116:  MOVLW  05
7118:  ADDWFC 03,W
711A:  MOVWF  FEA
711C:  MOVFF  FEF,630
7120:  MOVF   x38,W
7122:  MULLW  14
7124:  MOVFF  FF3,631
7128:  MOVLB  6
712A:  MOVFF  630,632
712E:  MOVFF  631,633
7132:  MOVLW  1E
7134:  MOVWF  x34
7136:  CLRF   x35
7138:  MOVLB  0
713A:  CALL   202C
....................                }       
713E:  MOVLB  4
7140:  INCF   x38,F
7142:  BRA    7088
....................             }      
....................       } 
....................          else 
7144:  BRA    7148
....................             {Flanco2 = 0;}   
7146:  BCF    x4C.2
....................              
....................       if(RIGHT)//Si oprime SET 
7148:  BSF    F92.2
714A:  BTFSS  F80.2
714C:  BRA    71EC
....................       {  if(Flanco1 == 0)  
714E:  BTFSC  x4C.1
7150:  BRA    71EA
....................             {Flanco1 = 1;delay_ms(30);unidad++; 
7152:  BSF    x4C.1
7154:  MOVLW  1E
7156:  MOVLB  6
7158:  MOVWF  x31
715A:  MOVLB  0
715C:  CALL   126A
7160:  MOVLB  5
7162:  INCF   x0E,F
....................                for(i=1;i<=4;i++) 
7164:  MOVLW  01
7166:  MOVLB  4
7168:  MOVWF  x38
716A:  MOVF   x38,W
716C:  SUBLW  04
716E:  BNC   71EA
....................                { 
....................                   if(unidad==i) 
7170:  MOVF   x38,W
7172:  MOVLB  5
7174:  SUBWF  x0E,W
7176:  BNZ   71B0
....................                   {displayContrasena(Password[i-1],i*20,30,1);} 
7178:  MOVLW  01
717A:  MOVLB  4
717C:  SUBWF  x38,W
717E:  CLRF   03
7180:  ADDLW  62
7182:  MOVWF  FE9
7184:  MOVLW  05
7186:  ADDWFC 03,W
7188:  MOVWF  FEA
718A:  MOVFF  FEF,630
718E:  MOVF   x38,W
7190:  MULLW  14
7192:  MOVFF  FF3,631
7196:  MOVLB  6
7198:  MOVFF  630,632
719C:  MOVFF  631,633
71A0:  MOVLW  1E
71A2:  MOVWF  x34
71A4:  MOVLW  01
71A6:  MOVWF  x35
71A8:  MOVLB  0
71AA:  CALL   202C
....................                   else 
71AE:  BRA    71E4
....................                   {displayContrasena(Password[i-1],i*20,30,0);} 
71B0:  MOVLW  01
71B2:  MOVLB  4
71B4:  SUBWF  x38,W
71B6:  CLRF   03
71B8:  ADDLW  62
71BA:  MOVWF  FE9
71BC:  MOVLW  05
71BE:  ADDWFC 03,W
71C0:  MOVWF  FEA
71C2:  MOVFF  FEF,630
71C6:  MOVF   x38,W
71C8:  MULLW  14
71CA:  MOVFF  FF3,631
71CE:  MOVLB  6
71D0:  MOVFF  630,632
71D4:  MOVFF  631,633
71D8:  MOVLW  1E
71DA:  MOVWF  x34
71DC:  CLRF   x35
71DE:  MOVLB  0
71E0:  CALL   202C
....................                } 
71E4:  MOVLB  4
71E6:  INCF   x38,F
71E8:  BRA    716A
....................             } 
....................       } 
....................          else 
71EA:  BRA    71EE
....................             {Flanco1 = 0;}   
71EC:  BCF    x4C.1
....................       if(unidad>4) 
71EE:  MOVLB  5
71F0:  MOVF   x0E,W
71F2:  SUBLW  04
71F4:  BC    72E8
....................       {Opcion=1;glcd_fillscreen(OFF);unidad=1;n=0; 
71F6:  MOVLW  01
71F8:  MOVWF  x0F
71FA:  MOVLB  6
71FC:  CLRF   x31
71FE:  MOVLB  0
7200:  CALL   20E2
7204:  MOVLW  01
7206:  MOVLB  5
7208:  MOVWF  x0E
720A:  MOVLB  4
720C:  BCF    x4E.7
....................       write_eeprom(0,Password[0]);write_eeprom(1,Password[1]);write_eeprom(2,Password[2]);write_eeprom(3,Password[3]); 
720E:  CLRF   FA9
7210:  MOVFF  562,FA8
7214:  BCF    FA6.6
7216:  BCF    FA6.7
7218:  BSF    FA6.2
721A:  MOVF   FF2,W
721C:  MOVWF  00
721E:  BCF    FF2.7
7220:  MOVLB  F
7222:  MOVLW  55
7224:  MOVWF  FA7
7226:  MOVLW  AA
7228:  MOVWF  FA7
722A:  BSF    FA6.1
722C:  BTFSC  FA6.1
722E:  BRA    722C
7230:  BCF    FA6.2
7232:  MOVF   00,W
7234:  IORWF  FF2,F
7236:  MOVLW  01
7238:  MOVWF  FA9
723A:  MOVFF  563,FA8
723E:  BCF    FA6.6
7240:  BCF    FA6.7
7242:  BSF    FA6.2
7244:  MOVF   FF2,W
7246:  MOVWF  00
7248:  BCF    FF2.7
724A:  MOVLW  55
724C:  MOVWF  FA7
724E:  MOVLW  AA
7250:  MOVWF  FA7
7252:  BSF    FA6.1
7254:  BTFSC  FA6.1
7256:  BRA    7254
7258:  BCF    FA6.2
725A:  MOVF   00,W
725C:  IORWF  FF2,F
725E:  MOVLW  02
7260:  MOVWF  FA9
7262:  MOVFF  564,FA8
7266:  BCF    FA6.6
7268:  BCF    FA6.7
726A:  BSF    FA6.2
726C:  MOVF   FF2,W
726E:  MOVWF  00
7270:  BCF    FF2.7
7272:  MOVLW  55
7274:  MOVWF  FA7
7276:  MOVLW  AA
7278:  MOVWF  FA7
727A:  BSF    FA6.1
727C:  BTFSC  FA6.1
727E:  BRA    727C
7280:  BCF    FA6.2
7282:  MOVF   00,W
7284:  IORWF  FF2,F
7286:  MOVLW  03
7288:  MOVWF  FA9
728A:  MOVFF  565,FA8
728E:  BCF    FA6.6
7290:  BCF    FA6.7
7292:  BSF    FA6.2
7294:  MOVF   FF2,W
7296:  MOVWF  00
7298:  BCF    FF2.7
729A:  MOVLW  55
729C:  MOVWF  FA7
729E:  MOVLW  AA
72A0:  MOVWF  FA7
72A2:  BSF    FA6.1
72A4:  BTFSC  FA6.1
72A6:  BRA    72A4
72A8:  BCF    FA6.2
72AA:  MOVF   00,W
72AC:  IORWF  FF2,F
....................        glcd_imagen(1);glcd_update();Menu=211;delay_ms(1000);glcd_fillScreen(OFF);Menu=3; 
72AE:  MOVLW  01
72B0:  MOVLB  6
72B2:  MOVWF  x30
72B4:  MOVLB  0
72B6:  CALL   2F30
72BA:  CALL   19D6
72BE:  MOVLW  D3
72C0:  MOVLB  5
72C2:  MOVWF  x0D
72C4:  MOVLW  04
72C6:  MOVLB  6
72C8:  MOVWF  x30
72CA:  MOVLW  FA
72CC:  MOVWF  x31
72CE:  MOVLB  0
72D0:  CALL   126A
72D4:  MOVLB  6
72D6:  DECFSZ x30,F
72D8:  BRA    72CA
72DA:  CLRF   x31
72DC:  MOVLB  0
72DE:  CALL   20E2
72E2:  MOVLW  03
72E4:  MOVLB  5
72E6:  MOVWF  x0D
....................       } 
....................      
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==31){ //Menu de Mantenimiento. 
72E8:  MOVF   x0D,W
72EA:  SUBLW  1F
72EC:  BTFSS  FD8.2
72EE:  BRA    75C0
....................        
....................          glcd_text57(0, 29, Vida_Filtro, 1, ON); 
72F0:  MOVLB  6
72F2:  CLRF   x47
72F4:  MOVLW  1D
72F6:  MOVWF  x48
72F8:  MOVLW  04
72FA:  MOVWF  x4A
72FC:  MOVLW  E7
72FE:  MOVWF  x49
7300:  MOVLW  01
7302:  MOVWF  x4B
7304:  MOVWF  x4C
7306:  MOVLB  0
7308:  CALL   1D4A
....................          displayTiempo(Ttrabajo[3],60,28,0,1);displayTiempo(Ttrabajo[2],67,28,0,1);displayTiempo(Ttrabajo[1],74,28,0,1);displayTiempo(Ttrabajo[0],82,28,0,1); 
730C:  MOVFF  55D,630
7310:  MOVLW  3C
7312:  MOVLB  6
7314:  MOVWF  x31
7316:  MOVLW  1C
7318:  MOVWF  x32
731A:  CLRF   x33
731C:  MOVLW  01
731E:  MOVWF  x34
7320:  MOVLB  0
7322:  CALL   2208
7326:  MOVFF  55C,630
732A:  MOVLW  43
732C:  MOVLB  6
732E:  MOVWF  x31
7330:  MOVLW  1C
7332:  MOVWF  x32
7334:  CLRF   x33
7336:  MOVLW  01
7338:  MOVWF  x34
733A:  MOVLB  0
733C:  CALL   2208
7340:  MOVFF  55B,630
7344:  MOVLW  4A
7346:  MOVLB  6
7348:  MOVWF  x31
734A:  MOVLW  1C
734C:  MOVWF  x32
734E:  CLRF   x33
7350:  MOVLW  01
7352:  MOVWF  x34
7354:  MOVLB  0
7356:  CALL   2208
735A:  MOVFF  55A,630
735E:  MOVLW  52
7360:  MOVLB  6
7362:  MOVWF  x31
7364:  MOVLW  1C
7366:  MOVWF  x32
7368:  CLRF   x33
736A:  MOVLW  01
736C:  MOVWF  x34
736E:  MOVLB  0
7370:  CALL   2208
....................          glcd_text57(0, 43, Vida_UV, 1, ON); 
7374:  MOVLB  6
7376:  CLRF   x47
7378:  MOVLW  2B
737A:  MOVWF  x48
737C:  MOVLW  04
737E:  MOVWF  x4A
7380:  MOVLW  DF
7382:  MOVWF  x49
7384:  MOVLW  01
7386:  MOVWF  x4B
7388:  MOVWF  x4C
738A:  MOVLB  0
738C:  CALL   1D4A
....................          displayTiempo(Tuv[3],60,42,0,1);displayTiempo(Tuv[2],67,42,0,1);displayTiempo(Tuv[1],74,42,0,1);displayTiempo(Tuv[0],82,42,0,1);                  
7390:  MOVFF  551,630
7394:  MOVLW  3C
7396:  MOVLB  6
7398:  MOVWF  x31
739A:  MOVLW  2A
739C:  MOVWF  x32
739E:  CLRF   x33
73A0:  MOVLW  01
73A2:  MOVWF  x34
73A4:  MOVLB  0
73A6:  CALL   2208
73AA:  MOVFF  550,630
73AE:  MOVLW  43
73B0:  MOVLB  6
73B2:  MOVWF  x31
73B4:  MOVLW  2A
73B6:  MOVWF  x32
73B8:  CLRF   x33
73BA:  MOVLW  01
73BC:  MOVWF  x34
73BE:  MOVLB  0
73C0:  CALL   2208
73C4:  MOVFF  54F,630
73C8:  MOVLW  4A
73CA:  MOVLB  6
73CC:  MOVWF  x31
73CE:  MOVLW  2A
73D0:  MOVWF  x32
73D2:  CLRF   x33
73D4:  MOVLW  01
73D6:  MOVWF  x34
73D8:  MOVLB  0
73DA:  CALL   2208
73DE:  MOVFF  54E,630
73E2:  MOVLW  52
73E4:  MOVLB  6
73E6:  MOVWF  x31
73E8:  MOVLW  2A
73EA:  MOVWF  x32
73EC:  CLRF   x33
73EE:  MOVLW  01
73F0:  MOVWF  x34
73F2:  MOVLB  0
73F4:  CALL   2208
....................          LuzBlanca=5; 
73F8:  MOVLW  05
73FA:  MOVLB  5
73FC:  MOVWF  x1C
....................           
....................             if(UP) // Reinicia Tiempo de Luz UV 
73FE:  BSF    F92.0
7400:  BTFSS  F80.0
7402:  BRA    74D2
....................             { 
....................                delay_ms(2000); 
7404:  MOVLW  08
7406:  MOVLB  6
7408:  MOVWF  x30
740A:  MOVLW  FA
740C:  MOVWF  x31
740E:  MOVLB  0
7410:  CALL   126A
7414:  MOVLB  6
7416:  DECFSZ x30,F
7418:  BRA    740A
....................                   write_eeprom(12,0);write_eeprom(13,0);write_eeprom(14,0);write_eeprom(15,0); 
741A:  MOVLW  0C
741C:  MOVWF  FA9
741E:  CLRF   FA8
7420:  BCF    FA6.6
7422:  BCF    FA6.7
7424:  BSF    FA6.2
7426:  MOVF   FF2,W
7428:  MOVWF  00
742A:  BCF    FF2.7
742C:  MOVLB  F
742E:  MOVLW  55
7430:  MOVWF  FA7
7432:  MOVLW  AA
7434:  MOVWF  FA7
7436:  BSF    FA6.1
7438:  BTFSC  FA6.1
743A:  BRA    7438
743C:  BCF    FA6.2
743E:  MOVF   00,W
7440:  IORWF  FF2,F
7442:  MOVLW  0D
7444:  MOVWF  FA9
7446:  CLRF   FA8
7448:  BCF    FA6.6
744A:  BCF    FA6.7
744C:  BSF    FA6.2
744E:  MOVF   FF2,W
7450:  MOVWF  00
7452:  BCF    FF2.7
7454:  MOVLW  55
7456:  MOVWF  FA7
7458:  MOVLW  AA
745A:  MOVWF  FA7
745C:  BSF    FA6.1
745E:  BTFSC  FA6.1
7460:  BRA    745E
7462:  BCF    FA6.2
7464:  MOVF   00,W
7466:  IORWF  FF2,F
7468:  MOVLW  0E
746A:  MOVWF  FA9
746C:  CLRF   FA8
746E:  BCF    FA6.6
7470:  BCF    FA6.7
7472:  BSF    FA6.2
7474:  MOVF   FF2,W
7476:  MOVWF  00
7478:  BCF    FF2.7
747A:  MOVLW  55
747C:  MOVWF  FA7
747E:  MOVLW  AA
7480:  MOVWF  FA7
7482:  BSF    FA6.1
7484:  BTFSC  FA6.1
7486:  BRA    7484
7488:  BCF    FA6.2
748A:  MOVF   00,W
748C:  IORWF  FF2,F
748E:  MOVLW  0F
7490:  MOVWF  FA9
7492:  CLRF   FA8
7494:  BCF    FA6.6
7496:  BCF    FA6.7
7498:  BSF    FA6.2
749A:  MOVF   FF2,W
749C:  MOVWF  00
749E:  BCF    FF2.7
74A0:  MOVLW  55
74A2:  MOVWF  FA7
74A4:  MOVLW  AA
74A6:  MOVWF  FA7
74A8:  BSF    FA6.1
74AA:  BTFSC  FA6.1
74AC:  BRA    74AA
74AE:  BCF    FA6.2
74B0:  MOVF   00,W
74B2:  IORWF  FF2,F
....................                   Tuv[3]=0;Tuv[2]=0;Tuv[1]=0;Tuv[0]=0; 
74B4:  MOVLB  5
74B6:  CLRF   x51
74B8:  CLRF   x50
74BA:  CLRF   x4F
74BC:  CLRF   x4E
....................                   Menu=3;glcd_fillscreen(OFF);LuzBlanca=10; 
74BE:  MOVLW  03
74C0:  MOVWF  x0D
74C2:  MOVLB  6
74C4:  CLRF   x31
74C6:  MOVLB  0
74C8:  CALL   20E2
74CC:  MOVLW  0A
74CE:  MOVLB  5
74D0:  MOVWF  x1C
....................                 
....................             } 
....................             if(DOWN) // Reinicia Tiempo de Trabajo 
74D2:  BSF    F92.1
74D4:  BTFSS  F80.1
74D6:  BRA    75A6
....................             { 
....................                delay_ms(2000); 
74D8:  MOVLW  08
74DA:  MOVLB  6
74DC:  MOVWF  x30
74DE:  MOVLW  FA
74E0:  MOVWF  x31
74E2:  MOVLB  0
74E4:  CALL   126A
74E8:  MOVLB  6
74EA:  DECFSZ x30,F
74EC:  BRA    74DE
....................                   write_eeprom(16,0);write_eeprom(17,0);write_eeprom(18,0);write_eeprom(19,0); 
74EE:  MOVLW  10
74F0:  MOVWF  FA9
74F2:  CLRF   FA8
74F4:  BCF    FA6.6
74F6:  BCF    FA6.7
74F8:  BSF    FA6.2
74FA:  MOVF   FF2,W
74FC:  MOVWF  00
74FE:  BCF    FF2.7
7500:  MOVLB  F
7502:  MOVLW  55
7504:  MOVWF  FA7
7506:  MOVLW  AA
7508:  MOVWF  FA7
750A:  BSF    FA6.1
750C:  BTFSC  FA6.1
750E:  BRA    750C
7510:  BCF    FA6.2
7512:  MOVF   00,W
7514:  IORWF  FF2,F
7516:  MOVLW  11
7518:  MOVWF  FA9
751A:  CLRF   FA8
751C:  BCF    FA6.6
751E:  BCF    FA6.7
7520:  BSF    FA6.2
7522:  MOVF   FF2,W
7524:  MOVWF  00
7526:  BCF    FF2.7
7528:  MOVLW  55
752A:  MOVWF  FA7
752C:  MOVLW  AA
752E:  MOVWF  FA7
7530:  BSF    FA6.1
7532:  BTFSC  FA6.1
7534:  BRA    7532
7536:  BCF    FA6.2
7538:  MOVF   00,W
753A:  IORWF  FF2,F
753C:  MOVLW  12
753E:  MOVWF  FA9
7540:  CLRF   FA8
7542:  BCF    FA6.6
7544:  BCF    FA6.7
7546:  BSF    FA6.2
7548:  MOVF   FF2,W
754A:  MOVWF  00
754C:  BCF    FF2.7
754E:  MOVLW  55
7550:  MOVWF  FA7
7552:  MOVLW  AA
7554:  MOVWF  FA7
7556:  BSF    FA6.1
7558:  BTFSC  FA6.1
755A:  BRA    7558
755C:  BCF    FA6.2
755E:  MOVF   00,W
7560:  IORWF  FF2,F
7562:  MOVLW  13
7564:  MOVWF  FA9
7566:  CLRF   FA8
7568:  BCF    FA6.6
756A:  BCF    FA6.7
756C:  BSF    FA6.2
756E:  MOVF   FF2,W
7570:  MOVWF  00
7572:  BCF    FF2.7
7574:  MOVLW  55
7576:  MOVWF  FA7
7578:  MOVLW  AA
757A:  MOVWF  FA7
757C:  BSF    FA6.1
757E:  BTFSC  FA6.1
7580:  BRA    757E
7582:  BCF    FA6.2
7584:  MOVF   00,W
7586:  IORWF  FF2,F
....................                   Ttrabajo[3]=0;Ttrabajo[2]=0;Ttrabajo[1]=0;Ttrabajo[0]=0; 
7588:  MOVLB  5
758A:  CLRF   x5D
758C:  CLRF   x5C
758E:  CLRF   x5B
7590:  CLRF   x5A
....................                   Menu=3;glcd_fillscreen(OFF);LuzBlanca=10; 
7592:  MOVLW  03
7594:  MOVWF  x0D
7596:  MOVLB  6
7598:  CLRF   x31
759A:  MOVLB  0
759C:  CALL   20E2
75A0:  MOVLW  0A
75A2:  MOVLB  5
75A4:  MOVWF  x1C
....................             } 
....................              
....................             if(LEFT) 
75A6:  BSF    F92.3
75A8:  BTFSS  F80.3
75AA:  BRA    75C0
....................             { 
....................                Menu=3;glcd_fillscreen(OFF);LuzBlanca=10; 
75AC:  MOVLW  03
75AE:  MOVWF  x0D
75B0:  MOVLB  6
75B2:  CLRF   x31
75B4:  MOVLB  0
75B6:  CALL   20E2
75BA:  MOVLW  0A
75BC:  MOVLB  5
75BE:  MOVWF  x1C
....................             } 
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
....................  
.................... //_-------------------------------------------------------------------------------------------------------------------------------------------------------- 
....................       if(Menu==200){ //Menu de Inicio.   
75C0:  MOVF   x0D,W
75C2:  SUBLW  C8
75C4:  BTFSS  FD8.2
75C6:  BRA    7720
....................          Display_on; 
75C8:  BSF    F8D.0
75CA:  BCF    F96.0
....................          glcd_init(ON);             //Inicializa la glcd 
75CC:  MOVLW  01
75CE:  MOVLB  6
75D0:  MOVWF  x30
75D2:  MOVLB  0
75D4:  CALL   312E
....................          glcd_fillScreen(OFF);      //Limpia la pantalla 
75D8:  MOVLB  6
75DA:  CLRF   x31
75DC:  MOVLB  0
75DE:  CALL   20E2
....................          glcd_text57(0, 0, JP, 2, ON);glcd_text57(5, 20, Cabina, 1, ON);glcd_text57(10, 40, Clase, 2, ON);              
75E2:  MOVLB  6
75E4:  CLRF   x47
75E6:  CLRF   x48
75E8:  MOVLW  04
75EA:  MOVWF  x4A
75EC:  MOVLW  4F
75EE:  MOVWF  x49
75F0:  MOVLW  02
75F2:  MOVWF  x4B
75F4:  MOVLW  01
75F6:  MOVWF  x4C
75F8:  MOVLB  0
75FA:  CALL   1D4A
75FE:  MOVLW  05
7600:  MOVLB  6
7602:  MOVWF  x47
7604:  MOVLW  14
7606:  MOVWF  x48
7608:  MOVLW  04
760A:  MOVWF  x4A
760C:  MOVLW  5B
760E:  MOVWF  x49
7610:  MOVLW  01
7612:  MOVWF  x4B
7614:  MOVWF  x4C
7616:  MOVLB  0
7618:  CALL   1D4A
761C:  MOVLW  0A
761E:  MOVLB  6
7620:  MOVWF  x47
7622:  MOVLW  28
7624:  MOVWF  x48
7626:  MOVLW  04
7628:  MOVWF  x4A
762A:  MOVLW  79
762C:  MOVWF  x49
762E:  MOVLW  02
7630:  MOVWF  x4B
7632:  MOVLW  01
7634:  MOVWF  x4C
7636:  MOVLB  0
7638:  CALL   1D4A
....................          glcd_update();    
763C:  CALL   19D6
....................          delay_ms(3000); 
7640:  MOVLW  0C
7642:  MOVLB  6
7644:  MOVWF  x30
7646:  MOVLW  FA
7648:  MOVWF  x31
764A:  MOVLB  0
764C:  CALL   126A
7650:  MOVLB  6
7652:  DECFSZ x30,F
7654:  BRA    7646
....................                      
....................          glcd_fillScreen(OFF);      //Limpia la pantalla 
7656:  CLRF   x31
7658:  MOVLB  0
765A:  CALL   20E2
....................          displayContrasena(Contrasena[0],20,30,1);displayContrasena(Contrasena[1],40,30,0); 
765E:  MOVFF  55E,632
7662:  MOVLW  14
7664:  MOVLB  6
7666:  MOVWF  x33
7668:  MOVLW  1E
766A:  MOVWF  x34
766C:  MOVLW  01
766E:  MOVWF  x35
7670:  MOVLB  0
7672:  CALL   202C
7676:  MOVFF  55F,632
767A:  MOVLW  28
767C:  MOVLB  6
767E:  MOVWF  x33
7680:  MOVLW  1E
7682:  MOVWF  x34
7684:  CLRF   x35
7686:  MOVLB  0
7688:  CALL   202C
....................          displayContrasena(Contrasena[2],60,30,0);displayContrasena(Contrasena[0],80,30,0); 
768C:  MOVFF  560,632
7690:  MOVLW  3C
7692:  MOVLB  6
7694:  MOVWF  x33
7696:  MOVLW  1E
7698:  MOVWF  x34
769A:  CLRF   x35
769C:  MOVLB  0
769E:  CALL   202C
76A2:  MOVFF  55E,632
76A6:  MOVLW  50
76A8:  MOVLB  6
76AA:  MOVWF  x33
76AC:  MOVLW  1E
76AE:  MOVWF  x34
76B0:  CLRF   x35
76B2:  MOVLB  0
76B4:  CALL   202C
....................          glcd_rect(0, 0, 127, 25, YES, ON);strcpy(Menus.Letra,"Clave");glcd_text57(25, 1, Menus.Letra, 3, OFF);    
76B8:  MOVLB  6
76BA:  CLRF   x47
76BC:  CLRF   x48
76BE:  MOVLW  7F
76C0:  MOVWF  x49
76C2:  MOVLW  19
76C4:  MOVWF  x4A
76C6:  MOVLW  01
76C8:  MOVWF  x4B
76CA:  MOVWF  x4C
76CC:  MOVLB  0
76CE:  CALL   1C88
76D2:  MOVLW  06
76D4:  MOVWF  FEA
76D6:  MOVLW  1A
76D8:  MOVWF  FE9
76DA:  MOVFF  FF2,630
76DE:  BCF    FF2.7
76E0:  MOVLW  00
76E2:  CALL   0EEE
76E6:  TBLRD*-
76E8:  TBLRD*+
76EA:  MOVF   FF5,W
76EC:  MOVWF  FEE
76EE:  IORLW  00
76F0:  BNZ   76E8
76F2:  MOVLB  6
76F4:  BTFSC  x30.7
76F6:  BSF    FF2.7
76F8:  MOVLW  19
76FA:  MOVWF  x47
76FC:  MOVLW  01
76FE:  MOVWF  x48
7700:  MOVLW  06
7702:  MOVWF  x4A
7704:  MOVLW  1A
7706:  MOVWF  x49
7708:  MOVLW  03
770A:  MOVWF  x4B
770C:  CLRF   x4C
770E:  MOVLB  0
7710:  CALL   1D4A
....................          Menu=0; 
7714:  MOVLB  5
7716:  CLRF   x0D
....................       Envio_Esclavos(); 
7718:  MOVLB  0
771A:  CALL   195A
771E:  MOVLB  5
....................     } 
.................... //_--------------------------------------------------------------------------------------------------------------------------------------------------------        
....................  
....................    if(tiemporeset>=60) 
7720:  MOVF   x15,W
7722:  SUBLW  3B
7724:  BC    7736
....................    { 
....................       glcd_init(ON); 
7726:  MOVLW  01
7728:  MOVLB  6
772A:  MOVWF  x30
772C:  MOVLB  0
772E:  CALL   312E
....................       tiemporeset=0; 
7732:  MOVLB  5
7734:  CLRF   x15
....................    }  
.................... } 
7736:  GOTO   3ECA
....................  
.................... } 
....................  
....................  
773A:  SLEEP 

Configuration Fuses:
   Word  1: CE20   IESO FCMEN HSPLL PLL1 CPUDIV1 USBDIV
   Word  2: 1E3E   BROWNOUT NOWDT BORV20 PUT WDT32768 VREGEN
   Word  3: 0700   PBADEN CCP2C1 NOMCLR LPT1OSC
   Word  4: 0081   STVREN NODEBUG NOLVP NOXINST NOICPRT
   Word  5: C00F   NOPROTECT NOCPD NOCPB
   Word  6: E00F   NOWRT NOWRTD NOWRTC NOWRTB
   Word  7: 400F   NOEBTR NOEBTRB
